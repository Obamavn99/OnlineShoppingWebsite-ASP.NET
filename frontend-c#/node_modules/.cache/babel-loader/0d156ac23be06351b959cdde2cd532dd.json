{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardChart.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { Doughnut } from \"react-chartjs-2\";\nimport axios from 'axios';\nexport default function DashboardChart(props) {\n  const order = props.order;\n  const [productList, setProductList] = useState([]);\n  useEffect(() => {\n    order.map(item => {\n      axios.get(`http://pe.heromc.net:4000/products/${item.id}`).then(res => {\n        res.data.count = item.amount;\n        setProductList(productList => [...productList, res.data]);\n      });\n    }); // if (order.length > 0) { \n    //     const productList = []\n    //     for (let i in order) {\n    //         for (let j in order[i].orderList) {\n    //             productList.push(order[i].orderList[j])\n    //         }\n    //     }\n    //     const productListTotal = []\n    //     for (let i in productList) { \n    //         for (let j in productList) {\n    //             if (productList[i].id === productList[i+1].id) {\n    //                 console.log(\"c\")\n    //             }\n    //         }\n    //     }\n    // }\n  }, [order]);\n  console.log(productList);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faGlobe,\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Global Sales by Top Categories\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-content flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Doughnut, {\n    data: {\n      labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n      datasets: [{\n        label: \"Population (millions)\",\n        backgroundColor: [\"#3e95cd\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\"],\n        data: [2478, 5267, 734, 784, 433]\n      }]\n    },\n    option: {\n      title: {\n        display: true,\n        text: \"Predicted world population (millions) in 2050\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardChart.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faGlobe","Doughnut","axios","DashboardChart","props","order","productList","setProductList","map","item","get","id","then","res","data","count","amount","console","log","labels","datasets","label","backgroundColor","title","display","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAO,kCAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAE1C,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAQ;AACdP,MAAAA,KAAK,CAACQ,GAAN,CAAW,sCAAqCD,IAAI,CAACE,EAAG,EAAxD,EACKC,IADL,CACUC,GAAG,IAAI;AACTA,QAAAA,GAAG,CAACC,IAAJ,CAASC,KAAT,GAAiBN,IAAI,CAACO,MAAtB;AACAT,QAAAA,cAAc,CAACD,WAAW,IAAI,CAAC,GAAGA,WAAJ,EAAiBO,GAAG,CAACC,IAArB,CAAhB,CAAd;AACH,OAJL;AAMH,KAPD,EADU,CASd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,GAzBQ,EAyBN,CAACT,KAAD,CAzBM,CAAT;AA2BAY,EAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEN,OAAvB;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAE;AACFmB,MAAAA,MAAM,EAAE,CACJ,QADI,EAEJ,MAFI,EAGJ,QAHI,EAIJ,eAJI,EAKJ,eALI,CADN;AAQFC,MAAAA,QAAQ,EAAE,CACN;AACAC,QAAAA,KAAK,EAAE,uBADP;AAEAC,QAAAA,eAAe,EAAE,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,CAFjB;AASAR,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB;AATN,OADM;AARR,KADV;AAuBI,IAAA,MAAM,EAAE;AACJS,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,IADN;AAEHC,QAAAA,IAAI,EAAE;AAFH;AADH,KAvBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAJJ,CAJJ,CADJ;AA8CH","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons'\nimport { Doughnut } from \"react-chartjs-2\";\nimport axios from 'axios'\n\nexport default function DashboardChart(props) {\n\n    const order = props.order\n    const [productList, setProductList] = useState([])\n\n    useEffect(()=>{\n        order.map((item)=>{\n            axios.get(`http://pe.heromc.net:4000/products/${item.id}`)\n                .then(res => {\n                    res.data.count = item.amount\n                    setProductList(productList => [...productList, res.data])\n                })\n\n        })\n    // if (order.length > 0) { \n    //     const productList = []\n    //     for (let i in order) {\n    //         for (let j in order[i].orderList) {\n    //             productList.push(order[i].orderList[j])\n    //         }\n    //     }\n    //     const productListTotal = []\n    //     for (let i in productList) { \n    //         for (let j in productList) {\n    //             if (productList[i].id === productList[i+1].id) {\n    //                 console.log(\"c\")\n    //             }\n    //         }\n    //     }\n    // }\n    }, [order])\n\n    console.log(productList)\n\n    return (\n        <div className=\"chart flex-col\">\n            <div className=\"headerbox flex-center\">\n                <FontAwesomeIcon icon={faGlobe} className=\"icon\"/>\n            </div>\n            <div className=\"top-location-container\">\n                <div className=\"headerbox-header\">\n                    <p>Global Sales by Top Categories</p>\n                </div>\n                <div className=\"top-location-content flex\">\n                    <div className=\"top-location-map\">\n                        <Doughnut\n                            data={{\n                                labels: [\n                                    \"Africa\",\n                                    \"Asia\",\n                                    \"Europe\",\n                                    \"Latin America\",\n                                    \"North America\"\n                                ],\n                                datasets: [\n                                    {\n                                    label: \"Population (millions)\",\n                                    backgroundColor: [\n                                        \"#3e95cd\",\n                                        \"#8e5ea2\",\n                                        \"#3cba9f\",\n                                        \"#e8c3b9\",\n                                        \"#c45850\"\n                                    ],\n                                    data: [2478, 5267, 734, 784, 433]\n                                    }\n                                ]\n                            }}\n                            option={{\n                                title: {\n                                    display: true,\n                                    text: \"Predicted world population (millions) in 2050\"\n                                }\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}