{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Modal/DashboardEditor.js\";\n// import React, { Component } from \"react\";\n// import { Editor } from \"react-draft-wysiwyg\";\n// import { EditorState, convertToRaw } from \"draft-js\";\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n// import draftToHtml from \"draftjs-to-html\";\n// export default class DashboardEditor extends Component {\n//   state = {\n//     editorState: EditorState.createEmpty(),\n//   };\n//   onEditorStateChange = (editorState) => {\n//     this.setState({\n//       editorState,\n//     });\n//   };\n//   render() {\n//     const { editorState } = this.state;\n//     return (\n//       <div>\n//         <Editor\n//           editorState={editorState}\n//           toolbarClassName=\"toolbarClassName\"\n//           wrapperClassName=\"wrapperClassName\"\n//           editorClassName=\"editorClassName\"\n//           onEditorStateChange={this.onEditorStateChange}\n//           toolbar={{\n//             image: { uploadCallback: uploadImageCallBack, alt: { present: true, mandatory: true } },\n//           }}\n//         />\n//         {/* <textarea\n//           disabled\n//           value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n//         ></textarea> */}\n//       </div>\n//     );\n//   }\n// }\nimport React, { Component } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport draftToHtml from \"draftjs-to-html\";\n\nfunction uploadImageCallBack(file) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n\n    xhr.open('POST', 'https://api.imgur.com/3/image');\n    xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n    const data = new FormData(); // eslint-disable-line no-undef\n\n    data.append('image', file);\n    xhr.send(data);\n    xhr.addEventListener('load', () => {\n      const response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener('error', () => {\n      const error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\n\nclass DashboardEditor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editorState: EditorState.createEmpty()\n    };\n\n    this.onEditorStateChange = editorState => {\n      this.setState({\n        editorState\n      });\n    };\n  }\n\n  render() {\n    const {\n      editorState\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rdw-storybook-root\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Editor, {\n      toolbarClassName: \"rdw-storybook-toolbar\",\n      wrapperClassName: \"rdw-storybook-wrapper\",\n      editorClassName: \"rdw-storybook-editor\",\n      toolbar: {\n        image: {\n          uploadCallback: uploadImageCallBack,\n          alt: {\n            present: true,\n            mandatory: false\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      disabled: true,\n      value: draftToHtml(convertToRaw(editorState.getCurrentContent())),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default DashboardEditor;","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Modal/DashboardEditor.js"],"names":["React","Component","Editor","EditorState","convertToRaw","draftToHtml","uploadImageCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","DashboardEditor","state","editorState","createEmpty","onEditorStateChange","setState","render","image","uploadCallback","alt","present","mandatory","getCurrentContent"],"mappings":";AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,UAA1C;AAEA,OAAO,kDAAP;AACA,OAAOC,WAAP,MAAwB,iBAAxB;;AAEA,SAASC,mBAAT,CAA6BC,IAA7B,EAAmC;AACjC,SAAO,IAAIC,OAAJ,CACL,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnB,UAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ,CADmB,CACe;;AAClCD,IAAAA,GAAG,CAACE,IAAJ,CAAS,MAAT,EAAiB,+BAAjB;AACAF,IAAAA,GAAG,CAACG,gBAAJ,CAAqB,eAArB,EAAsC,2BAAtC;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb,CAJmB,CAIU;;AAC7BD,IAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBV,IAArB;AACAI,IAAAA,GAAG,CAACO,IAAJ,CAASH,IAAT;AACAJ,IAAAA,GAAG,CAACQ,gBAAJ,CAAqB,MAArB,EAA6B,MAAM;AACjC,YAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWX,GAAG,CAACY,YAAf,CAAjB;AACAd,MAAAA,OAAO,CAACW,QAAD,CAAP;AACD,KAHD;AAIAT,IAAAA,GAAG,CAACQ,gBAAJ,CAAqB,OAArB,EAA8B,MAAM;AAClC,YAAMK,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWX,GAAG,CAACY,YAAf,CAAd;AACAb,MAAAA,MAAM,CAACc,KAAD,CAAN;AACD,KAHD;AAID,GAhBI,CAAP;AAkBD;;AAED,MAAMC,eAAN,SAA8BxB,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCyB,KADsC,GAC9B;AACNC,MAAAA,WAAW,EAAExB,WAAW,CAACyB,WAAZ;AADP,KAD8B;;AAAA,SAKtCC,mBALsC,GAKfF,WAAD,IAAiB;AACrC,WAAKG,QAAL,CAAc;AACZH,QAAAA;AADY,OAAd;AAGD,KATqC;AAAA;;AAWtCI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,gBAAgB,EAAC,uBADnB;AAEE,MAAA,gBAAgB,EAAC,uBAFnB;AAGE,MAAA,eAAe,EAAC,sBAHlB;AAIE,MAAA,OAAO,EAAE;AACPM,QAAAA,KAAK,EAAE;AACLC,UAAAA,cAAc,EAAE3B,mBADX;AAEL4B,UAAAA,GAAG,EAAE;AAAEC,YAAAA,OAAO,EAAE,IAAX;AAAiBC,YAAAA,SAAS,EAAE;AAA5B;AAFA;AADA,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAYE;AACG,MAAA,QAAQ,MADX;AAEG,MAAA,KAAK,EAAE/B,WAAW,CAACD,YAAY,CAACuB,WAAW,CAACU,iBAAZ,EAAD,CAAb,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAmBD;;AAhCqC;;AAkCxC,eAAeZ,eAAf","sourcesContent":["\n// import React, { Component } from \"react\";\n// import { Editor } from \"react-draft-wysiwyg\";\n// import { EditorState, convertToRaw } from \"draft-js\";\n\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n// import draftToHtml from \"draftjs-to-html\";\n\n\n// export default class DashboardEditor extends Component {\n//   state = {\n//     editorState: EditorState.createEmpty(),\n//   };\n\n//   onEditorStateChange = (editorState) => {\n//     this.setState({\n//       editorState,\n//     });\n//   };\n\n//   render() {\n//     const { editorState } = this.state;\n//     return (\n//       <div>\n//         <Editor\n//           editorState={editorState}\n//           toolbarClassName=\"toolbarClassName\"\n//           wrapperClassName=\"wrapperClassName\"\n//           editorClassName=\"editorClassName\"\n//           onEditorStateChange={this.onEditorStateChange}\n//           toolbar={{\n//             image: { uploadCallback: uploadImageCallBack, alt: { present: true, mandatory: true } },\n//           }}\n//         />\n//         {/* <textarea\n//           disabled\n//           value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n//         ></textarea> */}\n//       </div>\n//     );\n//   }\n// }\n\n\nimport React, { Component } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from \"draft-js\";\n\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport draftToHtml from \"draftjs-to-html\";\n\nfunction uploadImageCallBack(file) {\n  return new Promise(\n    (resolve, reject) => {\n      const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n      xhr.open('POST', 'https://api.imgur.com/3/image');\n      xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n      const data = new FormData(); // eslint-disable-line no-undef\n      data.append('image', file);\n      xhr.send(data);\n      xhr.addEventListener('load', () => {\n        const response = JSON.parse(xhr.responseText);\n        resolve(response);\n      });\n      xhr.addEventListener('error', () => {\n        const error = JSON.parse(xhr.responseText);\n        reject(error);\n      });\n    },\n  );\n}\n\nclass DashboardEditor extends Component {\n  state = {\n    editorState: EditorState.createEmpty(),\n  };\n\n  onEditorStateChange = (editorState) => {\n    this.setState({\n      editorState,\n    });\n  }\n  \n  render() {\n    const { editorState } = this.state;\n    return (\n      <div className=\"rdw-storybook-root\">\n        <Editor\n          toolbarClassName=\"rdw-storybook-toolbar\"\n          wrapperClassName=\"rdw-storybook-wrapper\"\n          editorClassName=\"rdw-storybook-editor\"\n          toolbar={{\n            image: {\n              uploadCallback: uploadImageCallBack,\n              alt: { present: true, mandatory: false },\n            },\n          }}\n        />\n        <textarea \n           disabled\n           value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n        ></textarea>\n      </div>\n    )\n  }\n}\nexport default DashboardEditor;"]},"metadata":{},"sourceType":"module"}