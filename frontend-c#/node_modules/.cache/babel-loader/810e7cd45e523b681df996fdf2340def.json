{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/contexts/Cart.js\";\nimport React, { useEffect, useState } from 'react';\nexport const CartContext = React.createContext();\nexport function CartProvider(props) {\n  const [cartItems, setCartItems] = useState([]);\n  const [clickedCart, setClickedCart] = useState(0);\n  useState(() => {}, [cartItems]);\n\n  const addToCart = product => {\n    setClickedCart(clickedCart + 1); // scroll on click to cart\n    // setCartItems(cartItems => [...cartItems, product])\n\n    const virtualCart = [...cartItems];\n\n    if (cartItems.length === 0) {\n      virtualCart = virtualCart.concat({ ...product,\n        quantity: 1\n      });\n    } else {\n      if (!this.isExists(virtualCart, product)) {\n        virtualCart = virtualCart.concat({ ...product,\n          quantity: 1\n        });\n      } else {\n        virtualCart = cartItems.map(value => {\n          if (value._id === product._id) {\n            return { ...value,\n              quantity: value.quantity + 1\n            };\n          } else {\n            return { ...value\n            };\n          }\n        });\n      }\n    }\n\n    console.log(virtualCart);\n  };\n\n  const updateOnRemoveCart = product => {\n    setCartItems(product);\n  };\n\n  const updateOnMinusCart = product => {\n    console.log(product);\n  };\n\n  return /*#__PURE__*/React.createElement(CartContext.Provider, {\n    value: {\n      cartItems: cartItems,\n      addToCart: addToCart,\n      clickedCart: clickedCart,\n      updateOnRemoveCart: updateOnRemoveCart,\n      updateOnMinusCart: updateOnMinusCart\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/contexts/Cart.js"],"names":["React","useEffect","useState","CartContext","createContext","CartProvider","props","cartItems","setCartItems","clickedCart","setClickedCart","addToCart","product","virtualCart","length","concat","quantity","isExists","map","value","_id","console","log","updateOnRemoveCart","updateOnMinusCart","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;AAEP,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAEhC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAD,CAA9C;AAEAA,EAAAA,QAAQ,CAAC,MAAI,CAEZ,CAFO,EAEN,CAACK,SAAD,CAFM,CAAR;;AAIA,QAAMI,SAAS,GAAIC,OAAD,IAAa;AAC3BF,IAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd,CAD2B,CACK;AAEhC;;AAEA,UAAMI,WAAW,GAAG,CAAC,GAAGN,SAAJ,CAApB;;AACA,QAAIA,SAAS,CAACO,MAAV,KAAqB,CAAzB,EAA4B;AACxBD,MAAAA,WAAW,GAAGA,WAAW,CAACE,MAAZ,CAAmB,EAAC,GAAGH,OAAJ;AAAaI,QAAAA,QAAQ,EAAE;AAAvB,OAAnB,CAAd;AACH,KAFD,MAEQ;AACJ,UAAI,CAAC,KAAKC,QAAL,CAAcJ,WAAd,EAA2BD,OAA3B,CAAL,EAA0C;AACtCC,QAAAA,WAAW,GAAGA,WAAW,CAACE,MAAZ,CAAmB,EAAC,GAAGH,OAAJ;AAAaI,UAAAA,QAAQ,EAAE;AAAvB,SAAnB,CAAd;AACH,OAFD,MAEO;AACHH,QAAAA,WAAW,GAAGN,SAAS,CAACW,GAAV,CAAcC,KAAK,IAAI;AACjC,cAAIA,KAAK,CAACC,GAAN,KAAcR,OAAO,CAACQ,GAA1B,EAA+B;AAC3B,mBAAO,EAAE,GAAGD,KAAL;AAAYH,cAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,GAAiB;AAAvC,aAAP;AACH,WAFD,MAEO;AACH,mBAAO,EAAE,GAAGG;AAAL,aAAP;AACH;AACJ,SANa,CAAd;AAOH;AACJ;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACH,GAtBD;;AAwBA,QAAMU,kBAAkB,GAAIX,OAAD,IAAa;AACpCJ,IAAAA,YAAY,CAACI,OAAD,CAAZ;AACH,GAFD;;AAIA,QAAMY,iBAAiB,GAAIZ,OAAD,IAAa;AACnCS,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACH,GAFD;;AAIA,sBACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHL,MAAAA,SAAS,EAAEA,SADR;AAEHI,MAAAA,SAAS,EAAEA,SAFR;AAGHF,MAAAA,WAAW,EAAEA,WAHV;AAIHc,MAAAA,kBAAkB,EAAEA,kBAJjB;AAKHC,MAAAA,iBAAiB,EAAEA;AALhB,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKlB,KAAK,CAACmB,QATX,CADJ;AAaH","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nexport const CartContext = React.createContext();\n\nexport function CartProvider(props) {\n    \n    const [cartItems, setCartItems] = useState([]);\n    const [clickedCart, setClickedCart] = useState(0);\n\n    useState(()=>{\n\n    },[cartItems])\n\n    const addToCart = (product) => {\n        setClickedCart(clickedCart + 1) // scroll on click to cart\n\n        // setCartItems(cartItems => [...cartItems, product])\n\n        const virtualCart = [...cartItems]\n        if (cartItems.length === 0) {\n            virtualCart = virtualCart.concat({...product, quantity: 1});\n        }  else {\n            if (!this.isExists(virtualCart, product)) {\n                virtualCart = virtualCart.concat({...product, quantity: 1});\n            } else {\n                virtualCart = cartItems.map(value => {\n                    if (value._id === product._id) {\n                        return { ...value, quantity: value.quantity + 1};\n                    } else {\n                        return { ...value };\n                    }\n                })\n            }\n        }\n        console.log(virtualCart)\n    }\n \n    const updateOnRemoveCart = (product) => {\n        setCartItems(product)\n    }\n\n    const updateOnMinusCart = (product) => {\n        console.log(product)\n    }\n    \n    return (\n        <CartContext.Provider\n            value={{\n                cartItems: cartItems,\n                addToCart: addToCart,\n                clickedCart: clickedCart,\n                updateOnRemoveCart: updateOnRemoveCart,\n                updateOnMinusCart: updateOnMinusCart\n            }}\n        >\n            {props.children}\n        </CartContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}