{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardChart.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { Bar, Line } from '@reactchartjs/react-chart.js';\nexport default function DashboardChart(props) {\n  const products = props.products;\n  const order = props.order;\n  const [data, setData] = useState({});\n  useEffect(() => {\n    if (products.length > 0 && order.length > 0) {\n      const allCate = Object.values(products.reduce((a, {\n        productCate\n      }) => {\n        a[productCate] = a[productCate] || {\n          productCate,\n          count: 0\n        };\n        return a;\n      }, Object.create(null)));\n\n      for (let i in allCate) {\n        for (let j in products) {\n          if (allCate[i].productCate === products[j].productCate) {\n            allCate[i].count += products[j].productSold;\n          }\n        }\n      }\n\n      allCate.sort((a, b) => b.count - a.count);\n      const topCate = allCate.splice(0, 5);\n      console.log(topCate);\n      const topCateList = [];\n\n      for (let i in topCate) {\n        topCateList.push(topCate[i].productCate);\n      }\n\n      setData({\n        labels: topCateList,\n        datasets: [{\n          label: '',\n          data: [topCate[0].count, topCate[1].count, topCate[2].count, topCate[3].count, topCate[4].count],\n          backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      });\n    }\n  }, [products, order]);\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart flex-col\",\n    style: {\n      width: `${props.width}%`,\n      marginRight: `${props.mgR}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faGlobe,\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"2020 Sales by Top 5 Categories\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-content flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-map\",\n    style: {\n      margin: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardChart.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faGlobe","Bar","Line","DashboardChart","props","products","order","data","setData","length","allCate","Object","values","reduce","a","productCate","count","create","i","j","productSold","sort","b","topCate","splice","console","log","topCateList","push","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","width","marginRight","mgR","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons'  \nimport { Bar, Line } from '@reactchartjs/react-chart.js' \n\nexport default function DashboardChart(props) {\n\n    const products = props.products \n    const order = props.order \n    const [data, setData] = useState({})\n\n    useEffect(()=>{\n        if (products.length > 0 && order.length > 0) {\n            const allCate = Object.values(products.reduce((a, {productCate}) => {\n                a[productCate] = a[productCate] || {productCate, count: 0};\n                return a;\n            }, Object.create(null)));\n    \n            for (let i in allCate) {\n                for (let j in products) {\n                    if (allCate[i].productCate === products[j].productCate) { \n                        allCate[i].count += products[j].productSold\n                    }\n                }\n            }\n            allCate.sort((a, b) => b.count - a.count)\n            const topCate = allCate.splice(0, 5); \n            console.log(topCate)\n            const topCateList = []\n            for (let i in topCate) {\n                topCateList.push(topCate[i].productCate)\n            }\n            setData({\n                labels: topCateList,\n                datasets: [\n                  {\n                    label: '',\n                    data: [topCate[0].count, topCate[1].count, topCate[2].count, topCate[3].count, topCate[4].count],\n                    backgroundColor: [\n                      'rgba(255, 99, 132, 0.6)',\n                      'rgba(54, 162, 235, 0.6)',\n                      'rgba(255, 206, 86, 0.6)',\n                      'rgba(75, 192, 192, 0.6)',\n                      'rgba(153, 102, 255, 0.6)',\n                      'rgba(255, 159, 64, 0.6)',\n                    ],\n                    borderColor: [\n                      'rgba(255, 99, 132, 1)',\n                      'rgba(54, 162, 235, 1)',\n                      'rgba(255, 206, 86, 1)',\n                      'rgba(75, 192, 192, 1)',\n                      'rgba(153, 102, 255, 1)',\n                      'rgba(255, 159, 64, 1)',\n                    ],\n                    borderWidth: 1,\n                  },\n                ],\n            })\n        }\n    },[products, order]) \n\n    \n    const options = {\n        scales: {\n            yAxes: [\n                {\n                ticks: {\n                    beginAtZero: true,\n                },\n                },\n            ],\n        }\n      }\n\n\n    return (\n        <div className=\"chart flex-col\" style={{width: `${props.width}%`, marginRight: `${props.mgR}px`}}>\n            <div className=\"headerbox flex-center\">\n                <FontAwesomeIcon icon={faGlobe} className=\"icon\"/>\n            </div>\n            <div className=\"top-location-container\">\n                <div className=\"headerbox-header\">\n                    <p>2020 Sales by Top 5 Categories</p>\n                </div>\n                <div className=\"top-location-content flex\">\n                    <div className=\"top-location-map\" style={{margin: '0'}}>\n                        <Bar data={data} options={options} /> \n                        {/* <Line data={data} options={options} />  */}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}