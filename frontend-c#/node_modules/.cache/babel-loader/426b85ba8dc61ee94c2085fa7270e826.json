{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Inbox/DashboardInbox.js\";\nimport React, { useRef } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { useEffect, useState } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport axios from 'axios';\nconst ENDPOINT = \"http://localhost:4000\";\nexport default function DashboardInbox(props) {\n  const [allChatData, setAllChatData] = useState([]);\n  const [roomId, setRoomId] = useState(0);\n  const [roomIndex, setRoomIndex] = useState(0);\n  const [chatInput, setChatInput] = useState(\"\");\n  const socket = socketIOClient(ENDPOINT);\n  useEffect(() => {\n    socket.emit('join', {\n      sessionId: 'admin',\n      isAdmin: true\n    });\n    socket.on('send-all-chat', data => {\n      setAllChatData(data);\n\n      if (data.length > 0) {\n        setRoomId(data[0].sessionId);\n        if (messageRef.current) messageRef.current.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }\n    });\n    socket.on(\"client-msg\", function (data) {\n      setAllChatData(data.allchat);\n      if (messageRef.current) messageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    });\n  }, []);\n\n  const handleOnChange = event => {\n    setChatInput(event.target.value);\n  };\n\n  const sendChatInput = event => {\n    event.preventDefault();\n\n    if (chatInput === \"\") {\n      return;\n    }\n\n    const data = {\n      fromAdmin: true,\n      text: chatInput,\n      time: new Date(),\n      roomId: roomId\n    };\n    socket.emit('messageSend-admin', data);\n    axios.get(`http://localhost:4000/chat`).then(res => {\n      setAllChatData(res.data);\n    });\n    setChatInput(\"\");\n    setTimeout(() => {\n      if (messageRef.current) messageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }, 100);\n  };\n\n  const messageRef = useRef([]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-admin flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })), allChatData.length > 0 && allChatData.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"boxchat-item flex\",\n      onClick: event => {\n        setRoomId(item.sessionId);\n        setRoomIndex(index);\n        setTimeout(() => {\n          if (messageRef.current) messageRef.current.scrollIntoView({\n            behavior: \"smooth\"\n          });\n        }, 10);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxchat-avt flex-center\",\n      style: {\n        pointerEvents: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, item.userInfo[0] && /*#__PURE__*/React.createElement(\"img\", {\n      src: item.userInfo[0].userAvt,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }), !item.userInfo[0] && /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://cdn4.vectorstock.com/i/1000x1000/94/38/avatar-flat-icon-on-black-background-black-style-vector-25959438.jpg\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-col\",\n      style: {\n        pointerEvents: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"boxchat-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }\n    }, item.chatName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"boxchat-first\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }, item.chatContent[item.chatContent.length - 1].text)));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, allChatData.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box-avt flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, item.userInfo[0] && /*#__PURE__*/React.createElement(\"img\", {\n    src: item.userInfo[0].userAvt,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  }), !item.userInfo[0] && /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://cdn4.vectorstock.com/i/1000x1000/94/38/avatar-flat-icon-on-black-background-black-style-vector-25959438.jpg\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"boxchat-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, allChatData[Number(roomIndex)].chatName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-contents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, allChatData.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-col chat-box-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, allChatData[roomIndex].chatContent.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: messageRef,\n      key: index,\n      className: \"chat-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 45\n      }\n    }, item.fromAdmin !== true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-chat-clienttext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 57\n      }\n    }, item.text)), item.fromAdmin === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-chat-admintext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 57\n      }\n    }, item.text)));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendChatInput,\n    className: \"boxchat-type-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleOnChange,\n    name: \"chatInput\" // ref={inputRef}\n    ,\n    value: chatInput,\n    placeholder: \"Type your message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, \"Send\")))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Inbox/DashboardInbox.js"],"names":["React","useRef","useEffect","useState","socketIOClient","axios","ENDPOINT","DashboardInbox","props","allChatData","setAllChatData","roomId","setRoomId","roomIndex","setRoomIndex","chatInput","setChatInput","socket","emit","sessionId","isAdmin","on","data","length","messageRef","current","scrollIntoView","behavior","allchat","handleOnChange","event","target","value","sendChatInput","preventDefault","fromAdmin","text","time","Date","get","then","res","setTimeout","map","item","index","pointerEvents","userInfo","userAvt","chatName","chatContent","Number"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { useEffect, useState } from 'react'\nimport socketIOClient from \"socket.io-client\"\nimport axios from 'axios'\n\nconst ENDPOINT = \"http://localhost:4000\";\n\nexport default function DashboardInbox(props) {\n    \n    const [allChatData, setAllChatData] = useState([])\n    const [roomId, setRoomId] = useState(0);\n    const [roomIndex, setRoomIndex] = useState(0)\n    const [chatInput, setChatInput] = useState(\"\")\n\n    const socket = socketIOClient(ENDPOINT);\n\n    useEffect(() => {\n        socket.emit('join', {\n            sessionId: 'admin',\n            isAdmin: true\n        })\n        socket.on('send-all-chat', (data)=>{\n            setAllChatData(data)\n            if (data.length > 0) {\n                setRoomId(data[0].sessionId)\n                if (messageRef.current) messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n            }\n        })\n        socket.on(\"client-msg\", function(data) {\n            setAllChatData(data.allchat)\n            if (messageRef.current) messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n        })\n    },[])\n\n    const handleOnChange = (event) => {\n        setChatInput(event.target.value)\n    }\n\n    const sendChatInput = (event) => {\n        event.preventDefault();\n        if (chatInput === \"\") {\n            return\n        }\n        const data = {\n            fromAdmin: true,\n            text: chatInput,\n            time: new Date(),\n            roomId: roomId\n        }\n        socket.emit('messageSend-admin', data)\n\n        axios.get(`http://localhost:4000/chat`)\n            .then(res => {\n                setAllChatData(res.data)\n            }\n        )\n        setChatInput(\"\")\n        setTimeout(()=>{\n            if (messageRef.current) messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n        }, 100)\n    }\n\n    const messageRef = useRef([]);\n\n    return (\n        <div className=\"boxchat-admin flex\">\n            <div className=\"boxchat-list\">\n                <div className=\"boxchat-search\">\n                    <input type=\"text\" placeholder=\"Search\"></input>\n                </div>\n                { allChatData.length > 0 && \n                    allChatData.map((item,index)=>{\n                        return (\n                            <div \n                                key={index}\n                                className=\"boxchat-item flex\"\n                                onClick={(event)=>{\n                                    setRoomId(item.sessionId)\n                                    setRoomIndex(index)\n                                    setTimeout(()=>{\n                                        if (messageRef.current) messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n                                    }, 10)\n                                }}\n                            >\n                                <div className=\"boxchat-avt flex-center\" style={{pointerEvents: 'none'}}>\n                                    { item.userInfo[0] && \n                                        <img \n                                            src={item.userInfo[0].userAvt}\n                                            alt=\"\"\n                                        ></img>\n                                    }\n                                    { !item.userInfo[0] && \n                                        <img \n                                            src={\"https://cdn4.vectorstock.com/i/1000x1000/94/38/avatar-flat-icon-on-black-background-black-style-vector-25959438.jpg\"}\n                                            alt=\"\"\n                                        ></img>\n                                    }\n                                </div>\n                                <div className=\"flex-col\" style={{pointerEvents: 'none'}}>\n                                    <p className=\"boxchat-name\">{item.chatName}</p>\n                                    <p className=\"boxchat-first\">{item.chatContent[item.chatContent.length - 1].text}</p>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"boxchat-main\">\n                <div className=\"boxchat-box\">\n                    { allChatData.length>0 &&\n                        <div className=\"boxchat-box-info\">\n                            <div className=\"boxchat-box-avt flex-center\">\n                                { item.userInfo[0] && \n                                    <img \n                                        src={item.userInfo[0].userAvt}\n                                        alt=\"\"\n                                    ></img>\n                                }\n                                { !item.userInfo[0] && \n                                    <img \n                                        src={\"https://cdn4.vectorstock.com/i/1000x1000/94/38/avatar-flat-icon-on-black-background-black-style-vector-25959438.jpg\"}\n                                        alt=\"\"\n                                    ></img>\n                                }\n                            </div>\n                            <div className=\"flex-center\">\n                                <p className=\"boxchat-name\">{allChatData[Number(roomIndex)].chatName}</p>\n                            </div>\n                        </div>\n                    }\n                    <div \n                        className=\"boxchat-contents\"\n                    >\n                        { allChatData.length>0 &&\n                            <div \n                                className=\"flex-col chat-box-list\">\n                                {\n                                    allChatData[roomIndex].chatContent.map((item, index) => {\n                                        return (\n                                            <div \n                                                ref={messageRef}\n                                                key={index}\n                                                className=\"chat-list\">\n                                                {\n                                                    item.fromAdmin !== true && \n                                                    <div className=\"box-chat-clienttext\">\n                                                        <p>{item.text}</p>\n                                                    </div>\n                                                }\n                                                {\n                                                    item.fromAdmin === true && \n                                                    <div className=\"box-chat-admintext\">\n                                                        <p>{item.text}</p>\n                                                    </div>\n                                                }\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>  \n                        }\n                    </div>\n                </div>\n                <div className=\"boxchat-type\">\n                    <form onSubmit={sendChatInput} className=\"boxchat-type-form\">\n                        <input \n                            type=\"text\" \n                            onChange={handleOnChange} \n                            name=\"chatInput\" \n                            // ref={inputRef}\n                            value={chatInput}\n                            placeholder=\"Type your message...\"\n                        ></input>\n                        <button>Send</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}