{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Email/DashboardEmail.js\";\nimport React, { useRef } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { useEffect, useState } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport axios from 'axios';\nconst ENDPOINT = \"http://localhost:4000\";\nexport default function DashboardEmail(props) {\n  const [allChatData, setAllChatData] = useState([]);\n  const [constAllChatData, setConstAllChatData] = useState([]);\n  const [roomId, setRoomId] = useState(0);\n  const [roomIndex, setRoomIndex] = useState(0);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const socket = socketIOClient(ENDPOINT);\n  useEffect(() => {\n    console.log(props.email);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-admin flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, sortDateChat.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box-avt flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"img\", {\n    src: sortDateChat[Number(roomIndex)].userInfo.userAvt,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 37\n    }\n  }), !sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://scontent-sin6-1.xx.fbcdn.net/v/t1.0-9/73321413_146697059956770_7174055866474168320_n.jpg?_nc_cat=107&ccb=2&_nc_sid=09cbfe&_nc_ohc=ni-Cr2_KyP0AX-BfQkv&_nc_ht=scontent-sin6-1.xx&oh=9cbda6699093e8dbb061a92c5bb58c7e&oe=5FCB1CFC\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"boxchat-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 37\n    }\n  }, allChatData[Number(roomIndex)].chatName), !sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    style: {\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"boxchat-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 41\n    }\n  }, allChatData[Number(roomIndex)].chatName), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: '5px',\n      color: '#777',\n      fontSize: '16px',\n      fontFamily: 'sans-serif'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 41\n    }\n  }, \"(anonymous)\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-contents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, props.email.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-col chat-box-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, props.email.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: messageRef,\n      key: index,\n      className: \"chat-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 45\n      }\n    }, item);\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendChatInput,\n    className: \"boxchat-type-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleOnChange,\n    value: chatInput,\n    placeholder: \"Type your message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"Send\")))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Email/DashboardEmail.js"],"names":["React","useRef","useEffect","useState","socketIOClient","axios","ENDPOINT","DashboardEmail","props","allChatData","setAllChatData","constAllChatData","setConstAllChatData","roomId","setRoomId","roomIndex","setRoomIndex","chatInput","setChatInput","searchInput","setSearchInput","socket","console","log","email","sortDateChat","length","Number","userInfo","userAvt","chatName","alignItems","marginLeft","color","fontSize","fontFamily","map","item","index","messageRef","sendChatInput","handleOnChange"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { useEffect, useState } from 'react'\nimport socketIOClient from \"socket.io-client\"\nimport axios from 'axios'\n\nconst ENDPOINT = \"http://localhost:4000\";\n\nexport default function DashboardEmail(props) {\n    \n    const [allChatData, setAllChatData] = useState([])\n    const [constAllChatData, setConstAllChatData] = useState([])\n    const [roomId, setRoomId] = useState(0);\n    const [roomIndex, setRoomIndex] = useState(0)\n    const [chatInput, setChatInput] = useState(\"\")\n    const [searchInput, setSearchInput] = useState(\"\")\n\n    const socket = socketIOClient(ENDPOINT);\n\n    useEffect(() => {\n        console.log(props.email)\n    },[])\n\n    return (\n        <div className=\"boxchat-admin flex\">\n            <div className=\"boxchat-main\">\n                <div className=\"boxchat-box\">\n                    { sortDateChat.length>0 &&\n                        <div className=\"boxchat-box-info\">\n                            <div className=\"boxchat-box-avt flex-center\">\n                                { sortDateChat[Number(roomIndex)].userInfo && \n                                    <img \n                                        src={sortDateChat[Number(roomIndex)].userInfo.userAvt}\n                                        alt=\"\"\n                                    ></img>\n                                }\n                                { !sortDateChat[Number(roomIndex)].userInfo && \n                                    <img \n                                        src={\"https://scontent-sin6-1.xx.fbcdn.net/v/t1.0-9/73321413_146697059956770_7174055866474168320_n.jpg?_nc_cat=107&ccb=2&_nc_sid=09cbfe&_nc_ohc=ni-Cr2_KyP0AX-BfQkv&_nc_ht=scontent-sin6-1.xx&oh=9cbda6699093e8dbb061a92c5bb58c7e&oe=5FCB1CFC\"}\n                                        alt=\"\"\n                                    ></img>\n                                }\n                            </div>\n                            <div className=\"flex-center\">\n                                { sortDateChat[Number(roomIndex)].userInfo && \n                                    <p className=\"boxchat-name\">{allChatData[Number(roomIndex)].chatName}</p>\n                                }\n                                { !sortDateChat[Number(roomIndex)].userInfo &&\n                                    <div className=\"flex\" style={{alignItems: 'flex-end'}}>\n                                        <p className=\"boxchat-name\">{allChatData[Number(roomIndex)].chatName}</p>\n                                        <p style={{marginLeft: '5px', color: '#777', fontSize: '16px', fontFamily: 'sans-serif'}}>(anonymous)</p>\n                                    </div>\n                                }\n                            </div>\n                        </div>\n                    }\n                    <div \n                        className=\"boxchat-contents\"\n                    >\n                        { props.email.length > 0 &&\n                            <div \n                                className=\"flex-col chat-box-list\">\n                                {\n                                    props.email.map((item, index) => {\n                                        return (\n                                            <div \n                                                ref={messageRef}\n                                                key={index}\n                                                className=\"chat-list\">\n                                                    {item}\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>  \n                        }\n                    </div>\n                </div>\n                <div className=\"boxchat-type\">\n                    <form onSubmit={sendChatInput} className=\"boxchat-type-form\">\n                        <input \n                            type=\"text\" \n                            onChange={handleOnChange}\n                            value={chatInput}\n                            placeholder=\"Type your message...\"\n                        ></input>\n                        <button>Send</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}