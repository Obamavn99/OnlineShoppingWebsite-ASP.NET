{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/OpenChatBtn.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport '../Styles/Chat.css';\nimport '../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\nimport socketIOClient from \"socket.io-client\";\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { ChatContext } from '../contexts/Chat';\nconst ENDPOINT = \"http://localhost:4000\";\n\nfunction OpenChatBtn(props) {\n  const [openChat, setOpenChat] = useState(false);\n  const [onHover, setOnHover] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [openChatContent, setOpenChatContent] = useState(false);\n  const socket = socketIOClient(ENDPOINT); // const {\n  //     chatData,\n  //     setChatDataFunc\n  // } = useContext(ChatContext)\n\n  const [chatData, setChatData] = useState([]);\n  useEffect(() => {\n    if (sessionStorage.getItem('chat-id')) setOpenChatContent(true);\n    socket.on('connect', function (data) {\n      socket.emit('join', {\n        sessionId: sessionStorage.getItem('chat-id')\n      });\n      socket.on('sendFirstInfo', data => {\n        setChatData(data);\n      });\n      socket.on('thread', data => {\n        setChatData([data]);\n      });\n      socket.on('messageSend-thread', data => {\n        console.log(data);\n        const a = {\n          chatContent: [data]\n        };\n        console.log(a.concat(chatData));\n        setChatData(chatData => [...chatData, a]);\n      });\n    });\n  }, []);\n\n  const handleChange = event => {\n    setInputValue({ ...inputValue,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const location = props.history.location.pathname;\n\n  const sendFirstChatOnSubmit = event => {\n    event.preventDefault();\n    setOpenChatContent(true);\n\n    if (!sessionStorage.getItem('chat-id')) {\n      sessionStorage.setItem('chat-id', Math.floor(Math.random() * 190000000) + 100000000);\n    }\n\n    socket.emit('firstMessage', {\n      sessionId: sessionStorage.getItem('chat-id'),\n      chatName: inputValue.chatName,\n      chatEmail: inputValue.chatEmail,\n      chatContent: [{\n        text: inputValue.chatContent,\n        time: new Date()\n      }]\n    });\n    axios.post('http://localhost:4000/chat', {\n      sessionId: sessionStorage.getItem('chat-id'),\n      chatName: inputValue.chatName,\n      chatEmail: inputValue.chatEmail,\n      chatContent: [{\n        text: inputValue.chatContent,\n        time: new Date()\n      }]\n    });\n  };\n\n  const sendChatOnSubmit = event => {\n    event.preventDefault();\n    socket.emit('messageSend', {\n      text: inputValue.messageSend,\n      time: new Date()\n    });\n  }; // if (chatData.length > 0) \n\n\n  console.log(chatData);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: location === \"/admin\" || location === \"/admin/dashboard\" ? \"chat-btn displayNone\" : \"chat-btn\",\n    onMouseEnter: () => {\n      setOnHover(true);\n    },\n    onMouseLeave: () => {\n      if (openChat) {\n        setOnHover(true);\n      } else setOnHover(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: onHover ? \"chat-btn-container chat-btn-hover\" : \"chat-btn-container\",\n    onClick: () => {\n      if (openChat) {\n        setOpenChat(false);\n        setOnHover(false);\n      } else {\n        setOpenChat(true);\n        setOnHover(true);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Live Chat\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: openChat ? \"chat-box hide_chat_box\" : \"chat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-box-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Live Chat\"), openChatContent === false && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-box-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendFirstChatOnSubmit,\n    className: openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, \"Introduce yourself *\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"chatName\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Name\",\n    className: \"intro\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"chatEmail\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Email\",\n    className: \"intro\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, \"Message *\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"chatContent\",\n    type: \"textarea\",\n    onChange: handleChange,\n    className: \"message\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, \"Chat\"))), chatData[0] && openChatContent && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-box-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendChatOnSubmit,\n    className: openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, chatData[0].chatName), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, chatData[0].chatTime), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, chatData[0].chatEmail), chatData[0].chatContent.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 41\n      }\n    }, item.text);\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"messageSend\",\n    type: \"text\",\n    onChange: handleChange,\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 32\n    }\n  }, \"Chat\"))))));\n}\n\nexport default withRouter(OpenChatBtn);","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/OpenChatBtn.js"],"names":["React","useContext","useEffect","useState","FontAwesomeIcon","faComment","socketIOClient","withRouter","axios","ChatContext","ENDPOINT","OpenChatBtn","props","openChat","setOpenChat","onHover","setOnHover","inputValue","setInputValue","openChatContent","setOpenChatContent","socket","chatData","setChatData","sessionStorage","getItem","on","data","emit","sessionId","console","log","a","chatContent","concat","handleChange","event","target","name","value","location","history","pathname","sendFirstChatOnSubmit","preventDefault","setItem","Math","floor","random","chatName","chatEmail","text","time","Date","post","sendChatOnSubmit","messageSend","chatTime","map","item","index"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport '../Styles/Chat.css'\nimport '../App.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\nimport socketIOClient from \"socket.io-client\";\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { ChatContext } from '../contexts/Chat'\n\n\nconst ENDPOINT = \"http://localhost:4000\";\n\nfunction OpenChatBtn(props) {\n\n    const [openChat, setOpenChat] = useState(false);\n    const [onHover, setOnHover] = useState(false); \n    const [inputValue, setInputValue] = useState(\"\");\n    const [openChatContent, setOpenChatContent] = useState(false)\n\n    const socket = socketIOClient(ENDPOINT);\n\n    // const {\n    //     chatData,\n    //     setChatDataFunc\n    // } = useContext(ChatContext)\n    const [chatData, setChatData] = useState([])\n\n    useEffect(() => {\n        if (sessionStorage.getItem('chat-id')) setOpenChatContent(true)\n        socket.on('connect', function (data) {\n            socket.emit('join', {\n                sessionId: sessionStorage.getItem('chat-id')\n            })\n            socket.on('sendFirstInfo', (data)=> {\n                setChatData(data);\n            })\n            socket.on('thread', (data)=> {\n                setChatData([data]);\n            })\n            socket.on('messageSend-thread', (data)=> {\n                console.log(data)\n                const a = {\n                    chatContent: [\n                        data\n                    ] \n                }\n                \n                console.log(a.concat(chatData))\n                setChatData(chatData => [...chatData, a]);\n            })\n        })\n    }, [])\n\n    const handleChange = (event) => {\n        setInputValue({...inputValue , [event.target.name]: event.target.value})\n    }\n    const location = props.history.location.pathname;\n\n    const sendFirstChatOnSubmit = (event) => {\n        event.preventDefault();\n        setOpenChatContent(true)\n        if (!sessionStorage.getItem('chat-id')) {\n            sessionStorage.setItem('chat-id', Math.floor(Math.random() * 190000000) + 100000000);\n        }\n        socket.emit('firstMessage', {\n            sessionId: sessionStorage.getItem('chat-id'),\n            chatName: inputValue.chatName,\n            chatEmail: inputValue.chatEmail,\n            chatContent: [\n                {\n                    text: inputValue.chatContent,\n                    time: new Date()\n                }\n            ]\n        });\n        axios.post('http://localhost:4000/chat', {\n            sessionId: sessionStorage.getItem('chat-id'),\n            chatName: inputValue.chatName,\n            chatEmail: inputValue.chatEmail,\n            chatContent: [\n                {\n                    text: inputValue.chatContent,\n                    time: new Date()\n                }\n            ]}\n        )\n    }\n\n    const sendChatOnSubmit = (event) => {\n        event.preventDefault();\n        socket.emit('messageSend', {\n            text: inputValue.messageSend,\n            time: new Date(),\n        });\n    }\n\n    // if (chatData.length > 0) \n    console.log(chatData)\n\n    return (\n        <div \n            className={location === \"/admin\" || location === \"/admin/dashboard\" ? \"chat-btn displayNone\" : \"chat-btn\"}\n            onMouseEnter={()=> { setOnHover(true) }}\n            onMouseLeave={()=> { if (openChat) { setOnHover(true) } else setOnHover(false) }}\n        >\n            <div \n                className={onHover ? \"chat-btn-container chat-btn-hover\" : \"chat-btn-container\"}\n                onClick={()=>{ if (openChat) { setOpenChat(false); setOnHover(false) } else { setOpenChat(true); setOnHover(true) }}}\n                >\n                <FontAwesomeIcon icon={faComment}/>\n                <p>Live Chat</p>\n            </div>\n            <div className={openChat ? \"chat-box hide_chat_box\" : \"chat-box\"}>\n                <div className=\"chat-box-header\">\n                    Live Chat\n                </div>\n                { openChatContent === false &&  \n                    <div className=\"chat-box-body\">\n                        <form onSubmit={sendFirstChatOnSubmit} className={openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\"}>\n                            <label>Introduce yourself *</label>\n                            <input name=\"chatName\" type=\"text\" onChange={handleChange} placeholder=\"Name\" className=\"intro\" required></input>\n                            <input name=\"chatEmail\" type=\"text\" onChange={handleChange} placeholder=\"Email\" className=\"intro\" required></input>\n                            <label>Message *</label>\n                            <textarea name=\"chatContent\" type=\"textarea\" onChange={handleChange} className=\"message\" required></textarea>\n                            <button className=\"btn\">Chat</button>\n                        </form>\n                    </div>\n                }\n                { (chatData[0] && openChatContent) && \n                    <ul>\n                        <div className=\"chat-box-body\">\n                            <form onSubmit={sendChatOnSubmit} className={openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\"}>\n                                <label>{chatData[0].chatName}</label>\n                                <label>{chatData[0].chatTime}</label>\n                                <label>{chatData[0].chatEmail}</label>\n                                {(chatData[0].chatContent).map((item, index) => {\n                                    return (\n                                        <label key={index}>\n                                            {item.text}\n                                        </label>\n                                    )\n                                })}\n                               <input name=\"messageSend\" type=\"text\" onChange={handleChange} className=\"message\"></input>\n                               <button>Chat</button>\n                            </form>\n                        </div>\n                    </ul>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(OpenChatBtn);"]},"metadata":{},"sourceType":"module"}