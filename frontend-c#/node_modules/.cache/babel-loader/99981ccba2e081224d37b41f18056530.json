{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardChart.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons'; // import { Bar } from '@reactchartjs/react-chart.js'\n\nimport { Line } from '@reactchartjs/react-chart.js';\nexport default function DashboardChart(props) {\n  const products = props.products;\n  const order = props.order;\n  const [top3Cate, setTop3Cate] = useState([]);\n  const [data, setData] = useState({});\n  useEffect(() => {\n    if (products.length > 0 && order.length > 0) {\n      const allCate = Object.values(products.reduce((a, {\n        productCate\n      }) => {\n        a[productCate] = a[productCate] || {\n          productCate,\n          count: 0\n        };\n        return a;\n      }, Object.create(null)));\n\n      for (let i in allCate) {\n        for (let j in products) {\n          if (allCate[i].productCate === products[j].productCate) {\n            allCate[i].count += products[j].productSold;\n          }\n        }\n      }\n\n      allCate.sort((a, b) => b.count - a.count);\n      const arr = allCate.splice(0, 3);\n      console.log(arr); // setData({ \n      //     labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      //     datasets: [\n      //         {\n      //             label: arr[0].productCate,\n      //             data: [12, 19, 3, 5, 2, arr[0].count],\n      //             backgroundColor: 'rgb(255, 99, 132)',\n      //         },\n      //         {\n      //             label: arr[1].productCate,\n      //             data: [2, 3, 20, 5, 1, arr[1].count],\n      //             backgroundColor: 'rgb(54, 162, 235)',\n      //         },\n      //         {\n      //             label: arr[2].productCate,\n      //             data: [3, 10, 13, 15, 22, arr[2].count],\n      //             backgroundColor: 'rgb(75, 192, 192)',\n      //         },\n      //     ],\n      // })\n\n      setData({\n        labels: ['1', '2', '3', '4', '5', '6'],\n        datasets: [{\n          label: '# of Votes',\n          data: [12, 19, 3, 5, 2, 3],\n          fill: false,\n          backgroundColor: 'rgb(255, 99, 132)',\n          borderColor: 'rgba(255, 99, 132, 0.2)',\n          yAxisID: 'y-axis-1'\n        }, {\n          label: '# of No Votes',\n          data: [1, 2, 1, 1, 2, 2],\n          fill: false,\n          backgroundColor: 'rgb(54, 162, 235)',\n          borderColor: 'rgba(54, 162, 235, 0.2)',\n          yAxisID: 'y-axis-2'\n        }]\n      });\n      setTop3Cate(arr);\n    }\n  }, [products, order]); // const options = {\n  //     scales: {\n  //         yAxes: [\n  //         {\n  //             ticks: {\n  //                 beginAtZero: true,\n  //             },\n  //         },\n  //         ],\n  //     },\n  //     legend: {\n  //         labels: { \n  //             fontSize: 14\n  //         }\n  //     }\n  // }\n\n  const options = {\n    scales: {\n      yAxes: [{\n        type: 'linear',\n        display: true,\n        position: 'left',\n        id: 'y-axis-1'\n      }, {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        id: 'y-axis-2',\n        gridLines: {\n          drawOnArea: false\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faGlobe,\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"2020 Sales by Top 3 Categories\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-content flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-map\",\n    style: {\n      margin: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardChart.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faGlobe","Line","DashboardChart","props","products","order","top3Cate","setTop3Cate","data","setData","length","allCate","Object","values","reduce","a","productCate","count","create","i","j","productSold","sort","b","arr","splice","console","log","labels","datasets","label","fill","backgroundColor","borderColor","yAxisID","options","scales","yAxes","type","display","position","id","gridLines","drawOnArea","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons'  \n// import { Bar } from '@reactchartjs/react-chart.js'\nimport { Line } from '@reactchartjs/react-chart.js'\n\nexport default function DashboardChart(props) {\n\n    const products = props.products \n    const order = props.order \n    const [top3Cate, setTop3Cate] = useState([])\n    const [data, setData] = useState({})\n\n    useEffect(()=>{\n        if (products.length > 0 && order.length > 0) {\n            const allCate = Object.values(products.reduce((a, {productCate}) => {\n                a[productCate] = a[productCate] || {productCate, count: 0};\n                return a;\n            }, Object.create(null)));\n    \n            for (let i in allCate) {\n                for (let j in products) {\n                    if (allCate[i].productCate === products[j].productCate) { \n                        allCate[i].count += products[j].productSold\n                    }\n                }\n            }\n            allCate.sort((a, b) => b.count - a.count)\n            const arr = allCate.splice(0,3); \n            console.log(arr)\n\n            // setData({ \n            //     labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            //     datasets: [\n            //         {\n            //             label: arr[0].productCate,\n            //             data: [12, 19, 3, 5, 2, arr[0].count],\n            //             backgroundColor: 'rgb(255, 99, 132)',\n            //         },\n            //         {\n            //             label: arr[1].productCate,\n            //             data: [2, 3, 20, 5, 1, arr[1].count],\n            //             backgroundColor: 'rgb(54, 162, 235)',\n            //         },\n            //         {\n            //             label: arr[2].productCate,\n            //             data: [3, 10, 13, 15, 22, arr[2].count],\n            //             backgroundColor: 'rgb(75, 192, 192)',\n            //         },\n            //     ],\n            // })\n            setData({\n                labels: ['1', '2', '3', '4', '5', '6'],\n                datasets: [\n                  {\n                    label: '# of Votes',\n                    data: [12, 19, 3, 5, 2, 3],\n                    fill: false,\n                    backgroundColor: 'rgb(255, 99, 132)',\n                    borderColor: 'rgba(255, 99, 132, 0.2)',\n                    yAxisID: 'y-axis-1',\n                  },\n                  {\n                    label: '# of No Votes',\n                    data: [1, 2, 1, 1, 2, 2],\n                    fill: false,\n                    backgroundColor: 'rgb(54, 162, 235)',\n                    borderColor: 'rgba(54, 162, 235, 0.2)',\n                    yAxisID: 'y-axis-2',\n                  },\n                ],\n              })\n            setTop3Cate(arr)\n        }\n    },[products, order]) \n\n    // const options = {\n    //     scales: {\n    //         yAxes: [\n    //         {\n    //             ticks: {\n    //                 beginAtZero: true,\n    //             },\n    //         },\n    //         ],\n    //     },\n    //     legend: {\n    //         labels: { \n    //             fontSize: 14\n    //         }\n    //     }\n    // }\n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    id: 'y-axis-1',\n                },\n                {\n                    type: 'linear',\n                    display: true,\n                    position: 'right',\n                    id: 'y-axis-2',\n                    gridLines: {\n                    drawOnArea: false,\n                    },\n                },\n            ],\n        },\n    }\n\n\n    return (\n        <div className=\"chart flex-col\">\n            <div className=\"headerbox flex-center\">\n                <FontAwesomeIcon icon={faGlobe} className=\"icon\"/>\n            </div>\n            <div className=\"top-location-container\">\n                <div className=\"headerbox-header\">\n                    <p>2020 Sales by Top 3 Categories</p>\n                </div>\n                <div className=\"top-location-content flex\">\n                    <div className=\"top-location-map\" style={{margin: '0'}}>\n                        {/* <Bar data={data} options={options} />  */}\n                        <Line data={data} options={options} /> \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}