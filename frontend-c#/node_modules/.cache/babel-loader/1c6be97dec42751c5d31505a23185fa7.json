{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardMain.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { faFileInvoice, faMoneyBillWave, faStar, faTasks, faTshirt, faUser } from '@fortawesome/free-solid-svg-icons';\nimport DashboardTotalCount from './DashboardTotalCount';\nimport DashboardLocation from './DashboardLocation';\nimport DashboardTopFive from './DashboardTopFive';\nimport DashboardRecentReview from './DashboardRecentReview';\nimport axios from 'axios';\nimport DashboardChart from './DashboardChart';\nimport DashboardTodoList from './DashboardTodoList';\nimport DashboardChartPie from './DashboardChartPie';\nimport DashboardChartLine from './DashboardChartLine';\nexport default function DashboardMain() {\n  const [products, setProducts] = useState([]);\n  const [order, setOrder] = useState([]);\n  const [email, setEmail] = useState([]);\n  const [user, setUser] = useState([]);\n  const [topCustomer, setTopCusomer] = useState([]);\n  const [topProductSales, setTopProductSales] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalSale, setTotalSale] = useState(0);\n  const [orderMonthPercent, setOrderMonthPercent] = useState({});\n  const [saleMonthPercent, setSaleMonthPercent] = useState({});\n  const [incomeMonthPercent, setIncomeMonthPercent] = useState({});\n  const [emailMonthPercent, setEmailMonthPercent] = useState({});\n  useEffect(() => {\n    axios.get(`http://pe.heromc.net:4000/products`).then(res => {\n      setProducts(res.data);\n      let virtualProducts = [...res.data];\n      virtualProducts.sort((a, b) => b.productSold - a.productSold);\n      let virtualProducts2 = [];\n\n      for (let i in virtualProducts) {\n        let data = { ...virtualProducts[i],\n          count: virtualProducts[i].productSold\n        };\n        virtualProducts2.push(data);\n      }\n\n      setTopProductSales(virtualProducts2);\n    });\n    axios.get(`http://pe.heromc.net:4000/users/list`).then(res => {\n      setUser(res.data);\n    });\n    axios.get(`http://pe.heromc.net:4000/email`).then(res => {\n      setEmail(res.data);\n      const currentMonth = new Date().getMonth() + 1;\n      const currentYear = new Date().getFullYear();\n      let lastYear = new Date().getFullYear();\n      let lastMonth = 0;\n\n      if (currentMonth === 1) {\n        lastMonth = 12;\n        lastYear = currentYear - 1;\n      } else {\n        lastMonth = currentMonth - 1;\n        lastYear = currentYear;\n      }\n\n      const currentEmail = [];\n      const lastMonthEmail = [];\n\n      for (let i in res.data) {\n        if (new Date(res.data[i].orderDate).getMonth() + 1 === currentMonth && new Date(res.data[i].orderDate).getFullYear() === currentYear) {\n          currentEmail.push(res.data[i]);\n        }\n\n        if (new Date(res.data[i].orderDate).getMonth() + 1 === lastMonth && new Date(res.data[i].orderDate).getFullYear() === lastYear) {\n          lastMonthEmail.push(res.data[i]);\n        }\n      }\n\n      console.log(currentEmail, lastMonthEmail);\n\n      if (currentEmail.length >= lastMonthEmail.length) {\n        setEmailMonthPercent({\n          percent: Math.ceil((currentEmail.length - lastMonthEmail.length) / lastMonthEmail.length * 100),\n          isDecrease: true\n        });\n      } else {\n        console.log(Math.ceil((lastMonthEmail.length - currentEmail.length) / lastMonthEmail.length * 100));\n        setEmailMonthPercent({\n          percent: Math.ceil((lastMonthEmail.length - currentEmail.length) / lastMonthEmail.length * 100),\n          isDecrease: false\n        });\n      }\n    });\n    axios.get(`http://pe.heromc.net:4000/order`).then(res => {\n      setOrder(res.data);\n      const topCustomer2 = Object.values(res.data.reduce((a, {\n        orderEmail,\n        orderName,\n        orderTotal,\n        orderAvatar\n      }) => {\n        a[orderEmail] = a[orderEmail] || {\n          orderEmail,\n          orderName,\n          orderAvatar,\n          orderTotal,\n          count: 0\n        };\n        a[orderEmail].count++;\n        return a;\n      }, Object.create(null)));\n      topCustomer2.sort((a, b) => b.count - a.count);\n      setTopCusomer(topCustomer2);\n      var totalIncome = 0;\n      var totalSale = 0;\n\n      for (let i in res.data) {\n        for (let j in res.data[i].orderList) {\n          totalSale += res.data[i].orderList[j].amount;\n        }\n\n        totalIncome += res.data[i].orderTotal;\n      }\n\n      setTotalSale(totalSale);\n      setTotalIncome(totalIncome);\n      const currentMonth = new Date().getMonth() + 1;\n      const currentYear = new Date().getFullYear();\n      let lastYear = new Date().getFullYear();\n      let lastMonth = 0;\n\n      if (currentMonth === 1) {\n        lastMonth = 12;\n        lastYear = currentYear - 1;\n      } else {\n        lastMonth = currentMonth - 1;\n        lastYear = currentYear;\n      }\n\n      const currentOrder = [];\n      const lastMonthOrder = [];\n      let currentTotalIncome = 0;\n      let currentTotalSale = 0;\n      let lastCurrentTotalIncome = 0;\n      let lastCurrentTotalSale = 0;\n\n      for (let i in res.data) {\n        if (new Date(res.data[i].orderDate).getMonth() + 1 === currentMonth && new Date(res.data[i].orderDate).getFullYear() === currentYear) {\n          currentOrder.push(res.data[i]);\n          currentTotalIncome += res.data[i].orderTotal;\n        }\n\n        if (new Date(res.data[i].orderDate).getMonth() + 1 === lastMonth && new Date(res.data[i].orderDate).getFullYear() === lastYear) {\n          lastMonthOrder.push(res.data[i]);\n          lastCurrentTotalIncome += res.data[i].orderTotal;\n        }\n\n        for (let j in res.data[i].orderList) {\n          if (new Date(res.data[i].orderDate).getMonth() + 1 === currentMonth && new Date(res.data[i].orderDate).getFullYear() === currentYear) {\n            currentTotalSale += res.data[i].orderList[j].amount;\n          }\n\n          if (new Date(res.data[i].orderDate).getMonth() + 1 === lastMonth && new Date(res.data[i].orderDate).getFullYear() === lastYear) {\n            lastCurrentTotalSale += res.data[i].orderList[j].amount;\n          }\n        }\n      }\n\n      if (currentOrder.length >= lastMonthOrder.length) {\n        setOrderMonthPercent({\n          percent: Math.ceil((currentOrder.length - lastMonthOrder.length) / lastMonthOrder.length * 100),\n          isDecrease: true\n        });\n      } else {\n        setOrderMonthPercent({\n          percent: Math.ceil((lastMonthOrder.length - currentOrder.length) / lastMonthOrder.length * 100),\n          isDecrease: false\n        });\n      }\n\n      if (currentTotalSale >= lastCurrentTotalSale) {\n        setSaleMonthPercent({\n          percent: Math.ceil((currentTotalSale - lastCurrentTotalSale) / lastCurrentTotalSale * 100),\n          isDecrease: true\n        });\n      } else {\n        setSaleMonthPercent({\n          percent: Math.ceil((lastCurrentTotalSale - currentTotalSale) / lastCurrentTotalSale * 100),\n          isDecrease: false\n        });\n      }\n\n      if (currentTotalIncome >= lastCurrentTotalIncome) {\n        setIncomeMonthPercent({\n          percent: Math.ceil((currentTotalIncome - lastCurrentTotalIncome) / lastCurrentTotalIncome * 100),\n          isDecrease: true\n        });\n      } else {\n        setIncomeMonthPercent({\n          percent: Math.ceil((lastCurrentTotalIncome - currentTotalIncome) / lastCurrentTotalIncome * 100),\n          isDecrease: false\n        });\n      }\n    });\n  }, []);\n  const totalCount = [{\n    id: 1,\n    title: \"Total orders\",\n    count: order.length,\n    percent: orderMonthPercent.percent,\n    isDecrease: orderMonthPercent.isDecrease,\n    color: \"orange\",\n    icon: faFileInvoice\n  }, {\n    id: 2,\n    title: \"Total sales\",\n    count: `${totalSale}`,\n    percent: saleMonthPercent.percent,\n    isDecrease: saleMonthPercent.isDecrease,\n    color: \"pink\",\n    icon: faTshirt\n  }, {\n    id: 3,\n    title: \"Income\",\n    count: `${totalIncome}Ä‘`,\n    percent: incomeMonthPercent.percent,\n    isDecrease: incomeMonthPercent.isDecrease,\n    color: \"green\",\n    icon: faMoneyBillWave\n  }, {\n    id: 4,\n    title: \"Users\",\n    count: user.length,\n    percent: emailMonthPercent.percent,\n    isDecrease: emailMonthPercent.isDecrease,\n    color: \"lightblue\",\n    icon: faUser\n  }];\n  const recentVote = [];\n\n  if (products.length > 0) {\n    for (let i = 0; i < products.length; i++) {\n      const productVote = products[i].productVote;\n\n      for (let j = 0; j < productVote.length; j++) {\n        const newRatingDate = new Date(productVote[j].ratingDate);\n        productVote[j].productName = products[i].productName;\n\n        if (newRatingDate.getDate() === new Date().getDate()) {\n          let hours = newRatingDate.getHours().toString();\n          let minutes = newRatingDate.getMinutes().toString();\n\n          if (hours < 10) {\n            hours = \"0\" + hours;\n          }\n\n          if (minutes < 10) {\n            minutes = \"0\" + minutes;\n          }\n\n          productVote[j].ratingHours = hours;\n          productVote[j].ratingMinutes = minutes;\n        } else {\n          let days = newRatingDate.getDate().toString();\n          let months = (newRatingDate.getMonth() + 1).toString();\n\n          if (days < 10) {\n            days = \"0\" + days;\n          }\n\n          if (months < 10) {\n            months = \"0\" + months;\n          }\n\n          productVote[j].ratingDays = days;\n          productVote[j].ratingMonths = months;\n          productVote[j].ratingYears = newRatingDate.getFullYear().toString();\n        }\n\n        recentVote.push(productVote[j]);\n      }\n    }\n  }\n\n  if (recentVote) {\n    recentVote.sort(function (a, b) {\n      return new Date(b.ratingDate) - new Date(a.ratingDate);\n    });\n  }\n\n  const topRecentVote = recentVote.splice(0, 5);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, totalCount.map((item, index) => {\n    return /*#__PURE__*/React.createElement(DashboardTotalCount, {\n      key: index,\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }\n    });\n  })), /*#__PURE__*/React.createElement(DashboardLocation, {\n    order: order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardTopFive, {\n    icon: faUser,\n    title: \"Top customers by orders\",\n    color: \"lightblue\",\n    data: topCustomer,\n    table: [{\n      title: 'User name'\n    }, {\n      title: 'Total orders'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DashboardTopFive, {\n    icon: faTshirt,\n    title: \"Top products by selling\",\n    color: \"pink\",\n    data: topProductSales,\n    table: [{\n      title: 'Product name'\n    }, {\n      title: 'Total sales'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardChartPie, {\n    email: email,\n    color: \"pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DashboardChart, {\n    products: products,\n    order: order,\n    color: \"lightblue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardRecentReview, {\n    icon: faStar,\n    title: \"Recent Reviews\",\n    color: \"orange\",\n    topRecentVote: topRecentVote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DashboardTodoList // recent orders\n  , {\n    icon: faTasks,\n    title: \"Todo list\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardChartLine, {\n    icon: faTasks,\n    order: order,\n    color: \"pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardMain.js"],"names":["React","useEffect","useState","faFileInvoice","faMoneyBillWave","faStar","faTasks","faTshirt","faUser","DashboardTotalCount","DashboardLocation","DashboardTopFive","DashboardRecentReview","axios","DashboardChart","DashboardTodoList","DashboardChartPie","DashboardChartLine","DashboardMain","products","setProducts","order","setOrder","email","setEmail","user","setUser","topCustomer","setTopCusomer","topProductSales","setTopProductSales","totalIncome","setTotalIncome","totalSale","setTotalSale","orderMonthPercent","setOrderMonthPercent","saleMonthPercent","setSaleMonthPercent","incomeMonthPercent","setIncomeMonthPercent","emailMonthPercent","setEmailMonthPercent","get","then","res","data","virtualProducts","sort","a","b","productSold","virtualProducts2","i","count","push","currentMonth","Date","getMonth","currentYear","getFullYear","lastYear","lastMonth","currentEmail","lastMonthEmail","orderDate","console","log","length","percent","Math","ceil","isDecrease","topCustomer2","Object","values","reduce","orderEmail","orderName","orderTotal","orderAvatar","create","j","orderList","amount","currentOrder","lastMonthOrder","currentTotalIncome","currentTotalSale","lastCurrentTotalIncome","lastCurrentTotalSale","totalCount","id","title","color","icon","recentVote","productVote","newRatingDate","ratingDate","productName","getDate","hours","getHours","toString","minutes","getMinutes","ratingHours","ratingMinutes","days","months","ratingDays","ratingMonths","ratingYears","topRecentVote","splice","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { faFileInvoice, faMoneyBillWave, faStar, faTasks, faTshirt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport DashboardTotalCount from './DashboardTotalCount'\nimport DashboardLocation from './DashboardLocation'\nimport DashboardTopFive from './DashboardTopFive'\nimport DashboardRecentReview from './DashboardRecentReview'\nimport axios from 'axios'\nimport DashboardChart from './DashboardChart'\nimport DashboardTodoList from './DashboardTodoList'\nimport DashboardChartPie from './DashboardChartPie'\nimport DashboardChartLine from './DashboardChartLine'\n\nexport default function DashboardMain() {\n\n    const [products, setProducts] = useState([]);\n    const [order, setOrder] = useState([]);\n    const [email, setEmail] = useState([]);\n    const [user, setUser] = useState([]);\n    const [topCustomer, setTopCusomer] = useState([]);\n    const [topProductSales, setTopProductSales] = useState([]);\n    const [totalIncome, setTotalIncome] = useState(0);\n    const [totalSale, setTotalSale] = useState(0);\n    const [orderMonthPercent, setOrderMonthPercent] = useState({})\n    const [saleMonthPercent, setSaleMonthPercent] = useState({})\n    const [incomeMonthPercent, setIncomeMonthPercent] = useState({})\n    const [emailMonthPercent, setEmailMonthPercent] = useState({})\n\n    useEffect(()=>{\n        axios.get(`http://pe.heromc.net:4000/products`)\n            .then(res => {\n                setProducts(res.data)\n                let virtualProducts = [...res.data]\n                virtualProducts.sort((a,b) =>  b.productSold - a.productSold)\n                let virtualProducts2 = []\n                for (let i in virtualProducts) {\n                    let data = {\n                        ...virtualProducts[i],\n                        count: virtualProducts[i].productSold\n                    }\n                    virtualProducts2.push(data)\n                }\n                setTopProductSales(virtualProducts2)\n            }\n        )\n        axios.get(`http://pe.heromc.net:4000/users/list`)\n            .then(res => {\n                setUser(res.data)\n            }\n        ) \n        axios.get(`http://pe.heromc.net:4000/email`)\n            .then(res => {\n                setEmail(res.data)\n                \n                const currentMonth = new Date().getMonth() + 1\n                const currentYear = new Date().getFullYear()\n                let lastYear = new Date().getFullYear()\n                let lastMonth = 0\n                if (currentMonth === 1) {\n                    lastMonth = 12\n                    lastYear = currentYear - 1\n                } else {\n                    lastMonth = currentMonth - 1\n                    lastYear = currentYear\n                }\n                const currentEmail = []\n                const lastMonthEmail = [] \n                for (let i in res.data) {\n                    if (new Date(res.data[i].orderDate).getMonth()+1 === currentMonth &&\n                        new Date(res.data[i].orderDate).getFullYear() === currentYear) {\n                        currentEmail.push(res.data[i])  \n                    } \n                    if (new Date(res.data[i].orderDate).getMonth()+1 === lastMonth &&\n                        new Date(res.data[i].orderDate).getFullYear() === lastYear) {\n                        lastMonthEmail.push(res.data[i])  \n                    }\n                }\n                console.log(currentEmail, lastMonthEmail)\n                if (currentEmail.length >= lastMonthEmail.length) {\n                    setEmailMonthPercent({\n                        percent: Math.ceil(((currentEmail.length - lastMonthEmail.length)/lastMonthEmail.length) * 100),\n                        isDecrease: true\n                    })\n                } else { \n                    console.log(Math.ceil(((lastMonthEmail.length - currentEmail.length)/lastMonthEmail.length) * 100))\n                    setEmailMonthPercent({\n                        percent: Math.ceil(((lastMonthEmail.length - currentEmail.length)/lastMonthEmail.length) * 100),\n                        isDecrease: false\n                    })\n                }\n            }\n        ) \n        axios.get(`http://pe.heromc.net:4000/order`)\n            .then(res => {\n                setOrder(res.data)\n                const topCustomer2 = Object.values(res.data.reduce((a, {orderEmail, orderName, orderTotal, orderAvatar}) => {\n                    a[orderEmail] = a[orderEmail] || {orderEmail, orderName, orderAvatar, orderTotal, count: 0};\n                    a[orderEmail].count++;\n                    return a;\n                }, Object.create(null)));\n                topCustomer2.sort((a,b) =>  b.count - a.count)\n                setTopCusomer(topCustomer2)\n\n                var totalIncome = 0;\n                var totalSale = 0;\n                for(let i in res.data) {\n                    for(let j in res.data[i].orderList) {\n                        totalSale += res.data[i].orderList[j].amount\n                    }\n                    totalIncome += res.data[i].orderTotal\n                }\n                setTotalSale(totalSale)\n                setTotalIncome(totalIncome) \n\n                const currentMonth = new Date().getMonth() + 1\n                const currentYear = new Date().getFullYear()\n                let lastYear = new Date().getFullYear()\n                let lastMonth = 0\n                if (currentMonth === 1) {\n                    lastMonth = 12\n                    lastYear = currentYear - 1\n                } else {\n                    lastMonth = currentMonth - 1\n                    lastYear = currentYear\n                }\n                const currentOrder = []\n                const lastMonthOrder = []\n                let currentTotalIncome = 0;\n                let currentTotalSale = 0;\n                let lastCurrentTotalIncome = 0;\n                let lastCurrentTotalSale = 0;\n                for (let i in res.data) {\n                    if (new Date(res.data[i].orderDate).getMonth()+1 === currentMonth &&\n                        new Date(res.data[i].orderDate).getFullYear() === currentYear) {\n                        currentOrder.push(res.data[i]) \n                        currentTotalIncome += res.data[i].orderTotal\n                    } \n                    if (new Date(res.data[i].orderDate).getMonth()+1 === lastMonth &&\n                        new Date(res.data[i].orderDate).getFullYear() === lastYear) {\n                        lastMonthOrder.push(res.data[i]) \n                        lastCurrentTotalIncome += res.data[i].orderTotal\n                    }\n                    for(let j in res.data[i].orderList) {\n                        if (new Date(res.data[i].orderDate).getMonth()+1 === currentMonth &&\n                            new Date(res.data[i].orderDate).getFullYear() === currentYear) { \n                            currentTotalSale += res.data[i].orderList[j].amount \n                        } \n                        if (new Date(res.data[i].orderDate).getMonth()+1 === lastMonth &&\n                            new Date(res.data[i].orderDate).getFullYear() === lastYear) { \n                            lastCurrentTotalSale += res.data[i].orderList[j].amount \n                        }\n                    }\n                }   \n\n                if (currentOrder.length >= lastMonthOrder.length) {\n                    setOrderMonthPercent({\n                        percent: Math.ceil(((currentOrder.length - lastMonthOrder.length)/lastMonthOrder.length) * 100),\n                        isDecrease: true\n                    })\n                } else { \n                    setOrderMonthPercent({\n                        percent: Math.ceil(((lastMonthOrder.length - currentOrder.length)/lastMonthOrder.length) * 100),\n                        isDecrease: false\n                    })\n                }\n                if (currentTotalSale >= lastCurrentTotalSale) {\n                    setSaleMonthPercent({\n                        percent: Math.ceil(((currentTotalSale - lastCurrentTotalSale)/lastCurrentTotalSale) * 100),\n                        isDecrease: true\n                    })\n                } else { \n                    setSaleMonthPercent({\n                        percent: Math.ceil(((lastCurrentTotalSale - currentTotalSale)/lastCurrentTotalSale) * 100),\n                        isDecrease: false\n                    })\n                }\n                if (currentTotalIncome >= lastCurrentTotalIncome) {\n                    setIncomeMonthPercent({\n                        percent: Math.ceil(((currentTotalIncome - lastCurrentTotalIncome)/lastCurrentTotalIncome) * 100),\n                        isDecrease: true\n                    })\n                } else { \n                    setIncomeMonthPercent({\n                        percent: Math.ceil(((lastCurrentTotalIncome - currentTotalIncome)/lastCurrentTotalIncome) * 100),\n                        isDecrease: false\n                    })\n                }\n            }\n        ) \n    }, []) \n\n    const totalCount = [\n        {\n            id: 1,\n            title: \"Total orders\",\n            count: order.length,\n            percent: orderMonthPercent.percent,\n            isDecrease: orderMonthPercent.isDecrease,\n            color: \"orange\",\n            icon: faFileInvoice\n        },\n        {\n            id: 2,\n            title: \"Total sales\",\n            count: `${totalSale}`,\n            percent: saleMonthPercent.percent,\n            isDecrease: saleMonthPercent.isDecrease,\n            color: \"pink\",\n            icon: faTshirt\n        },\n        {\n            id: 3,\n            title: \"Income\",\n            count: `${totalIncome}Ä‘`,\n            percent: incomeMonthPercent.percent,\n            isDecrease: incomeMonthPercent.isDecrease,\n            color: \"green\",\n            icon: faMoneyBillWave\n        },\n        {\n            id: 4,\n            title: \"Users\",\n            count: user.length,\n            percent: emailMonthPercent.percent,\n            isDecrease: emailMonthPercent.isDecrease,\n            color: \"lightblue\",\n            icon: faUser\n        },\n    ]\n\n    const recentVote = [];\n    if (products.length > 0) {\n        for (let i = 0; i < products.length; i++) {\n            const productVote = products[i].productVote;\n            for (let j = 0; j < productVote.length; j++) {\n                const newRatingDate = new Date(productVote[j].ratingDate);\n                productVote[j].productName = products[i].productName;\n                if (newRatingDate.getDate() === new Date().getDate()) {\n                    let hours = newRatingDate.getHours().toString();\n                    let minutes = newRatingDate.getMinutes().toString();\n                    if (hours < 10) {\n                        hours = \"0\" + hours\n                    }\n                    if (minutes < 10) {\n                        minutes = \"0\" + minutes\n                    }\n                    productVote[j].ratingHours = hours;\n                    productVote[j].ratingMinutes = minutes;\n                } else {\n                    let days = newRatingDate.getDate().toString();\n                    let months = (newRatingDate.getMonth()+1).toString();\n                    if (days < 10) {\n                        days = \"0\" + days\n                    }\n                    if (months < 10) {\n                        months = \"0\" + months\n                    }\n                    productVote[j].ratingDays = days;\n                    productVote[j].ratingMonths = months;\n                    productVote[j].ratingYears = newRatingDate.getFullYear().toString();\n                }\n                recentVote.push(productVote[j])\n            }\n        }\n    }\n\n    if (recentVote) {\n        recentVote.sort(function(a,b){\n            return new Date(b.ratingDate) - new Date(a.ratingDate);\n        });\n    }\n\n    const topRecentVote = recentVote.splice(0,5)\n    \n    return (\n        <div className=\"dashboard-main\">\n            <div className=\"row flex\">\n                { totalCount.map((item, index)=> { \n                    return (\n                        <DashboardTotalCount\n                            key = {index}\n                            item = {item}\n                        />\n                    )\n                })}\n            </div>\n            <DashboardLocation\n                order={order}\n            />\n            <div className=\"row flex\">\n                <DashboardTopFive\n                    icon = {faUser}\n                    title = \"Top customers by orders\"\n                    color = \"lightblue\"\n                    data = {topCustomer}\n                    table = {[\n                        {\n                            title: 'User name'\n                        },\n                        {\n                            title: 'Total orders'\n                        },\n                    ]}\n                />\n                <DashboardTopFive\n                    icon = {faTshirt}\n                    title = \"Top products by selling\"\n                    color = \"pink\"\n                    data = {topProductSales}\n                    table = {[\n                        {\n                            title: 'Product name'\n                        },\n                        {\n                            title: 'Total sales'\n                        },\n                    ]}\n                />\n            </div>\n            <div className=\"row flex\">\n                <DashboardChartPie\n                    email = {email}\n                    color = \"pink\"\n                />\n                <DashboardChart\n                    products = {products}\n                    order = {order}\n                    color = \"lightblue\"\n                />\n            </div>\n            <div className=\"row flex\">\n                <DashboardRecentReview\n                    icon = {faStar}\n                    title = \"Recent Reviews\"\n                    color = \"orange\"\n                    topRecentVote = {topRecentVote}\n                />\n                <DashboardTodoList // recent orders\n                    icon = {faTasks}\n                    title = \"Todo list\"\n                    color = \"green\"\n                />\n            </div>\n            <div className=\"row flex\">\n                <DashboardChartLine\n                    icon = {faTasks}\n                    order = {order}\n                    color = \"pink\"\n                />\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}