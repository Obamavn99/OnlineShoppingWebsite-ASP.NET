{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardMain.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { faFileInvoice, faMoneyBillWave, faStar, faTasks, faTshirt, faUser } from '@fortawesome/free-solid-svg-icons';\nimport DashboardTotalCount from './DashboardTotalCount';\nimport DashboardLocation from './DashboardLocation';\nimport DashboardTopFive from './DashboardTopFive';\nimport DashboardRecentReview from './DashboardRecentReview';\nimport axios from 'axios';\nimport DashboardChart from './DashboardChart';\nimport DashboardTodoList from './DashboardTodoList';\nexport default function DashboardMain() {\n  const [products, setProducts] = useState([]);\n  const [order, setOrder] = useState([]);\n  const [user, setUser] = useState([]);\n  const [topCustomer, setTopCusomer] = useState([]);\n  const [topProductSales, setTopProductSales] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalSale, setTotalSale] = useState(0);\n  useEffect(() => {\n    axios.get(`http://localhost:4000/products`).then(res => {\n      setProducts(res.data);\n    });\n    axios.get(`http://localhost:4000/users/list`).then(res => {\n      setUser(res.data);\n    });\n    axios.get(`http://localhost:4000/order`).then(res => {\n      setOrder(res.data);\n      const topCustomer2 = Object.values(res.data.reduce((a, {\n        orderEmail,\n        orderName,\n        orderTotal,\n        orderAvatar\n      }) => {\n        a[orderEmail] = a[orderEmail] || {\n          orderEmail,\n          orderName,\n          orderAvatar,\n          orderTotal,\n          count: 0\n        };\n        a[orderEmail].count++;\n        return a;\n      }, Object.create(null)));\n      topCustomer2.sort((a, b) => b.count - a.count);\n      setTopCusomer(topCustomer2);\n      var totalIncome = 0;\n      var totalSale = 0;\n\n      for (let i in res.data) {\n        for (let j in res.data[i].orderList) {\n          totalSale += res.data[i].orderList[j].amount;\n        }\n\n        totalIncome += res.data[i].orderTotal;\n      }\n\n      setTotalSale(totalSale);\n      setTotalIncome(totalIncome);\n    });\n  }, []);\n  useEffect(() => {\n    var allProductSales = [];\n\n    for (let i in order) {\n      for (let j in order[i].orderList) {\n        for (let k in products) {\n          if (products[k]._id === order[i].orderList[j].id) {\n            allProductSales.push(products[k]);\n          }\n        }\n      }\n    }\n\n    const topProductSales2 = Object.values(allProductSales.reduce((a, {\n      _id,\n      productName,\n      productImg\n    }) => {\n      a[_id] = a[_id] || {\n        _id,\n        productName,\n        productImg,\n        count: 0\n      };\n      a[_id].count++;\n      return a;\n    }, Object.create(null)));\n    topProductSales2.sort((a, b) => b.count - a.count);\n    setTopProductSales(topProductSales2);\n  }, [order, products]);\n  const totalCount = [{\n    id: 1,\n    title: \"Total orders\",\n    count: order.length,\n    percent: 12,\n    color: \"orange\",\n    icon: faFileInvoice\n  }, {\n    id: 2,\n    title: \"Total sales\",\n    count: `${totalSale}`,\n    percent: 20,\n    color: \"pink\",\n    icon: faTshirt\n  }, {\n    id: 3,\n    title: \"Income\",\n    count: `${totalIncome}Ä‘`,\n    percent: 30,\n    color: \"green\",\n    icon: faMoneyBillWave\n  }, {\n    id: 4,\n    title: \"Users\",\n    count: user.length,\n    percent: 5,\n    color: \"lightblue\",\n    icon: faUser\n  }];\n  const recentVote = [];\n\n  if (products.length > 0) {\n    for (let i = 0; i < products.length; i++) {\n      const productVote = products[i].productVote;\n\n      for (let j = 0; j < productVote.length; j++) {\n        const newRatingDate = new Date(productVote[j].ratingDate);\n        productVote[j].productName = products[i].productName;\n\n        if (newRatingDate.getDate() === new Date().getDate()) {\n          let hours = newRatingDate.getHours().toString();\n          let minutes = newRatingDate.getMinutes().toString();\n\n          if (hours < 10) {\n            hours = \"0\" + hours;\n          }\n\n          if (minutes < 10) {\n            minutes = \"0\" + minutes;\n          }\n\n          productVote[j].ratingHours = hours;\n          productVote[j].ratingMinutes = minutes;\n        } else {\n          let days = newRatingDate.getDay().toString();\n          let months = newRatingDate.getMonth().toString();\n\n          if (days < 10) {\n            days = \"0\" + days;\n          }\n\n          if (months < 10) {\n            months = \"0\" + months;\n          }\n\n          productVote[j].ratingDays = days;\n          productVote[j].ratingMonths = months;\n          productVote[j].ratingYears = newRatingDate.getFullYear().toString();\n        }\n\n        recentVote.push(productVote[j]);\n      }\n    }\n  }\n\n  if (recentVote) {\n    recentVote.sort(function (a, b) {\n      return new Date(b.ratingDate) - new Date(a.ratingDate);\n    });\n  }\n\n  const topRecentVote = recentVote.splice(0, 5);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, totalCount.map((item, index) => {\n    return /*#__PURE__*/React.createElement(DashboardTotalCount, {\n      key: index,\n      icon: item.icon,\n      title: item.title,\n      count: item.count,\n      percent: item.percent,\n      color: item.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    });\n  })), /*#__PURE__*/React.createElement(DashboardLocation, {\n    order: order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardTopFive, {\n    icon: faUser,\n    title: \"Top customers by orders\",\n    color: \"lightblue\",\n    data: topCustomer,\n    table: [{\n      title: 'User name'\n    }, {\n      title: 'Total orders'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DashboardTopFive, {\n    icon: faTshirt,\n    title: \"Top products by selling\",\n    color: \"pink\",\n    data: topProductSales,\n    table: [{\n      title: 'Product name'\n    }, {\n      title: 'Total sales'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardRecentReview, {\n    icon: faStar,\n    title: \"Recent Reviews\",\n    color: \"orange\",\n    topRecentVote: topRecentVote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DashboardTodoList // recent orders\n  , {\n    icon: faTasks,\n    title: \"Todo list\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardMain.js"],"names":["React","useEffect","useState","faFileInvoice","faMoneyBillWave","faStar","faTasks","faTshirt","faUser","DashboardTotalCount","DashboardLocation","DashboardTopFive","DashboardRecentReview","axios","DashboardChart","DashboardTodoList","DashboardMain","products","setProducts","order","setOrder","user","setUser","topCustomer","setTopCusomer","topProductSales","setTopProductSales","totalIncome","setTotalIncome","totalSale","setTotalSale","get","then","res","data","topCustomer2","Object","values","reduce","a","orderEmail","orderName","orderTotal","orderAvatar","count","create","sort","b","i","j","orderList","amount","allProductSales","k","_id","id","push","topProductSales2","productName","productImg","totalCount","title","length","percent","color","icon","recentVote","productVote","newRatingDate","Date","ratingDate","getDate","hours","getHours","toString","minutes","getMinutes","ratingHours","ratingMinutes","days","getDay","months","getMonth","ratingDays","ratingMonths","ratingYears","getFullYear","topRecentVote","splice","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { faFileInvoice, faMoneyBillWave, faStar, faTasks, faTshirt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport DashboardTotalCount from './DashboardTotalCount'\nimport DashboardLocation from './DashboardLocation'\nimport DashboardTopFive from './DashboardTopFive'\nimport DashboardRecentReview from './DashboardRecentReview'\nimport axios from 'axios'\nimport DashboardChart from './DashboardChart'\nimport DashboardTodoList from './DashboardTodoList'\n\nexport default function DashboardMain() {\n\n    const [products, setProducts] = useState([]);\n    const [order, setOrder] = useState([]);\n    const [user, setUser] = useState([]);\n    const [topCustomer, setTopCusomer] = useState([]);\n    const [topProductSales, setTopProductSales] = useState([]);\n    const [totalIncome, setTotalIncome] = useState(0);\n    const [totalSale, setTotalSale] = useState(0);\n\n    useEffect(()=>{\n        axios.get(`http://localhost:4000/products`)\n            .then(res => {\n                setProducts(res.data)\n            }\n        )\n        axios.get(`http://localhost:4000/users/list`)\n            .then(res => {\n                setUser(res.data)\n            }\n        )\n        axios.get(`http://localhost:4000/order`)\n            .then(res => {\n                setOrder(res.data)\n                const topCustomer2 = Object.values(res.data.reduce((a, {orderEmail, orderName, orderTotal, orderAvatar}) => {\n                    a[orderEmail] = a[orderEmail] || {orderEmail, orderName, orderAvatar, orderTotal, count: 0};\n                    a[orderEmail].count++;\n                    return a;\n                }, Object.create(null)));\n                topCustomer2.sort((a,b) =>  b.count - a.count)\n                setTopCusomer(topCustomer2)\n\n                var totalIncome = 0;\n                var totalSale = 0;\n                for(let i in res.data) {\n                    for(let j in res.data[i].orderList) {\n                        totalSale += res.data[i].orderList[j].amount\n                    }\n                    totalIncome += res.data[i].orderTotal\n                }\n                setTotalSale(totalSale)\n                setTotalIncome(totalIncome)\n            }\n        )\n    }, [])\n    useEffect(()=>{\n        var allProductSales = []\n        for (let i in order) {\n            for (let j in order[i].orderList) {\n                for (let k in products) {\n                    if (products[k]._id === order[i].orderList[j].id) {\n                        allProductSales.push(products[k])\n                    }\n                }\n            }\n        }\n        const topProductSales2 = Object.values(allProductSales.reduce((a, {_id, productName, productImg}) => {\n            a[_id] = a[_id] || {_id, productName, productImg, count: 0};\n            a[_id].count++;\n            return a;\n        }, Object.create(null)));\n        \n        topProductSales2.sort((a,b) =>  b.count - a.count)\n        setTopProductSales(topProductSales2)\n    },[order, products])\n\n    const totalCount = [\n        {\n            id: 1,\n            title: \"Total orders\",\n            count: order.length,\n            percent: 12,\n            color: \"orange\",\n            icon: faFileInvoice\n        },\n        {\n            id: 2,\n            title: \"Total sales\",\n            count: `${totalSale}`,\n            percent: 20,\n            color: \"pink\",\n            icon: faTshirt\n        },\n        {\n            id: 3,\n            title: \"Income\",\n            count: `${totalIncome}Ä‘`,\n            percent: 30,\n            color: \"green\",\n            icon: faMoneyBillWave\n        },\n        {\n            id: 4,\n            title: \"Users\",\n            count: user.length,\n            percent: 5,\n            color: \"lightblue\",\n            icon: faUser\n        },\n    ]\n\n    const recentVote = [];\n    if (products.length > 0) {\n        for (let i = 0; i < products.length; i++) {\n            const productVote = products[i].productVote;\n            for (let j = 0; j < productVote.length; j++) {\n                const newRatingDate = new Date(productVote[j].ratingDate);\n                productVote[j].productName = products[i].productName;\n                if (newRatingDate.getDate() === new Date().getDate()) {\n                    let hours = newRatingDate.getHours().toString();\n                    let minutes = newRatingDate.getMinutes().toString();\n                    if (hours < 10) {\n                        hours = \"0\" + hours\n                    }\n                    if (minutes < 10) {\n                        minutes = \"0\" + minutes\n                    }\n                    productVote[j].ratingHours = hours;\n                    productVote[j].ratingMinutes = minutes;\n                } else {\n                    let days = newRatingDate.getDay().toString();\n                    let months = newRatingDate.getMonth().toString();\n                    if (days < 10) {\n                        days = \"0\" + days\n                    }\n                    if (months < 10) {\n                        months = \"0\" + months\n                    }\n                    productVote[j].ratingDays = days;\n                    productVote[j].ratingMonths = months;\n                    productVote[j].ratingYears = newRatingDate.getFullYear().toString();\n                }\n                recentVote.push(productVote[j])\n            }\n        }\n    }\n\n    if (recentVote) {\n        recentVote.sort(function(a,b){\n            return new Date(b.ratingDate) - new Date(a.ratingDate);\n        });\n    }\n\n    const topRecentVote = recentVote.splice(0,5)\n\n    return (\n        <div className=\"dashboard-main\">\n            <div className=\"row flex\">\n                { totalCount.map((item, index)=> {\n                    return (\n                        <DashboardTotalCount\n                            key = {index}\n                            icon = {item.icon}\n                            title = {item.title}\n                            count = {item.count}\n                            percent = {item.percent}\n                            color = {item.color}\n                        />\n                    )\n                })}\n            </div>\n            <DashboardLocation\n                order={order}\n            />\n            <div className=\"row flex\">\n                <DashboardTopFive\n                    icon = {faUser}\n                    title = \"Top customers by orders\"\n                    color = \"lightblue\"\n                    data = {topCustomer}\n                    table = {[\n                        {\n                            title: 'User name'\n                        },\n                        {\n                            title: 'Total orders'\n                        },\n                    ]}\n                />\n                <DashboardTopFive\n                    icon = {faTshirt}\n                    title = \"Top products by selling\"\n                    color = \"pink\"\n                    data = {topProductSales}\n                    table = {[\n                        {\n                            title: 'Product name'\n                        },\n                        {\n                            title: 'Total sales'\n                        },\n                    ]}\n                />\n            </div>\n            <div className=\"row flex\">\n                <DashboardRecentReview\n                    icon = {faStar}\n                    title = \"Recent Reviews\"\n                    color = \"orange\"\n                    topRecentVote = {topRecentVote}\n                />\n                <DashboardTodoList // recent orders\n                    icon = {faTasks}\n                    title = \"Todo list\"\n                    color = \"green\"\n                />\n            </div>\n            <div className=\"row flex\">\n                <DashboardChart/>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}