{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardTodoList.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faEdit, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nexport default function DashboardTodoList(props) {\n  const [todoList, setTodoList] = useState([]);\n  const [change, setChange] = useState(0);\n  useEffect(() => {\n    axios.get(`http://localhost:4000/todos`).then(res => {\n      setTodoList(res.data);\n    });\n  }, [change]);\n\n  const clickToCheck = event => {\n    const target = JSON.parse(event.target.id);\n    const id = target.id;\n    var isDone = \"\";\n\n    if (target.isDone === true) {\n      isDone = false;\n    } else {\n      isDone = true;\n    }\n\n    console.log(target.isDone);\n    axios.post('http://localhost:4000/todos', {\n      id: id,\n      isDone: isDone\n    });\n    setChange(change + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topfive flex-col\",\n    style: {\n      width: '40%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `headerbox flex-center ${props.color}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: props.icon,\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, props.title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topfive-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list\",\n    style: {\n      height: '390px',\n      overflowY: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"todo-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"upcoming\"), todoList && todoList.map((item, index) => {\n    console.log(todoList);\n\n    if (todoList.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"topfive-div flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"todo-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 45\n        }\n      }, \"zxc\"));\n    } else {\n      if (item.isDone === false) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: \"topfive-div flex\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 45\n          }\n        }, item.isDone === false && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"todo-check\",\n          id: JSON.stringify({\n            id: item._id,\n            isDone: item.isDone\n          }),\n          onClick: clickToCheck,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 53\n          }\n        }), item.isDone === true && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"todo-check-done\",\n          id: JSON.stringify({\n            id: item._id,\n            isDone: item.isDone\n          }),\n          onClick: clickToCheck,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faCheck,\n          style: {\n            pointerEvents: 'none',\n            color: '#23bfea'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 57\n          }\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"todo-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 49\n          }\n        }, item.todoContent), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"todo-action flex\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faEdit,\n          className: \"icon blue\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 57\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faTimes,\n          className: \"icon red\",\n          style: {\n            marginTop: '5px',\n            fontSize: '12px',\n            color: '#ffb3b7',\n            marginLeft: '7px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 57\n          }\n        }))));\n      }\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"todo-title\",\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, \"finished\"), todoList && todoList.map((item, index) => {\n    if (item.isDone === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"topfive-div flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 41\n        }\n      }, item.isDone === false && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"todo-check\",\n        id: JSON.stringify({\n          id: item._id,\n          isDone: item.isDone\n        }),\n        onClick: clickToCheck,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 49\n        }\n      }), item.isDone === true && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"todo-check-done\",\n        id: JSON.stringify({\n          id: item._id,\n          isDone: item.isDone\n        }),\n        onClick: clickToCheck,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faCheck,\n        style: {\n          pointerEvents: 'none',\n          color: '#23bfea'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"todo-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 45\n        }\n      }, item.todoContent), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"todo-action flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faEdit,\n        className: \"icon blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTimes,\n        className: \"icon red\",\n        style: {\n          marginTop: '5px',\n          fontSize: '12px',\n          color: '#ffb3b7',\n          marginLeft: '7px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 53\n        }\n      }))));\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardTodoList.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faCheck","faEdit","faTimes","axios","DashboardTodoList","props","todoList","setTodoList","change","setChange","get","then","res","data","clickToCheck","event","target","JSON","parse","id","isDone","console","log","post","width","color","icon","title","height","overflowY","map","item","index","length","stringify","_id","pointerEvents","todoContent","marginTop","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faEdit, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios'\n\nexport default function DashboardTodoList(props) {\n    const [todoList, setTodoList] = useState([])\n    const [change, setChange] = useState(0)\n\n    useEffect(()=>{\n        axios.get(`http://localhost:4000/todos`)\n            .then(res => {\n                setTodoList(res.data)\n            }\n        )\n    },[change])\n\n    const clickToCheck = (event)=>{\n        const target = JSON.parse(event.target.id)\n        const id = target.id\n        var isDone = \"\"\n        if (target.isDone === true) {\n            isDone = false\n        } else {\n            isDone = true\n        }\n        console.log(target.isDone)\n        axios.post('http://localhost:4000/todos', {\n            id: id,\n            isDone: isDone\n        })\n        setChange(change + 1)\n    }\n\n    return (\n        <div className=\"topfive flex-col\" style={{width: '40%'}}>\n            <div className={`headerbox flex-center ${props.color}`}>\n                <FontAwesomeIcon icon={props.icon} className=\"icon\"/>\n            </div>\n            <div className=\"top-location-container\">\n                <div className=\"headerbox-header\">\n                    <p>{props.title}</p>\n                </div>\n                <div className=\"topfive-content\">\n                    <div className=\"todo-list\" style={{height: '390px', overflowY: 'scroll'}}>\n                        <p className=\"todo-title\">upcoming</p>\n                        {todoList &&\n                            todoList.map((item, index)=>{\n                                console.log(todoList)\n                                if (todoList.length === 0) {\n                                    return (\n                                        <div\n                                            className=\"topfive-div flex\"\n                                        >\n                                            <p className=\"todo-text\">zxc</p>\n                                        </div>\n                                    )\n                                } else {\n                                    if (item.isDone === false) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className=\"topfive-div flex\"\n                                            >\n                                                {\n                                                    item.isDone === false && \n                                                    <div \n                                                        className=\"todo-check\"\n                                                        id={JSON.stringify({\n                                                            id: item._id,\n                                                            isDone: item.isDone\n                                                        })}\n                                                        onClick={clickToCheck}\n                                                        >\n                                                    </div>\n                                                }\n                                                {\n                                                    item.isDone === true && \n                                                    <div \n                                                        className=\"todo-check-done\"\n                                                        id={JSON.stringify({\n                                                            id: item._id,\n                                                            isDone: item.isDone\n                                                        })}\n                                                        onClick={clickToCheck}\n                                                        > \n                                                        <FontAwesomeIcon icon={faCheck} style={{pointerEvents: 'none', color: '#23bfea'}}/>\n                                                    </div>\n                                                }\n                                                <p className=\"todo-text\">{item.todoContent}</p>\n                                                <div className=\"todo-action flex\">\n                                                    <div>\n                                                        <FontAwesomeIcon icon={faEdit} className=\"icon blue\"/>\n                                                    </div>\n                                                    <div>\n                                                        <FontAwesomeIcon icon={faTimes} className=\"icon red\" style={{marginTop: '5px', fontSize: '12px', color: '#ffb3b7', marginLeft: '7px'}}/>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        )\n                                    }\n                                }\n                            })\n                        }\n                        <p className=\"todo-title\" style={{marginTop: '20px'}}>finished</p>{todoList &&\n                            todoList.map((item, index)=>{\n                                if (item.isDone === true) {\n                                    return(\n                                        <div\n                                            key={index}\n                                            className=\"topfive-div flex\"\n                                        >\n                                            {\n                                                item.isDone === false && \n                                                <div \n                                                    className=\"todo-check\"\n                                                    id={JSON.stringify({\n                                                        id: item._id,\n                                                        isDone: item.isDone\n                                                    })}\n                                                    onClick={clickToCheck}\n                                                    >\n                                                </div>\n                                            }\n                                            {\n                                                item.isDone === true && \n                                                <div \n                                                    className=\"todo-check-done\"\n                                                    id={JSON.stringify({\n                                                        id: item._id,\n                                                        isDone: item.isDone\n                                                    })}\n                                                    onClick={clickToCheck}\n                                                    > \n                                                    <FontAwesomeIcon icon={faCheck} style={{pointerEvents: 'none', color: '#23bfea'}}/>\n                                                </div>\n                                            }\n                                            <p className=\"todo-text\">{item.todoContent}</p>\n                                            <div className=\"todo-action flex\">\n                                                <div>\n                                                    <FontAwesomeIcon icon={faEdit} className=\"icon blue\"/>\n                                                </div>\n                                                <div>\n                                                    <FontAwesomeIcon icon={faTimes} className=\"icon red\" style={{marginTop: '5px', fontSize: '12px', color: '#ffb3b7', marginLeft: '7px'}}/>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                }\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}