{"ast":null,"code":"// import React, { Fragment } from \"react\";\n// import PropTypes from \"prop-types\";\n// import { withStyles } from \"@material-ui/core/styles\";\n// const trackHeight = 2;\n// const thumbHeight = 18;\n// const muiRailStyle = (theme) => ({\n//     rail: {\n//         backgroundColor: \"#ddd\",\n//         width: \"100%\",\n//         height: trackHeight,\n//         position: \"absolute\",\n//         pointerEvents: \"none\"\n//     },\n//     railHotspot: {\n//         // backgroundColor: \"green\", // for debugging\n//         width: \"100%\",\n//         height: thumbHeight * 2, // Invisible hotspot same size as thumb\n//         top: thumbHeight * -1,\n//         position: \"absolute\",\n//         cursor: \"pointer\"\n//     }\n// });\n// function MuiRailComponent({ classes, getRailProps }) {\n//     return (\n//         <Fragment>\n//         <div className={classes.railHotspot} {...getRailProps()} />\n//         <div className={classes.rail} />\n//         </Fragment>\n//     );\n// }\n// MuiRailComponent.propTypes = {\n//     classes: PropTypes.object.isRequired,\n//     getRailProps: PropTypes.func.isRequired\n// };\n// export const MuiRail = withStyles(muiRailStyle)(MuiRailComponent);\n// // *******************************************************\n// // HANDLE COMPONENT\n// // *******************************************************\n// const muiHandleStyle = (theme) => ({\n//     root: {\n//         backgroundColor: \"#112\",\n//         marginLeft: thumbHeight * -0.5,\n//         marginTop: thumbHeight * -0.5,\n//         width: thumbHeight,\n//         height: thumbHeight,\n//         border: 0,\n//         borderRadius: \"50%\", // circle\n//         // boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.2)\",\n//         whiteSpace: \"nowrap\", // for child display inline-block to work\n//         position: \"absolute\",\n//         zIndex: 2,\n//         cursor: \"pointer\"\n//     }\n// });\n// function MuiHandleComponent({\n//     domain: [min, max],\n//     handle: { id, value, percent },\n//     classes,\n//     getHandleProps\n//     }) {\n//     return (\n//         <div\n//         role=\"slider\"\n//         aria-valuemin={min}\n//         aria-valuemax={max}\n//         aria-valuenow={value}\n//         className={classes.root}\n//         style={{ left: `${percent}%` }}\n//         {...getHandleProps(id)}\n//         />\n//     );\n// }\n// MuiHandleComponent.propTypes = {\n//     domain: PropTypes.array.isRequired,\n//     handle: PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         value: PropTypes.number.isRequired,\n//         percent: PropTypes.number.isRequired\n//     }).isRequired,\n//     classes: PropTypes.object.isRequired,\n//     getHandleProps: PropTypes.func.isRequired\n// };\n// export const MuiHandle = withStyles(muiHandleStyle)(MuiHandleComponent);\n// // *******************************************************\n// // TRACK COMPONENT\n// // *******************************************************\n// const muiTrackStyle = (theme) => ({\n//     track: {\n//         backgroundColor: \"#112\",\n//         height: trackHeight,\n//         position: \"absolute\",\n//         zIndex: 1,\n//         pointerEvents: \"none\"\n//     },\n//     trackHotspot: {\n//         // backgroundColor: \"grey\", // for debugging\n//         height: thumbHeight, // Invisible hotspot same size as thumb\n//         top: thumbHeight * -0.5,\n//         position: \"absolute\",\n//         cursor: \"pointer\"\n//     }\n// });\n// function MuiTrackComponent({ classes, source, target, getTrackProps }) {\n//     const left = `${source.percent}%`;\n//     const width = `${target.percent - source.percent}%`;\n//     return (\n//         <Fragment>\n//         <div className={classes.track} style={{ left, width }} />\n//         <div\n//             className={classes.trackHotspot}\n//             style={{ left, width }}\n//             {...getTrackProps()}\n//         />\n//         </Fragment>\n//     );\n// }\n// MuiTrackComponent.propTypes = {\n//     source: PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         value: PropTypes.number.isRequired,\n//         percent: PropTypes.number.isRequired\n//     }).isRequired,\n//     target: PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         value: PropTypes.number.isRequired,\n//         percent: PropTypes.number.isRequired\n//     }).isRequired,\n//     classes: PropTypes.object.isRequired,\n//     getTrackProps: PropTypes.func.isRequired\n// };\n// export const MuiTrack = withStyles(muiTrackStyle)(MuiTrackComponent);","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/Shop/RangeSliderComponents.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Fragment } from \"react\";\n// import PropTypes from \"prop-types\";\n// import { withStyles } from \"@material-ui/core/styles\";\n\n// const trackHeight = 2;\n// const thumbHeight = 18;\n\n// const muiRailStyle = (theme) => ({\n//     rail: {\n//         backgroundColor: \"#ddd\",\n//         width: \"100%\",\n//         height: trackHeight,\n//         position: \"absolute\",\n//         pointerEvents: \"none\"\n//     },\n//     railHotspot: {\n//         // backgroundColor: \"green\", // for debugging\n//         width: \"100%\",\n//         height: thumbHeight * 2, // Invisible hotspot same size as thumb\n//         top: thumbHeight * -1,\n//         position: \"absolute\",\n//         cursor: \"pointer\"\n//     }\n// });\n\n// function MuiRailComponent({ classes, getRailProps }) {\n//     return (\n//         <Fragment>\n//         <div className={classes.railHotspot} {...getRailProps()} />\n//         <div className={classes.rail} />\n//         </Fragment>\n//     );\n// }\n\n// MuiRailComponent.propTypes = {\n//     classes: PropTypes.object.isRequired,\n//     getRailProps: PropTypes.func.isRequired\n// };\n\n// export const MuiRail = withStyles(muiRailStyle)(MuiRailComponent);\n\n// // *******************************************************\n// // HANDLE COMPONENT\n// // *******************************************************\n\n// const muiHandleStyle = (theme) => ({\n//     root: {\n//         backgroundColor: \"#112\",\n//         marginLeft: thumbHeight * -0.5,\n//         marginTop: thumbHeight * -0.5,\n//         width: thumbHeight,\n//         height: thumbHeight,\n//         border: 0,\n//         borderRadius: \"50%\", // circle\n//         // boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.2)\",\n//         whiteSpace: \"nowrap\", // for child display inline-block to work\n//         position: \"absolute\",\n//         zIndex: 2,\n//         cursor: \"pointer\"\n//     }\n// });\n\n// function MuiHandleComponent({\n//     domain: [min, max],\n//     handle: { id, value, percent },\n//     classes,\n//     getHandleProps\n//     }) {\n//     return (\n//         <div\n//         role=\"slider\"\n//         aria-valuemin={min}\n//         aria-valuemax={max}\n//         aria-valuenow={value}\n//         className={classes.root}\n//         style={{ left: `${percent}%` }}\n//         {...getHandleProps(id)}\n//         />\n//     );\n// }\n\n// MuiHandleComponent.propTypes = {\n//     domain: PropTypes.array.isRequired,\n//     handle: PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         value: PropTypes.number.isRequired,\n//         percent: PropTypes.number.isRequired\n//     }).isRequired,\n//     classes: PropTypes.object.isRequired,\n//     getHandleProps: PropTypes.func.isRequired\n// };\n\n// export const MuiHandle = withStyles(muiHandleStyle)(MuiHandleComponent);\n\n// // *******************************************************\n// // TRACK COMPONENT\n// // *******************************************************\n\n// const muiTrackStyle = (theme) => ({\n//     track: {\n//         backgroundColor: \"#112\",\n//         height: trackHeight,\n//         position: \"absolute\",\n//         zIndex: 1,\n//         pointerEvents: \"none\"\n//     },\n//     trackHotspot: {\n//         // backgroundColor: \"grey\", // for debugging\n//         height: thumbHeight, // Invisible hotspot same size as thumb\n//         top: thumbHeight * -0.5,\n//         position: \"absolute\",\n//         cursor: \"pointer\"\n//     }\n// });\n\n// function MuiTrackComponent({ classes, source, target, getTrackProps }) {\n//     const left = `${source.percent}%`;\n//     const width = `${target.percent - source.percent}%`;\n\n//     return (\n//         <Fragment>\n//         <div className={classes.track} style={{ left, width }} />\n//         <div\n//             className={classes.trackHotspot}\n//             style={{ left, width }}\n//             {...getTrackProps()}\n//         />\n//         </Fragment>\n//     );\n// }\n\n// MuiTrackComponent.propTypes = {\n//     source: PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         value: PropTypes.number.isRequired,\n//         percent: PropTypes.number.isRequired\n//     }).isRequired,\n//     target: PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         value: PropTypes.number.isRequired,\n//         percent: PropTypes.number.isRequired\n//     }).isRequired,\n//     classes: PropTypes.object.isRequired,\n//     getTrackProps: PropTypes.func.isRequired\n// };\n\n// export const MuiTrack = withStyles(muiTrackStyle)(MuiTrackComponent);\n"]},"metadata":{},"sourceType":"module"}