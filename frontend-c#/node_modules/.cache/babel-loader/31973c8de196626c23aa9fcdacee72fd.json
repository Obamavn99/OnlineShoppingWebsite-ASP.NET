{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/src/components/Product/ProductBody.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faCartPlus, faChevronLeft, faChevronRight, faHeart, faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from 'react-router-dom';\nimport ReactStars from \"react-rating-stars-component\";\nexport default function ProductBody(props) {\n  function slugify(str) {\n    str = str.replace(/^\\s+|\\s+$/g, ''); // trim\n\n    str = str.toLowerCase(); // remove accents, swap ñ for n, etc\n\n    var from = \"ãàáäâẽèéëêìíïîõòóöôùúüûñç·/_,:;\";\n    var to = \"aaaaaeeeeeiiiiooooouuuunc------\";\n\n    for (var i = 0, l = from.length; i < l; i++) {\n      str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n    }\n\n    str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n    .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n    .replace(/-+/g, '-'); // collapse dashes\n\n    return str; // Trim - from end of text\n  }\n\n  const product = props.product;\n  let slugSex = \"\";\n\n  if (product) {\n    slugSex = \"/\" + slugify(props.productSex);\n  } // const productImg = props.productImg;\n  // const [imgIndex, setImgIndex] = useState(0);\n  // const [countCart, setCountCart] = useState(1);\n  // const [hover, setHover] = useState(false);\n  // const [zoom, setZoom] = useState(`0% 0%`);\n  // const width = 500;\n  // const productSmall = useRef(null);\n  // const handleMouseMove = (e) => {\n  //     const { left, top, width, height } = e.target.getBoundingClientRect();\n  //     const x = ((e.pageX - left) / width) * 100;\n  //     const y = ((e.pageY - top) / height) * 100;\n  //     setZoom(`${x}% ${y}%`);\n  // };\n  // if (productImg) {\n  //     if (imgIndex >= productImg.length) { //infinity slider loop\n  //         // setProductImgBig(productImgBig.concat(props.productImg))\n  //         setImgIndex(0);\n  //     }\n  //     if (productImg.length > 4) {\n  //         if (imgIndex === 1 || imgIndex === 2) {\n  //             productSmall.current.style.transform= `translateY(0px)`\n  //         } else if (imgIndex === productImg.length - 1) {\n  //             productSmall.current.style.transform= `translateY(-${(imgIndex-5) * 110 + 50}px)`\n  //         } else if (imgIndex === productImg.length - 2) {\n  //             productSmall.current.style.transform= `translateY(-${(imgIndex-4) * 110 + 50}px)`\n  //         } else if (imgIndex === productImg.length - 3) {\n  //             productSmall.current.style.transform= `translateY(-${(imgIndex-3) * 110 + 50}px)`\n  //         } else if (imgIndex > 2) {\n  //             productSmall.current.style.transform= `translateY(-${(imgIndex-2) * 110}px)`\n  //         } else {\n  //             if (productSmall.current) {\n  //                 productSmall.current.style.transform= `translateY(0px)`\n  //             }\n  //         }\n  //     }\n  // }\n  // useEffect(() => {\n  //     if (hover === false) {\n  //         var interval = setInterval(() => {\n  //             setImgIndex(imgIndex => imgIndex + 1);\n  //         }, 5000);\n  //     }\n  //     return() => {\n  //         clearInterval(interval);\n  //     }\n  // },[hover])\n  //Counting star vote\n  // let ratingList = props.productVote.map(a => a.ratingStar); // get all rating\n  // const totalRating = ratingList.reduce((a, b) => a + b, 0)\n  // const averageRating = totalRating/ratingList.length;\n  // const ratingStar = {\n  //     size: 12,\n  //     value: averageRating,\n  //     edit: false,\n  //     activeColor: \"#fda32a\",\n  //     color: \"#ddd\",\n  //     isHalf: true\n  // };\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/src/components/Product/ProductBody.js"],"names":["React","useEffect","useRef","useState","FontAwesomeIcon","faAngleRight","faCartPlus","faChevronLeft","faChevronRight","faHeart","faMinus","faPlus","Link","ReactStars","ProductBody","props","slugify","str","replace","toLowerCase","from","to","i","l","length","RegExp","charAt","product","slugSex","productSex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAO,eAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAAUC,YAAV,EAAwBC,UAAxB,EAAoCC,aAApC,EAAmDC,cAAnD,EAAmEC,OAAnE,EAA4EC,OAA5E,EAAqFC,MAArF,QAAmG,mCAAnG;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAEvC,WAASC,OAAT,CAAiBC,GAAjB,EAAqB;AACjBA,IAAAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,YAAZ,EAA0B,EAA1B,CAAN,CADiB,CACoB;;AACrCD,IAAAA,GAAG,GAAGA,GAAG,CAACE,WAAJ,EAAN,CAFiB,CAIjB;;AACA,QAAIC,IAAI,GAAG,iCAAX;AACA,QAAIC,EAAE,GAAK,iCAAX;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAN,EAASC,CAAC,GAACH,IAAI,CAACI,MAArB,EAA8BF,CAAC,GAACC,CAAhC,EAAoCD,CAAC,EAArC,EAAyC;AACrCL,MAAAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,IAAIO,MAAJ,CAAWL,IAAI,CAACM,MAAL,CAAYJ,CAAZ,CAAX,EAA2B,GAA3B,CAAZ,EAA6CD,EAAE,CAACK,MAAH,CAAUJ,CAAV,CAA7C,CAAN;AACH;;AAEDL,IAAAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,cAAZ,EAA4B,EAA5B,EAAgC;AAAhC,KACDA,OADC,CACO,MADP,EACe,GADf,EACoB;AADpB,KAEDA,OAFC,CAEO,KAFP,EAEc,GAFd,CAAN,CAXiB,CAaS;;AAE1B,WAAOD,GAAP,CAfiB,CAeF;AAClB;;AAED,QAAMU,OAAO,GAAGZ,KAAK,CAACY,OAAtB;AAEA,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAID,OAAJ,EAAa;AACTC,IAAAA,OAAO,GAAG,MAAMZ,OAAO,CAACD,KAAK,CAACc,UAAP,CAAvB;AAEH,GA1BsC,CA4BvC;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AA0IH","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {  faAngleRight, faCartPlus, faChevronLeft, faChevronRight, faHeart, faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from 'react-router-dom';\n\nimport ReactStars from \"react-rating-stars-component\";\n\nexport default function ProductBody(props) {\n\n    function slugify(str){\n        str = str.replace(/^\\s+|\\s+$/g, ''); // trim\n        str = str.toLowerCase();\n\n        // remove accents, swap ñ for n, etc\n        var from = \"ãàáäâẽèéëêìíïîõòóöôùúüûñç·/_,:;\";\n        var to   = \"aaaaaeeeeeiiiiooooouuuunc------\";\n        for (var i=0, l=from.length ; i<l ; i++) {\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n        }\n\n        str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n            .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n            .replace(/-+/g, '-'); // collapse dashes\n\n        return str;    // Trim - from end of text\n    }\n\n    const product = props.product;\n\n    let slugSex = \"\";\n    if (product) {\n        slugSex = \"/\" + slugify(props.productSex);\n\n    }\n\n    // const productImg = props.productImg;\n    \n    // const [imgIndex, setImgIndex] = useState(0);\n    // const [countCart, setCountCart] = useState(1);\n    // const [hover, setHover] = useState(false);\n    // const [zoom, setZoom] = useState(`0% 0%`);\n    // const width = 500;\n\n    // const productSmall = useRef(null);\n\n    // const handleMouseMove = (e) => {\n    //     const { left, top, width, height } = e.target.getBoundingClientRect();\n    //     const x = ((e.pageX - left) / width) * 100;\n    //     const y = ((e.pageY - top) / height) * 100;\n    //     setZoom(`${x}% ${y}%`);\n    // };\n    \n    // if (productImg) {\n    //     if (imgIndex >= productImg.length) { //infinity slider loop\n    //         // setProductImgBig(productImgBig.concat(props.productImg))\n    //         setImgIndex(0);\n    //     }\n    //     if (productImg.length > 4) {\n    //         if (imgIndex === 1 || imgIndex === 2) {\n    //             productSmall.current.style.transform= `translateY(0px)`\n    //         } else if (imgIndex === productImg.length - 1) {\n    //             productSmall.current.style.transform= `translateY(-${(imgIndex-5) * 110 + 50}px)`\n    //         } else if (imgIndex === productImg.length - 2) {\n    //             productSmall.current.style.transform= `translateY(-${(imgIndex-4) * 110 + 50}px)`\n    //         } else if (imgIndex === productImg.length - 3) {\n    //             productSmall.current.style.transform= `translateY(-${(imgIndex-3) * 110 + 50}px)`\n    //         } else if (imgIndex > 2) {\n    //             productSmall.current.style.transform= `translateY(-${(imgIndex-2) * 110}px)`\n    //         } else {\n    //             if (productSmall.current) {\n    //                 productSmall.current.style.transform= `translateY(0px)`\n    //             }\n    //         }\n    //     }\n    // }\n\n    // useEffect(() => {\n    //     if (hover === false) {\n    //         var interval = setInterval(() => {\n    //             setImgIndex(imgIndex => imgIndex + 1);\n    //         }, 5000);\n    //     }\n    //     return() => {\n    //         clearInterval(interval);\n    //     }\n    // },[hover])\n\n    //Counting star vote\n    // let ratingList = props.productVote.map(a => a.ratingStar); // get all rating\n    // const totalRating = ratingList.reduce((a, b) => a + b, 0)\n    // const averageRating = totalRating/ratingList.length;\n\n    // const ratingStar = {\n    //     size: 12,\n    //     value: averageRating,\n    //     edit: false,\n    //     activeColor: \"#fda32a\",\n    //     color: \"#ddd\",\n    //     isHalf: true\n    // };\n\n    return(\n        <div className=\"ProductBody\">\n            {/* <div className=\"product-breadcrumb flex\">\n                <Link to=\"/\" className=\"breadcrumb-item breadcrumb-link\">Home</Link>\n                <FontAwesomeIcon icon={ faAngleRight } className=\"breadcrumb-arrow\"/>\n                <Link to={slugSex} className=\"breadcrumb-item breadcrumb-link\">{props.productSex}</Link>\n                <FontAwesomeIcon icon={ faAngleRight } className=\"breadcrumb-arrow\"/>\n                <div className=\"breadcrumb-item breadcrumb-product\">{props.productName}</div>\n            </div>\n\n            <div className=\"product-detail flex\">\n                <div className=\"product-gallery flex\"\n                    onMouseEnter={()=> {setHover(true)}}\n                    onMouseLeave={()=> {setHover(false)}}>\n                    <div \n                        className=\"product-small\" ref={productSmall}\n                        >\n                        {productImg.map((item, index) => {\n                            return (\n                                <div \n                                    key={index}\n                                    className={imgIndex === index ? \"product-small-item product-small-item-active\" : \"product-small-item\"}>\n                                    <img \n                                        src={item}\n                                        onClick={()=>{ setImgIndex(index)}}\n                                        alt=\"\"\n                                        ></img>\n                                </div>\n                            )\n                        })}\n                    </div>\n                    <div\n                        className=\"product-slider flex\"\n                        onMouseMove={handleMouseMove}\n                        >\n                        {productImg.map((item, index) => {\n                            return (\n                                <div\n                                    key={index}\n                                    className=\"product-big flex\" \n                                    style={{ \n                                        transform: `translateX(-${width * imgIndex}px`,\n                                        backgroundImage: `url(${item})`,\n                                        backgroundPosition: `${zoom}`\n                                    }}>\n                                    <div className=\"product-big-item\">\n                                        <img \n                                            id={index}\n                                            className=\"nodrag\"\n                                            style={{ width: `${width}px`}}\n                                            src={item}\n                                            alt=\"\"\n                                            ></img>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                        <div \n                            className=\"change-product left\"\n                            onClick={()=> {\n                                if (imgIndex > 0) setImgIndex(imgIndex - 1)\n                            }}\n                            >\n                            <FontAwesomeIcon icon={faChevronLeft}></FontAwesomeIcon>\n                        </div>\n                        <div className=\"change-product right\"\n                            onClick={()=> {\n                                if (imgIndex < productImg.length) setImgIndex(imgIndex + 1)\n                            }}\n                            >\n                            <FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"product-info-detail\">\n                    <div className=\"product-info-title\">\n                        {props.productName}\n                    </div>\n                    <div className=\"product-info-des\">\n                        {props.productDes}\n                    </div>\n                    <div \n                        className=\"product-info-vote\"\n                        onClick={props.scrollOnLick}\n                        >\n                        <ReactStars {...ratingStar} />\n                        <p>\n                            ({ratingList.length} customer reviews)\n                        </p>\n                    </div>\n                    <div className=\"product-info-price\">\n                        {props.productPrice}\n                    </div>\n                    <div className=\"product-info-cart flex\">\n                        <div className=\"count-cart noselect\">\n                            <div className=\"count-cart-item left flex-center\"\n                                onClick={() => { \n                                    if (countCart > 1) setCountCart(countCart-1) \n                                }}\n                                >\n                                <FontAwesomeIcon icon={faMinus}/>\n                            </div> \n                            <div className=\"count-cart-item text flex-center\">\n                                <form>\n                                    <input \n                                        type=\"text\" \n                                        value={countCart}\n                                        onChange={e => setCountCart(Number(e.target.value))}\n                                    />\n                                </form>\n                            </div>\n                            <div \n                                className=\"count-cart-item right flex-center\"\n                                onClick={() => { setCountCart(countCart+1) }}\n                                >\n                                <FontAwesomeIcon icon={faPlus}/>\n                            </div>\n                        </div>\n                        <div className=\"product-info-addtocart flex-center btn\">\n                            <FontAwesomeIcon icon={faCartPlus}/>\n                            <p>Add to cart</p>\n                        </div>\n                        <div \n                            className=\"product-info-wishlist flex-center\">\n                            <FontAwesomeIcon icon={faHeart}></FontAwesomeIcon>\n                        </div>\n                    </div>\n                    <div className=\"product-info-line\"></div>\n                    <div className=\"product-info-cate flex\">\n                        <p>Category:</p>\n                        <p>{props.productCate}</p>\n                    </div>\n                    <div className=\"product-info-line\"></div>\n                </div>\n            </div>\n            <div className=\"product-info-line\"></div> */}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}