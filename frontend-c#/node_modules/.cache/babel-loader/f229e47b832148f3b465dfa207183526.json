{"ast":null,"code":"// import React, { useEffect, useState } from 'react'\n// import '../../../../App.css'\n// import '../../../../Styles/Dashboard.css'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faGlobe } from '@fortawesome/free-solid-svg-icons'  \n// import { Pie } from '@reactchartjs/react-chart.js' \n// export default function DashboardChartPie(props) {\n//     const products = props.products \n//     const order = props.order \n//     const [data, setData] = useState({})\n//     useEffect(()=>{\n//         if (products.length > 0 && order.length > 0) {\n//             const allCate = Object.values(products.reduce((a, {productCate}) => {\n//                 a[productCate] = a[productCate] || {productCate, count: 0};\n//                 return a;\n//             }, Object.create(null)));\n//             for (let i in allCate) {\n//                 for (let j in products) {\n//                     if (allCate[i].productCate === products[j].productCate) { \n//                         allCate[i].count += (products[j].productSold * products[j].productPrice)\n//                     }\n//                 }\n//             }\n//             allCate.sort((a, b) => b.count - a.count)\n//             const topCate = allCate.splice(0, 5); \n//             console.log(topCate)\n//             const topCateList = []\n//             for (let i in topCate) {\n//                 topCateList.push(topCate[i].productCate)\n//             }\n//             setData({\n//                 labels: ['Read', 'Unread'],\n//                 datasets: [\n//                     {\n//                         label: '# of Votes',\n//                         data: [12, 88],\n//                         backgroundColor: [\n//                         'green',\n//                         'rgba(54, 162, 235, 0.9)', \n//                         ],\n//                         borderColor: [\n//                         'rgba(255, 99, 132, 1)',\n//                         'rgba(54, 162, 235, 1)', \n//                         ],\n//                         borderWidth: 1,\n//                     },\n//                 ],\n//             })\n//         }\n//     },[products, order])  \n//     return (\n//         <div className=\"chartpie flex-col\">\n//             <div className=\"headerbox flex-center\">\n//                 <FontAwesomeIcon icon={faGlobe} className=\"icon\"/>\n//             </div>\n//             <div className=\"top-location-container\">\n//                 <div className=\"headerbox-header\">\n//                     <p>Email Statistics</p>\n//                 </div>\n//                 <div className=\"top-location-content flex\">\n//                     <div className=\"top-location-map pie\" style={{margin: '0'}}> \n//                         <Pie data={data}/> \n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardChartPie.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { useEffect, useState } from 'react'\n// import '../../../../App.css'\n// import '../../../../Styles/Dashboard.css'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faGlobe } from '@fortawesome/free-solid-svg-icons'  \n// import { Pie } from '@reactchartjs/react-chart.js' \n\n// export default function DashboardChartPie(props) {\n\n//     const products = props.products \n//     const order = props.order \n//     const [data, setData] = useState({})\n\n//     useEffect(()=>{\n//         if (products.length > 0 && order.length > 0) {\n//             const allCate = Object.values(products.reduce((a, {productCate}) => {\n//                 a[productCate] = a[productCate] || {productCate, count: 0};\n//                 return a;\n//             }, Object.create(null)));\n    \n//             for (let i in allCate) {\n//                 for (let j in products) {\n//                     if (allCate[i].productCate === products[j].productCate) { \n//                         allCate[i].count += (products[j].productSold * products[j].productPrice)\n//                     }\n//                 }\n//             }\n//             allCate.sort((a, b) => b.count - a.count)\n//             const topCate = allCate.splice(0, 5); \n//             console.log(topCate)\n//             const topCateList = []\n//             for (let i in topCate) {\n//                 topCateList.push(topCate[i].productCate)\n//             }\n//             setData({\n//                 labels: ['Read', 'Unread'],\n//                 datasets: [\n//                     {\n//                         label: '# of Votes',\n//                         data: [12, 88],\n//                         backgroundColor: [\n//                         'green',\n//                         'rgba(54, 162, 235, 0.9)', \n//                         ],\n//                         borderColor: [\n//                         'rgba(255, 99, 132, 1)',\n//                         'rgba(54, 162, 235, 1)', \n//                         ],\n//                         borderWidth: 1,\n//                     },\n//                 ],\n//             })\n//         }\n//     },[products, order])  \n\n//     return (\n//         <div className=\"chartpie flex-col\">\n//             <div className=\"headerbox flex-center\">\n//                 <FontAwesomeIcon icon={faGlobe} className=\"icon\"/>\n//             </div>\n//             <div className=\"top-location-container\">\n//                 <div className=\"headerbox-header\">\n//                     <p>Email Statistics</p>\n//                 </div>\n//                 <div className=\"top-location-content flex\">\n//                     <div className=\"top-location-map pie\" style={{margin: '0'}}> \n//                         <Pie data={data}/> \n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }"]},"metadata":{},"sourceType":"module"}