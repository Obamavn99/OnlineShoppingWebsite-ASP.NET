{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/DashboardInbox.js\";\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:4000\";\nexport default function DashboardInbox(props) {\n  const [allChatData, setAllChatData] = useState([]);\n  const [sessionId, setSessionId] = useState(0);\n  const socket = socketIOClient(ENDPOINT);\n  useEffect(() => {\n    socket.on('connect', function (data) {\n      socket.emit('admin-join');\n    });\n    socket.on('send-all-chat', data => {\n      setAllChatData(data);\n    }); // socket.on('messageSend-thread', (data) => {\n    //     alert(data)\n    // })\n\n    socket.on(\"client-msg\", function (data) {\n      console.log(data);\n    });\n  }, []); // console.log(allChatData)\n\n  return allChatData.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"flex\",\n      onClick: () => {\n        setSessionId(item.sessionId);\n        console.log(item.sessionId);\n        socket.on('connect', function (data) {\n          socket.emit('sendRoomId', sessionId);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, item.chatName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, item.chatEmail));\n  });\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/DashboardInbox.js"],"names":["React","useEffect","useState","socketIOClient","ENDPOINT","DashboardInbox","props","allChatData","setAllChatData","sessionId","setSessionId","socket","on","data","emit","console","log","map","item","index","chatName","chatEmail"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC1C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,CAAD,CAA1C;AAEA,QAAMS,MAAM,GAAGR,cAAc,CAACC,QAAD,CAA7B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,UAAUC,IAAV,EAAgB;AACjCF,MAAAA,MAAM,CAACG,IAAP,CAAY,YAAZ;AACH,KAFD;AAGAH,IAAAA,MAAM,CAACC,EAAP,CAAU,eAAV,EAA4BC,IAAD,IAAQ;AAC/BL,MAAAA,cAAc,CAACK,IAAD,CAAd;AACH,KAFD,EAJY,CAOZ;AACA;AACA;;AACAF,IAAAA,MAAM,CAACC,EAAP,CAAU,YAAV,EAAwB,UAASC,IAAT,EAAe;AACnCE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,KAFD;AAGH,GAbQ,EAaP,EAbO,CAAT,CAN0C,CAqB1C;;AAEA,SACIN,WAAW,CAACU,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAgB;AAC5B,wBACI;AACI,MAAA,GAAG,EAAEA,KADT;AACgB,MAAA,SAAS,EAAC,MAD1B;AAEI,MAAA,OAAO,EAAE,MAAI;AACTT,QAAAA,YAAY,CAACQ,IAAI,CAACT,SAAN,CAAZ;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACT,SAAjB;AACAE,QAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,UAAUC,IAAV,EAAgB;AACjCF,UAAAA,MAAM,CAACG,IAAP,CAAY,YAAZ,EAA0BL,SAA1B;AACH,SAFD;AAGH,OARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIS,IAAI,CAACE,QAAT,CAVJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACG,SAAT,CAXJ,CADJ;AAuBH,GAxBD,CADJ;AA2BH","sourcesContent":["\nimport React from 'react'\nimport { useEffect, useState } from 'react'\nimport socketIOClient from \"socket.io-client\";\n\nconst ENDPOINT = \"http://localhost:4000\";\n\nexport default function DashboardInbox(props) {\n    const [allChatData, setAllChatData] = useState([])\n    const [sessionId, setSessionId] = useState(0);\n\n    const socket = socketIOClient(ENDPOINT);\n\n    useEffect(() => {\n        socket.on('connect', function (data) {\n            socket.emit('admin-join')\n        })\n        socket.on('send-all-chat', (data)=>{\n            setAllChatData(data)\n        })\n        // socket.on('messageSend-thread', (data) => {\n        //     alert(data)\n        // })\n        socket.on(\"client-msg\", function(data) {\n            console.log(data)\n        })\n    },[])\n\n    // console.log(allChatData)\n\n    return (\n        allChatData.map((item, index)=> {\n            return (\n                <div \n                    key={index} className=\"flex\"\n                    onClick={()=>{\n                        setSessionId(item.sessionId)\n                        console.log(item.sessionId)\n                        socket.on('connect', function (data) {\n                            socket.emit('sendRoomId', sessionId);\n                        })\n                    }}\n                >\n                    <p>{item.chatName}</p>\n                    <p>{item.chatEmail}</p>\n                    {/* {item.chatContent.map((item,index)=>{\n                        return (\n                            <div key={index}>\n                                <p>{item.text}</p>\n                                <p>{item.date}</p>\n                            </div>\n                        )\n                    })} */}\n                </div>\n            )\n        })\n    )\n}"]},"metadata":{},"sourceType":"module"}