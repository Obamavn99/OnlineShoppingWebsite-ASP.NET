{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/src/components/OpenChatBtn.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../Styles/Chat.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:4000\";\nexport default function OpenChatBtn() {\n  const [openChat, setOpenChat] = useState(false);\n  const [onHover, setOnHover] = useState(false);\n  const [chatData, setChatData] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const socket = socketIOClient(ENDPOINT);\n  useEffect(() => {\n    socket.on('connect', function (data) {\n      socket.emit('join', 'Hello server from client');\n    });\n    socket.on('thread', data => {// console.log(data)\n      // setChatData(chatData => [...chatData, data])\n    });\n    console.log(chatData);\n  }, [socket]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    socket.emit('mess', inputValue);\n  };\n\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-btn\",\n    onMouseEnter: () => {\n      setOnHover(true);\n    },\n    onMouseLeave: () => {\n      if (openChat) {\n        setOnHover(true);\n      } else setOnHover(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: onHover ? \"chat-btn-container chat-btn-hover\" : \"chat-btn-container\",\n    onClick: () => {\n      if (openChat) {\n        setOpenChat(false);\n        setOnHover(false);\n      } else {\n        setOpenChat(true);\n        setOnHover(true);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Live Chat\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: openChat ? \"chat-box hide_chat_box\" : \"chat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Chat\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, chatData.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }, item);\n  }))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/src/components/OpenChatBtn.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faComment","socketIOClient","ENDPOINT","OpenChatBtn","openChat","setOpenChat","onHover","setOnHover","chatData","setChatData","inputValue","setInputValue","socket","on","data","emit","console","log","handleSubmit","event","preventDefault","handleChange","target","value","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../Styles/Chat.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:4000\";\n\nexport default function OpenChatBtn() {\n\n    const [openChat, setOpenChat] = useState(false);\n    const [onHover, setOnHover] = useState(false); const [chatData, setChatData] = useState([]);\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const socket = socketIOClient(ENDPOINT);\n    useEffect(() => {\n        socket.on('connect', function (data) {\n            socket.emit('join', 'Hello server from client');\n        });\n        socket.on('thread', (data)=> {\n            // console.log(data)\n            // setChatData(chatData => [...chatData, data])\n        })\n        console.log(chatData)\n    }, [socket])\n    \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        socket.emit('mess', inputValue);\n    }\n    const handleChange = (event) => {\n        setInputValue(event.target.value)\n    }\n\n    return (\n        <div \n            className=\"chat-btn\"\n            onMouseEnter={()=> { setOnHover(true) }}\n            onMouseLeave={()=> { if (openChat) { setOnHover(true) } else setOnHover(false) }}\n        >\n            <div \n                className={onHover ? \"chat-btn-container chat-btn-hover\" : \"chat-btn-container\"}\n                onClick={()=>{ if (openChat) { setOpenChat(false); setOnHover(false) } else { setOpenChat(true); setOnHover(true) }}}\n                >\n                <FontAwesomeIcon icon={faComment}/>\n                <p>Live Chat</p>\n            </div>\n            <div className={openChat ? \"chat-box hide_chat_box\" : \"chat-box\"}>\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\" onChange={handleChange}></input>\n                    <button>Chat</button>\n                </form>\n                <ul>\n                    {\n                        chatData.map((item, index)=>{\n                            return(\n                                <div key={index}>\n                                    {item}\n                                </div>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}