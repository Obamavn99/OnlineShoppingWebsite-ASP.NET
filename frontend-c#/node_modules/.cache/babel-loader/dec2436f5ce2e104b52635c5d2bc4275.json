{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/News/DashboardNewsTable.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ReactStars from \"react-rating-stars-component\";\nimport { faLongArrowAltDown, faPencilAlt, faSort, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport classNames from 'classnames';\nexport default function DashboardNewsTable(props) {\n  const [news, setNews] = useState([]); // const [searchInput, setSearchInput] = useState(\"\")\n  // const [constProducts, setConstProducts] = useState([])\n  // const [isSortByName, setIsSortByName] = useState(false)\n  // const [isSortByPrice, setIsSortByPrice] = useState(false)\n  // const [isSortBySale, setIsSortBySale] = useState(false)\n  // const [isSortBySold, setIsSortBySold] = useState(false)\n\n  useEffect(() => {\n    axios.get(`http://localhost:4000/news`).then(res => {\n      setNews(res.data);\n    });\n  }, [props.isChange]); // const [currentPage, setCurrentPage] = useState(1);\n  // const itemsPerPage = 10;\n  // const choosePage = (event) => {\n  //     if (Number(event.target.id) === 0) {\n  //         setCurrentPage(currentPage)\n  //     } else if (Number(event.target.id) === -1) {\n  //         if (currentPage > 1) {\n  //             setCurrentPage(currentPage - 1)\n  //         } else {\n  //             setCurrentPage(1);\n  //         }\n  //     } else if (Number(event.target.id) === 999) {\n  //         setCurrentPage(currentPage + 1)\n  //     } else {\n  //         setCurrentPage(Number(event.target.id))\n  //     }\n  // }\n  // const indexOfLast = currentPage * itemsPerPage;\n  // const indexOfFirst = indexOfLast - itemsPerPage;\n  // const current = products.slice(indexOfFirst, indexOfLast);\n  // const pageNumbers = [];\n  // for (let i = 1; i <= Math.ceil(products.length / itemsPerPage); i++) {\n  //     pageNumbers.push(i);\n  // }\n  // const pages = [];\n  // if (currentPage === 2) {\n  //     pages.push(currentPage - 1, currentPage, currentPage + 1);\n  // } else {\n  //     if (currentPage === 1) {\n  //         pages.push(currentPage, currentPage + 1, currentPage + 2 );\n  //     } else if (currentPage === 2) {\n  //         pages.push(currentPage - 1, currentPage, currentPage + 1);\n  //     } else if (currentPage > 2 && currentPage < pageNumbers.length - 1) {\n  //         pages.push(currentPage -1, currentPage, currentPage + 1);\n  //     } else if (currentPage === pageNumbers.length - 1) {\n  //         pages.push(currentPage - 1, currentPage, currentPage + 1);\n  //     } else {\n  //         pages.push(currentPage - 2, currentPage - 1, currentPage);\n  //     }\n  // }\n  // const deleteOnClick = (event) => {\n  //     axios.post(`http://localhost:4000/products/delete/:${event.target.id}`, {\n  //         productId: event.target.id\n  //     })\n  //     setProducts(products.filter((item)=>{\n  //         return item._id !== event.target.id\n  //     }))\n  // }\n  // const searchOnSubmit = (event) =>{\n  //     event.preventDefault()\n  // }\n  // const searchOnChange = (event) => {\n  //     // setSearchInput(event.target.value)\n  //     const searchInput = event.target.value\n  //     const search = []\n  //     for (let i in constProducts) {\n  //         if ((constProducts[i].productName).toLowerCase().includes(searchInput)) {\n  //             search.push(constProducts[i])\n  //         }\n  //     }\n  //     setProducts(search)\n  // }\n  // const sortTable = (event) => {\n  //     if (event.target.id === \"Name\") {\n  //         if (isSortByName) {\n  //             const sortByName = [...products]\n  //             sortByName.sort(function(a, b) {\n  //                 var nameA = a.productName.toLowerCase();\n  //                 var nameB = b.productName.toLowerCase(); \n  //                 if(nameA === nameB) return 0; \n  //                 return nameA > nameB ? 1 : -1;\n  //             })\n  //             setIsSortByName(false)\n  //             setProducts(sortByName)\n  //         } else {\n  //             const sortByName = [...products]\n  //             sortByName.sort(function(a, b) {\n  //                 var nameA = a.productName.toLowerCase();\n  //                 var nameB = b.productName.toLowerCase(); \n  //                 if(nameA === nameB) return 0; \n  //                 return nameA < nameB ? 1 : -1;\n  //             })\n  //             setIsSortByName(true)\n  //             setProducts(sortByName)\n  //         }\n  //     }\n  //     if (event.target.id === \"Price\") {\n  //         if (isSortByPrice) {\n  //             const sortByName = [...products]\n  //             sortByName.sort(function(a, b) {\n  //                 var nameA = a.productName;\n  //                 var nameB = b.productName; \n  //                 if(nameA === nameB) return 0; \n  //                 return nameA > nameB ? 1 : -1;\n  //             })\n  //             setIsSortByPrice(false)\n  //             setProducts(sortByName)\n  //         } else {\n  //             const sortByName = [...products]\n  //             sortByName.sort(function(a, b) {\n  //                 var nameA = a.productName;\n  //                 var nameB = b.productName; \n  //                 if(nameA === nameB) return 0; \n  //                 return nameA < nameB ? 1 : -1;\n  //             })\n  //             setIsSortByPrice(true)\n  //             setProducts(sortByName)\n  //         }\n  //     }\n  //     if (event.target.id === \"Sale\") {\n  //         if (isSortBySale) {\n  //             const sortByName = [...products]\n  //             sortByName.sort(function(a, b) {\n  //                 var nameA = a.productName;\n  //                 var nameB = b.productName; \n  //                 if(nameA === nameB) return 0; \n  //                 return nameA > nameB ? 1 : -1;\n  //             })\n  //             setIsSortBySale(false)\n  //             setProducts(sortByName)\n  //         } else {\n  //             const sortByName = [...products]\n  //             sortByName.sort(function(a, b) {\n  //                 var nameA = a.productName;\n  //                 var nameB = b.productName; \n  //                 if(nameA === nameB) return 0; \n  //                 return nameA < nameB ? 1 : -1;\n  //             })\n  //             setIsSortBySale(true)\n  //             setProducts(sortByName)\n  //         }\n  //     }\n  //     if (event.target.id === \"Sold\") {\n  //         if (isSortBySold) {\n  //             const sortByName = [...products]\n  //             sortByName.sort(function(a, b) {\n  //                 var nameA = a.productName;\n  //                 var nameB = b.productName; \n  //                 if(nameA === nameB) return 0; \n  //                 return nameA > nameB ? 1 : -1;\n  //             })\n  //             setIsSortBySold(false)\n  //             setProducts(sortByName)\n  //         } else {\n  //             const sortByName = [...products]\n  //             sortByName.sort(function(a, b) {\n  //                 var nameA = a.productName;\n  //                 var nameB = b.productName; \n  //                 if(nameA === nameB) return 0; \n  //                 return nameA < nameB ? 1 : -1;\n  //             })\n  //             setIsSortBySold(true)\n  //             setProducts(sortByName)\n  //         }\n  //     }\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topfive flex-col\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `headerbox flex-center ${props.color}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: props.icon,\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, props.title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topfive-content flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-addnew flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-addnew-btn btn\",\n    onClick: props.setOpenCreateFunc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }, \"Add new\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-addnew-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search records\" // onChange={searchOnChange}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"dashboard-table\",\n    style: {\n      tableLayout: 'fixed'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }, props.table.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: index,\n      className: \"table-title\" // onClick={(event)=>{\n      //     sortTable(event)\n      // }}\n      ,\n      id: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 45\n      }\n    }, item);\n  })), news.map((item, index) => {\n    const date = new Date(item.productDate);\n    const day = date.getDay();\n    const month = date.getMonth();\n    const year = date.getFullYear();\n    const shortedDate = day + '/' + month + '/' + year;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"table-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 49\n      }\n    }, item.newsTitle)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 49\n      }\n    }, item.newsContent)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 49\n      }\n    }, item.productSold)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 49\n      }\n    }, shortedDate)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action-table flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action-item flex-center action-green\",\n      onClick: props.setOpenEditFunc,\n      id: item._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        pointerEvents: 'none'\n      },\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action-item flex-center action-red\" // onClick={deleteOnClick}\n      ,\n      id: item._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        pointerEvents: 'none'\n      },\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 57\n      }\n    })))));\n  }))))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/News/DashboardNewsTable.js"],"names":["React","useEffect","useState","FontAwesomeIcon","ReactStars","faLongArrowAltDown","faPencilAlt","faSort","faTimes","axios","classNames","DashboardNewsTable","props","news","setNews","get","then","res","data","isChange","width","color","icon","title","setOpenCreateFunc","tableLayout","table","map","item","index","date","Date","productDate","day","getDay","month","getMonth","year","getFullYear","shortedDate","newsTitle","newsContent","productSold","setOpenEditFunc","_id","pointerEvents"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ReactStars from \"react-rating-stars-component\";\nimport { faLongArrowAltDown, faPencilAlt, faSort, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport classNames from 'classnames'\n\nexport default function DashboardNewsTable(props) {\n\n    const [news, setNews] = useState([])\n    // const [searchInput, setSearchInput] = useState(\"\")\n    // const [constProducts, setConstProducts] = useState([])\n    // const [isSortByName, setIsSortByName] = useState(false)\n    // const [isSortByPrice, setIsSortByPrice] = useState(false)\n    // const [isSortBySale, setIsSortBySale] = useState(false)\n    // const [isSortBySold, setIsSortBySold] = useState(false)\n    \n    useEffect(()=>{\n        axios.get(`http://localhost:4000/news`)\n            .then(res => {\n                setNews(res.data)\n            }\n        )\n    },[props.isChange]) \n\n    // const [currentPage, setCurrentPage] = useState(1);\n    // const itemsPerPage = 10;\n\n    // const choosePage = (event) => {\n    //     if (Number(event.target.id) === 0) {\n    //         setCurrentPage(currentPage)\n    //     } else if (Number(event.target.id) === -1) {\n    //         if (currentPage > 1) {\n    //             setCurrentPage(currentPage - 1)\n    //         } else {\n    //             setCurrentPage(1);\n    //         }\n    //     } else if (Number(event.target.id) === 999) {\n    //         setCurrentPage(currentPage + 1)\n    //     } else {\n    //         setCurrentPage(Number(event.target.id))\n    //     }\n    // }\n\n    // const indexOfLast = currentPage * itemsPerPage;\n    // const indexOfFirst = indexOfLast - itemsPerPage;\n    // const current = products.slice(indexOfFirst, indexOfLast);\n    // const pageNumbers = [];\n    // for (let i = 1; i <= Math.ceil(products.length / itemsPerPage); i++) {\n    //     pageNumbers.push(i);\n    // }\n\n    // const pages = [];\n\n    // if (currentPage === 2) {\n    //     pages.push(currentPage - 1, currentPage, currentPage + 1);\n    // } else {\n    //     if (currentPage === 1) {\n    //         pages.push(currentPage, currentPage + 1, currentPage + 2 );\n    //     } else if (currentPage === 2) {\n    //         pages.push(currentPage - 1, currentPage, currentPage + 1);\n    //     } else if (currentPage > 2 && currentPage < pageNumbers.length - 1) {\n    //         pages.push(currentPage -1, currentPage, currentPage + 1);\n    //     } else if (currentPage === pageNumbers.length - 1) {\n    //         pages.push(currentPage - 1, currentPage, currentPage + 1);\n    //     } else {\n    //         pages.push(currentPage - 2, currentPage - 1, currentPage);\n    //     }\n    // }\n\n    // const deleteOnClick = (event) => {\n    //     axios.post(`http://localhost:4000/products/delete/:${event.target.id}`, {\n    //         productId: event.target.id\n    //     })\n    //     setProducts(products.filter((item)=>{\n    //         return item._id !== event.target.id\n    //     }))\n    // }\n\n    // const searchOnSubmit = (event) =>{\n    //     event.preventDefault()\n    // }\n    // const searchOnChange = (event) => {\n    //     // setSearchInput(event.target.value)\n    //     const searchInput = event.target.value\n    //     const search = []\n    //     for (let i in constProducts) {\n    //         if ((constProducts[i].productName).toLowerCase().includes(searchInput)) {\n    //             search.push(constProducts[i])\n    //         }\n    //     }\n    //     setProducts(search)\n    // }\n\n    // const sortTable = (event) => {\n    //     if (event.target.id === \"Name\") {\n    //         if (isSortByName) {\n    //             const sortByName = [...products]\n    //             sortByName.sort(function(a, b) {\n    //                 var nameA = a.productName.toLowerCase();\n    //                 var nameB = b.productName.toLowerCase(); \n    //                 if(nameA === nameB) return 0; \n    //                 return nameA > nameB ? 1 : -1;\n    //             })\n    //             setIsSortByName(false)\n    //             setProducts(sortByName)\n    //         } else {\n    //             const sortByName = [...products]\n    //             sortByName.sort(function(a, b) {\n    //                 var nameA = a.productName.toLowerCase();\n    //                 var nameB = b.productName.toLowerCase(); \n    //                 if(nameA === nameB) return 0; \n    //                 return nameA < nameB ? 1 : -1;\n    //             })\n    //             setIsSortByName(true)\n    //             setProducts(sortByName)\n    //         }\n    //     }\n    //     if (event.target.id === \"Price\") {\n    //         if (isSortByPrice) {\n    //             const sortByName = [...products]\n    //             sortByName.sort(function(a, b) {\n    //                 var nameA = a.productName;\n    //                 var nameB = b.productName; \n    //                 if(nameA === nameB) return 0; \n    //                 return nameA > nameB ? 1 : -1;\n    //             })\n    //             setIsSortByPrice(false)\n    //             setProducts(sortByName)\n    //         } else {\n    //             const sortByName = [...products]\n    //             sortByName.sort(function(a, b) {\n    //                 var nameA = a.productName;\n    //                 var nameB = b.productName; \n    //                 if(nameA === nameB) return 0; \n    //                 return nameA < nameB ? 1 : -1;\n    //             })\n    //             setIsSortByPrice(true)\n    //             setProducts(sortByName)\n    //         }\n    //     }\n    //     if (event.target.id === \"Sale\") {\n    //         if (isSortBySale) {\n    //             const sortByName = [...products]\n    //             sortByName.sort(function(a, b) {\n    //                 var nameA = a.productName;\n    //                 var nameB = b.productName; \n    //                 if(nameA === nameB) return 0; \n    //                 return nameA > nameB ? 1 : -1;\n    //             })\n    //             setIsSortBySale(false)\n    //             setProducts(sortByName)\n    //         } else {\n    //             const sortByName = [...products]\n    //             sortByName.sort(function(a, b) {\n    //                 var nameA = a.productName;\n    //                 var nameB = b.productName; \n    //                 if(nameA === nameB) return 0; \n    //                 return nameA < nameB ? 1 : -1;\n    //             })\n    //             setIsSortBySale(true)\n    //             setProducts(sortByName)\n    //         }\n    //     }\n    //     if (event.target.id === \"Sold\") {\n    //         if (isSortBySold) {\n    //             const sortByName = [...products]\n    //             sortByName.sort(function(a, b) {\n    //                 var nameA = a.productName;\n    //                 var nameB = b.productName; \n    //                 if(nameA === nameB) return 0; \n    //                 return nameA > nameB ? 1 : -1;\n    //             })\n    //             setIsSortBySold(false)\n    //             setProducts(sortByName)\n    //         } else {\n    //             const sortByName = [...products]\n    //             sortByName.sort(function(a, b) {\n    //                 var nameA = a.productName;\n    //                 var nameB = b.productName; \n    //                 if(nameA === nameB) return 0; \n    //                 return nameA < nameB ? 1 : -1;\n    //             })\n    //             setIsSortBySold(true)\n    //             setProducts(sortByName)\n    //         }\n    //     }\n    // }\n\n    return (\n        <div className=\"topfive flex-col\" style={{width: '100%'}}>\n            <div className={`headerbox flex-center ${props.color}`}>\n                <FontAwesomeIcon icon={props.icon} className=\"icon\"/>\n            </div>\n            <div className=\"top-location-container\">\n                <div className=\"headerbox-header\">\n                    <p>{props.title}</p>\n                </div>\n                <div className=\"topfive-content flex-col\">\n                    <div className=\"dashboard-addnew flex\">\n                        <div \n                            className=\"dashboard-addnew-btn btn\"\n                            onClick={props.setOpenCreateFunc}\n                        >Add new</div>\n                        <div className=\"dashboard-addnew-search\">\n                            <form \n                                // onSubmit={searchOnSubmit}\n                            >\n                                <input type=\"text\" placeholder=\"Search records\"\n                                    // onChange={searchOnChange}\n                                ></input>\n                            </form>\n                        </div>\n                    </div>\n                    <table className=\"dashboard-table\" style={{tableLayout: 'fixed'}}>\n                        <tbody>\n                            <tr>\n                                {\n                                    props.table.map((item, index) => {\n                                        return (\n                                            <th \n                                                key={index} className=\"table-title\"\n                                                // onClick={(event)=>{\n                                                //     sortTable(event)\n                                                // }}\n                                                id={item}\n                                            >\n                                                {item}\n                                            </th>\n                                        )\n                                    })\n                                }\n                            </tr>\n                            {\n                                news.map((item, index) => {\n                                    const date = new Date(item.productDate)\n                                    const day = date.getDay();\n                                    const month = date.getMonth();\n                                    const year = date.getFullYear();\n                                    const shortedDate = day + '/' + month + '/' + year;\n\n                                    return (\n                                        <tr key={index}>\n                                            <td className=\"table-name\">\n                                                <p>{item.newsTitle}</p>\n                                            </td>\n                                            <td>\n                                                <p>{item.newsContent}</p>\n                                            </td>\n                                            <td>\n                                                <p>{item.productSold}</p>\n                                            </td>\n                                            {/* <td>\n                                                <p style={{textTransform: 'uppercase'}}>{item.productCate}</p>\n                                            </td> */}\n                                            {/* <td>\n                                                <select>\n                                                {\n                                                    item.productSize.map((item, index)=> {\n                                                        return (\n                                                                <option>{item}</option>\n                                                        )\n                                                    })\n                                                }\n                                                </select>\n                                            </td> */}\n                                            <td>\n                                                <p>{shortedDate}</p>\n                                            </td>\n                                            <td>\n                                                <div className=\"action-table flex\">\n                                                    <div \n                                                        className=\"action-item flex-center action-green\"\n                                                        onClick={props.setOpenEditFunc}\n                                                        id={item._id}\n                                                        >\n                                                        <FontAwesomeIcon style={{pointerEvents: 'none'}} icon={faPencilAlt}/>\n                                                    </div>\n                                                    <div \n                                                        className=\"action-item flex-center action-red\"\n                                                        // onClick={deleteOnClick}\n                                                        id={item._id}\n                                                        >\n                                                        <FontAwesomeIcon style={{pointerEvents: 'none'}} icon={faTimes}/>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </table>\n                    \n                    {/* <div className=\"pagination-container flex\" style={{ justifyContent: 'flex-end', margin: '20px 0'}}>\n                        <div className=\"pagnigation flex-center\" onClick={choosePage}>\n                            <div id=\"-1\" className={classNames({\n                                pagnigation_disable: currentPage === 1\n                            })}>←</div>\n                            { pages.map(function(number, index) { \n                                if (currentPage === number) {\n                                    return (\n                                        <div key={number} id={number} className=\"pagnigation-active\">\n                                            {number}\n                                        </div>\n                                    )\n                                } else {\n                                    return (\n                                    <div \n                                        key={number}\n                                        id={number}\n                                        >\n                                            {number}\n                                    </div>\n                                    )\n                                }\n                            })}\n                            <div id=\"999\" className={classNames({\n                                pagnigation_disable: currentPage === pageNumbers.length\n                            })}>→</div>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}