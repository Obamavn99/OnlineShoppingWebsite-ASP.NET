{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/OpenChatBtn.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../Styles/Chat.css';\nimport '../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\nimport socketIOClient from \"socket.io-client\";\nimport { withRouter } from 'react-router-dom';\nconst ENDPOINT = \"http://localhost:4000\";\n\nfunction OpenChatBtn(props) {\n  const [openChat, setOpenChat] = useState(false);\n  const [onHover, setOnHover] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [chatData, setChatData] = useState([]);\n  const [openChatContent, setOpenChatContent] = useState(false);\n  const socket = socketIOClient(ENDPOINT);\n  useEffect(() => {\n    socket.on('connect', function (data) {\n      socket.emit('join', 'User connect to website');\n    });\n    socket.on('thread', data => {\n      setChatData(chatData => [...chatData, data]);\n    });\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    socket.emit('mess', inputValue);\n  };\n\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const location = props.history.location.pathname;\n\n  const sendChatOnSubmit = () => {\n    setOpenChatContent(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: location === \"/admin\" || location === \"/admin/dashboard\" ? \"chat-btn displayNone\" : \"chat-btn\",\n    onMouseEnter: () => {\n      setOnHover(true);\n    },\n    onMouseLeave: () => {\n      if (openChat) {\n        setOnHover(true);\n      } else setOnHover(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: onHover ? \"chat-btn-container chat-btn-hover\" : \"chat-btn-container\",\n    onClick: () => {\n      if (openChat) {\n        setOpenChat(false);\n        setOnHover(false);\n      } else {\n        setOpenChat(true);\n        setOnHover(true);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Live Chat\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: openChat ? \"chat-box hide_chat_box\" : \"chat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-box-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Live Chat\"), openChatContent === false && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-box-body\",\n    onSubmit: sendChatOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, \"Introduce yourself *\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Name\",\n    className: \"intro\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Email\",\n    className: \"intro\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, \"Message *\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"textarea\",\n    onChange: handleChange,\n    className: \"message\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"Chat\"))), openChatContent && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"zxc\", chatData.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }\n    }, item);\n  }))));\n}\n\nexport default withRouter(OpenChatBtn);","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/OpenChatBtn.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faComment","socketIOClient","withRouter","ENDPOINT","OpenChatBtn","props","openChat","setOpenChat","onHover","setOnHover","inputValue","setInputValue","chatData","setChatData","openChatContent","setOpenChatContent","socket","on","data","emit","handleSubmit","event","preventDefault","handleChange","target","value","location","history","pathname","sendChatOnSubmit","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../Styles/Chat.css'\nimport '../App.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\nimport socketIOClient from \"socket.io-client\";\nimport { withRouter } from 'react-router-dom'\n\n\nconst ENDPOINT = \"http://localhost:4000\";\n\nfunction OpenChatBtn(props) {\n\n    const [openChat, setOpenChat] = useState(false);\n    const [onHover, setOnHover] = useState(false); \n    const [inputValue, setInputValue] = useState(\"\");\n    const [chatData, setChatData] = useState([]);\n    const [openChatContent, setOpenChatContent] = useState(false)\n\n    const socket = socketIOClient(ENDPOINT);\n\n    useEffect(() => { \n        socket.on('connect', function (data) {\n            socket.emit('join', 'User connect to website');\n        })\n        socket.on('thread', (data)=> {\n            setChatData(chatData=>[...chatData, data]);\n        })\n    }, [])\n    \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        socket.emit('mess', inputValue);\n    }\n\n    const handleChange = (event) => {\n        setInputValue(event.target.value)\n    }\n    const location = props.history.location.pathname;\n\n    const sendChatOnSubmit = () => {\n        setOpenChatContent(true)\n    }\n\n    return (\n        <div \n            className={location === \"/admin\" || location === \"/admin/dashboard\" ? \"chat-btn displayNone\" : \"chat-btn\"}\n            onMouseEnter={()=> { setOnHover(true) }}\n            onMouseLeave={()=> { if (openChat) { setOnHover(true) } else setOnHover(false) }}\n        >\n            <div \n                className={onHover ? \"chat-btn-container chat-btn-hover\" : \"chat-btn-container\"}\n                onClick={()=>{ if (openChat) { setOpenChat(false); setOnHover(false) } else { setOpenChat(true); setOnHover(true) }}}\n                >\n                <FontAwesomeIcon icon={faComment}/>\n                <p>Live Chat</p>\n            </div>\n            <div className={openChat ? \"chat-box hide_chat_box\" : \"chat-box\"}>\n                <div className=\"chat-box-header\">\n                    Live Chat\n                </div>\n                { openChatContent === false &&  \n                    <div className=\"chat-box-body\" onSubmit={sendChatOnSubmit}>\n                        <form onSubmit={handleSubmit} className={openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\"}>\n                            <label>Introduce yourself *</label>\n                            <input type=\"text\" onChange={handleChange} placeholder=\"Name\" className=\"intro\" required></input>\n                            <input type=\"text\" onChange={handleChange} placeholder=\"Email\" className=\"intro\" required></input>\n                            <label>Message *</label>\n                            <textarea type=\"textarea\" onChange={handleChange} className=\"message\" required></textarea>\n                            <button className=\"btn\">Chat</button>\n                        </form>\n                    </div>\n                }\n                { openChatContent &&  \n                    <ul>\n                        zxc\n                        {\n                            chatData.map((item, index)=>{\n                                return (\n                                    <div key={index}>\n                                        {item}\n                                    </div>\n                                )\n                            })\n                        }\n                    </ul>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(OpenChatBtn);"]},"metadata":{},"sourceType":"module"}