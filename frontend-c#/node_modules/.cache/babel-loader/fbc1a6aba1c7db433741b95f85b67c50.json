{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/News/NewsBody.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFacebookF, faTwitter, faInstagram, faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport classNames from 'classnames';\nimport axios from 'axios';\nimport { Link, withRouter } from 'react-router-dom';\nimport NewsNavbar from './NewsNavbar';\nimport NewsBodyBig from './NewsBodyBig';\n\nfunction NewsBody(props) {\n  const [news, setNews] = useState([]);\n  const [isSearchFocus, setIsSearchFocus] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const newsPerPage = 5;\n  const [currentTab, setCurrentTab] = useState(-1);\n  const [currentTabText, setCurrentTabText] = useState(\"\");\n  let firstPost = [];\n  let sortedCate = [];\n  let nextPosts = [];\n  let pages = [];\n  let pageNumbers = []; //Số trang được chia ra\n\n  let splicedCate = [];\n  const cateLink = `/news/category/${firstPost.newCate}`;\n  useEffect(() => {\n    if (props.history.location.pathname === \"/news\") {\n      axios.get(`http://localhost:4000/news`).then(res => {\n        setNews(res.data);\n      });\n    } else {\n      axios.get(`http://localhost:4000/news/category/${props.match.params.cate}`).then(res => {\n        setNews(res.data);\n      });\n    }\n  }, []);\n\n  const choosePage = event => {\n    window.scrollTo(0, 0);\n\n    if (Number(event.target.id) === 0) {\n      setCurrentPage(currentPage);\n    } else if (Number(event.target.id) === -1) {\n      if (currentPage > 1) {\n        setCurrentPage(currentPage - 1);\n      } else {\n        setCurrentPage(1);\n      }\n    } else if (Number(event.target.id) === 999) {\n      setCurrentPage(currentPage + 1);\n    } else {\n      setCurrentPage(Number(event.target.id));\n    }\n  };\n\n  const topViews = news.sort((a, b) => b.newView - a.newView).slice(0, 3); //Top view on Category\n\n  if (news.length > 0) {\n    //Filt Posts depend on Category\n    let filterNews = [];\n\n    if (currentTab === -1) {\n      filterNews = news;\n    } else if (currentTabText) {\n      filterNews = news.filter(item => {\n        return item.newCate === currentTabText;\n      });\n    } else {\n      filterNews = news;\n    } //Panigation\n\n\n    const indexOfLastNews = currentPage * newsPerPage;\n    const indexOfFirstNews = indexOfLastNews - newsPerPage;\n    const currentNews = filterNews.slice(indexOfFirstNews, indexOfLastNews);\n\n    if (currentNews) {\n      firstPost = currentNews[0]; //Post of big image\n    }\n\n    nextPosts = currentNews.slice(1); //Panigation button\n\n    for (let i = 1; i <= Math.ceil(filterNews.length / newsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    if (currentPage === 2) {\n      pages.push(currentPage - 1, currentPage);\n    } else {\n      if (currentPage === 1 && pageNumbers.length === 1) {\n        pages.push();\n      } else if (currentPage === 1 && currentPage < pageNumbers.length) {\n        pages.push(currentPage, currentPage + 1);\n      } else if (currentPage === 2) {\n        pages.push(currentPage - 1, currentPage);\n      } else if (currentPage > 2 && currentPage < pageNumbers.length - 1) {\n        pages.push(currentPage - 1, currentPage);\n      } else if (currentPage === pageNumbers.length - 1) {\n        pages.push(currentPage - 1, currentPage);\n      } else {\n        pages.push(currentPage - 1, currentPage);\n      }\n    } //Get all category\n\n\n    const cate = Object.values(news.reduce((a, {\n      newCate\n    }) => {\n      a[newCate] = a[newCate] || {\n        newCate,\n        count: 0\n      };\n      a[newCate].count++;\n      return a;\n    }, Object.create(null))); //Sort and splice category by posts count\n\n    cate.sort((a, b) => b.count - a.count);\n    splicedCate = cate.splice(0, 5);\n    splicedCate.sort((a, b) => b.count - a.count);\n\n    for (let i = 0; i < splicedCate.length; i++) {\n      sortedCate.push(splicedCate[i].newCate);\n    }\n  }\n\n  const setCurrentTabFunc = data => {\n    setCurrentTab(data);\n  };\n\n  const setCurrentTabTextFunc = data => {\n    setCurrentTabText(data);\n  };\n\n  const setCurrentPageFunc = data => {\n    setCurrentPage(data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewsBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewsNavbar, {\n    setCurrentTab: setCurrentTabFunc,\n    setCurrentTabText: setCurrentTabTextFunc,\n    setCurrentPage: setCurrentPageFunc,\n    currentTab: currentTab,\n    currentTabText: currentTabText,\n    sortedCate: sortedCate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newsbody-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newsbody-post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NewsBodyBig, {\n    firstPost: firstPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }), nextPosts.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newsbody-small\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newsbody-small-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"newsbody-small-img\",\n      src: item.newImg,\n      alt: \"z\",\n      onClick: () => {\n        window.scrollTo(0, 0);\n        props.history.push(`/news/category/${item.newCate}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newsbody-small-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newsbody-small-info flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newsbody-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 45\n      }\n    }, item.newTime), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newsbody-cate\",\n      onClick: () => {\n        window.scrollTo(0, 0);\n        props.history.push(`/news/category/${item.newCate}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 45\n      }\n    }, item.newCate)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newsbody-title\",\n      onClick: () => {\n        window.scrollTo(0, 0);\n        props.history.push(`/news/${item._id}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 41\n      }\n    }, item.newTitle), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newsbody-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 41\n      }\n    }, item.newContent), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newsbody-link\",\n      onClick: () => {\n        window.scrollTo(0, 0);\n        props.history.push(`/news/${item._id}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 41\n      }\n    }, \"Read More\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newsbody-smaill-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newspagnigation-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newspagnigation\",\n    onClick: choosePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"-1\",\n    className: classNames({\n      newspagnigation_disable: currentPage === 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, \"\\u2190\"), pages.map(function (number, index) {\n    if (currentPage === number) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: number,\n        id: number,\n        className: \"newspagnigation-active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 41\n        }\n      }, number);\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: number,\n        id: number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 37\n        }\n      }, number);\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"999\",\n    className: classNames({\n      newspagnigation_disable: currentPage === pageNumbers.length\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  }, \"\\u2192\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newsbody-widget\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: isSearchFocus === true ? \"widget-form widget_search_click\" : \"widget-form\",\n    onMouseEnter: () => {\n      setIsSearchFocus(true);\n    },\n    onMouseLeave: () => {\n      setIsSearchFocus(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Search the site\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }, \"Search\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-pop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, \"Popular Posts\"), topViews.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"widget-post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-post-img\",\n      style: {\n        backgroundImage: `url(${item.newImg})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-post-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-post-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 45\n      }\n    }, item.newTitle), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-post-info2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"widget-post-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 49\n      }\n    }, item.newTime), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"widget-post-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 49\n      }\n    }, item.newView, \" view\"))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-cate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, \"Categorys\"), splicedCate.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"widget-cate-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-cate-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 45\n      }\n    }, item.newCate), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-cate-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 45\n      }\n    }, item.count)));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-connect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, \"Stay Connected\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-connect-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faFacebookF,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTwitter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faInstagram,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faGoogle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-newsletter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }\n  }, \"Newsletter\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: isSearchFocus === true ? \"widget-form widget_search_click\" : \"widget-form\",\n    onMouseEnter: () => {\n      setIsSearchFocus(true);\n    },\n    onMouseLeave: () => {\n      setIsSearchFocus(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Enter your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 29\n    }\n  }, \"Send\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newsbody-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default withRouter(NewsBody);","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/News/NewsBody.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faFacebookF","faTwitter","faInstagram","faGoogle","classNames","axios","Link","withRouter","NewsNavbar","NewsBodyBig","NewsBody","props","news","setNews","isSearchFocus","setIsSearchFocus","currentPage","setCurrentPage","newsPerPage","currentTab","setCurrentTab","currentTabText","setCurrentTabText","firstPost","sortedCate","nextPosts","pages","pageNumbers","splicedCate","cateLink","newCate","history","location","pathname","get","then","res","data","match","params","cate","choosePage","event","window","scrollTo","Number","target","id","topViews","sort","a","b","newView","slice","length","filterNews","filter","item","indexOfLastNews","indexOfFirstNews","currentNews","i","Math","ceil","push","Object","values","reduce","count","create","splice","setCurrentTabFunc","setCurrentTabTextFunc","setCurrentPageFunc","map","index","newImg","newTime","_id","newTitle","newContent","newspagnigation_disable","number","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {  faFacebookF, faTwitter, faInstagram, faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport classNames from 'classnames'\nimport axios from 'axios'\nimport { Link, withRouter } from 'react-router-dom';\nimport NewsNavbar from './NewsNavbar';\nimport NewsBodyBig from './NewsBodyBig';\nfunction NewsBody(props) {\n    const [news, setNews] = useState([]);\n    const [isSearchFocus, setIsSearchFocus] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const newsPerPage = 5;\n    const [currentTab, setCurrentTab] = useState(-1);\n    const [currentTabText, setCurrentTabText] = useState(\"\");\n    let firstPost = [];\n    let sortedCate = [];\n    let nextPosts = [];\n    let pages = [];\n    let pageNumbers = []; //Số trang được chia ra\n    let splicedCate = []\n    const cateLink = (`/news/category/${firstPost.newCate}`)\n\n    useEffect(() => {\n        if (props.history.location.pathname === \"/news\") {\n            axios.get(`http://localhost:4000/news`)\n                .then(res => {\n                    setNews(res.data)\n                }\n            )\n        } else {\n            axios.get(`http://localhost:4000/news/category/${props.match.params.cate}`)\n                .then(res => {\n                    setNews(res.data)\n                }\n            )\n        }\n    },[])\n\n    const choosePage = (event) => {\n        window.scrollTo(0,0);\n        if (Number(event.target.id) === 0) {\n            setCurrentPage(currentPage)\n        } else if (Number(event.target.id) === -1) {\n            if (currentPage > 1) {\n                setCurrentPage(currentPage - 1)\n            } else {\n                setCurrentPage(1)\n            }\n        } else if (Number(event.target.id) === 999) {\n            setCurrentPage(currentPage + 1)\n        } else {\n            setCurrentPage(Number(event.target.id))\n        }\n    }\n    \n    \n    const topViews = (news.sort((a, b) => b.newView - a.newView)).slice(0,3); //Top view on Category\n    if (news.length > 0) {\n        //Filt Posts depend on Category\n        let filterNews = [];\n        if (currentTab === -1) {\n            filterNews = news;\n        } else if (currentTabText) {\n            filterNews = news.filter((item) => {\n                return item.newCate === currentTabText\n            })\n        } else {\n            filterNews = news;\n        }\n        //Panigation\n        const indexOfLastNews = currentPage * newsPerPage;\n        const indexOfFirstNews = indexOfLastNews - newsPerPage;\n        const currentNews = filterNews.slice(indexOfFirstNews, indexOfLastNews);\n        if (currentNews) {\n            firstPost = currentNews[0]; //Post of big image\n        }\n        nextPosts = currentNews.slice(1);\n\n        //Panigation button\n        for (let i = 1; i <= Math.ceil(filterNews.length / newsPerPage); i++) {\n            pageNumbers.push(i);\n        }\n        if (currentPage === 2) {\n            pages.push(currentPage - 1, currentPage);\n        } else {\n            if (currentPage === 1 && pageNumbers.length === 1) {\n                pages.push();\n            } else if (currentPage === 1 && currentPage < pageNumbers.length) {\n                pages.push(currentPage, currentPage + 1);\n            }else if (currentPage === 2) {\n                pages.push(currentPage - 1, currentPage);\n            } else if (currentPage > 2 && currentPage < pageNumbers.length - 1) {\n                pages.push(currentPage -1, currentPage);\n            } else if (currentPage === pageNumbers.length - 1) {\n                pages.push(currentPage - 1, currentPage);\n            } else {\n                pages.push(currentPage - 1, currentPage);\n            }\n        }\n\n        //Get all category\n        const cate = Object.values(news.reduce((a, {newCate}) => {\n            a[newCate] = a[newCate] || {newCate, count: 0};\n            a[newCate].count++;\n            return a;\n        }, Object.create(null)));\n        //Sort and splice category by posts count\n        cate.sort((a,b) =>  b.count - a.count)\n        splicedCate = cate.splice(0,5);\n        splicedCate.sort((a, b) => b.count - a.count);\n\n        for (let i = 0; i < splicedCate.length; i++) {\n            sortedCate.push(splicedCate[i].newCate);\n        }\n    }\n    const setCurrentTabFunc = (data) => {\n        setCurrentTab(data)\n    }\n    const setCurrentTabTextFunc = (data) => {\n        setCurrentTabText(data)\n    }\n    const setCurrentPageFunc = (data) => {\n        setCurrentPage(data)\n    }\n    \n    return(\n        <div className=\"NewsBody\">\n            <NewsNavbar\n                setCurrentTab = {setCurrentTabFunc}\n                setCurrentTabText = {setCurrentTabTextFunc}\n                setCurrentPage = {setCurrentPageFunc}\n                currentTab = {currentTab}\n                currentTabText = {currentTabText}\n                sortedCate = {sortedCate}\n            />\n            <div className=\"newsbody-container\">\n                <div className=\"newsbody-post\">\n                    <NewsBodyBig\n                        firstPost = {firstPost}\n                    />\n                    {nextPosts.map((item, index) => {\n                        return (\n                            <div className=\"newsbody-small\" key={index}> \n                                <div className=\"newsbody-small-container\">\n                                    <img \n                                        className=\"newsbody-small-img\" \n                                        src={item.newImg} alt=\"z\"\n                                        onClick={()=>{\n                                            window.scrollTo(0,0); \n                                            props.history.push(`/news/category/${item.newCate}`)\n                                        }}\n                                    />\n                                    <div className=\"newsbody-small-left\">\n                                        <div className=\"newsbody-small-info flex-center\">\n                                            <div className=\"newsbody-time\">{item.newTime}</div>\n                                            <div \n                                                className=\"newsbody-cate\" \n                                                onClick={()=>{\n                                                    window.scrollTo(0,0); \n                                                    props.history.push(`/news/category/${item.newCate}`)\n                                                }}\n                                            >{item.newCate}</div>\n                                        </div>\n                                        <div \n                                            className=\"newsbody-title\"\n                                            onClick={()=>{\n                                                window.scrollTo(0,0); \n                                                props.history.push(`/news/${item._id}`)\n                                            }}\n                                        >{item.newTitle}</div>\n                                        <div className=\"newsbody-content\">{item.newContent}</div>\n                                        <div \n                                            className=\"newsbody-link\"\n                                            onClick={()=>{\n                                                window.scrollTo(0,0); \n                                                props.history.push(`/news/${item._id}`)\n                                            }}\n                                        >Read More</div>\n                                    </div>\n                                </div>\n                                <div className=\"newsbody-smaill-line\"></div>\n                            </div>\n                        )\n                    })}\n                    <div className=\"newspagnigation-container\">\n                        <div className=\"newspagnigation\" onClick={choosePage}>\n                            <div id=\"-1\" className={classNames({\n                                newspagnigation_disable: currentPage === 1\n                            })}>←</div>\n                            { pages.map(function(number, index) { \n                                if (currentPage === number) {\n                                    return (\n                                        <div key={number} id={number} className=\"newspagnigation-active\">\n                                            {number}\n                                        </div>\n                                    )\n                                } else {\n                                    return (\n                                    <div \n                                        key={number}\n                                        id={number}\n                                        >\n                                            {number}\n                                    </div>\n                                    )\n                                } \n                            })}\n                            <div id=\"999\" className={classNames({\n                                newspagnigation_disable: currentPage === pageNumbers.length\n                            })}>→</div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"newsbody-widget\">\n                    <div className=\"widget-search\">\n                        <div className=\"widget-title\">Search</div>\n                        <form className={ isSearchFocus === true ? \"widget-form widget_search_click\" : \"widget-form\"} \n                            onMouseEnter={() => { setIsSearchFocus(true)}}\n                            onMouseLeave={() => { setIsSearchFocus(false)}}>\n                            <input placeholder=\"Search the site\"></input>\n                            <button>Search</button>\n                        </form>\n                    </div>\n                    <div className=\"widget-pop\">\n                        <div className=\"widget-title\">Popular Posts</div>\n                        {\n                            topViews.map((item, index) => {\n                                return(\n                                    <div key={index} className=\"widget-post\">\n                                        <div className=\"widget-post-img\" style={{backgroundImage: `url(${item.newImg})`}}></div>\n                                        <div className=\"widget-post-info\">\n                                            <div className=\"widget-post-title\">{item.newTitle}</div>\n                                            <div className=\"widget-post-info2\">\n                                                <span className=\"widget-post-time\">{item.newTime}</span>\n                                                <span className=\"widget-post-view\">{item.newView} view</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                    <div className=\"widget-cate\">\n                        <div className=\"widget-title\">Categorys</div>\n                        {\n                            splicedCate.map((item, index) => {\n                                return (\n                                    <div key={index} className=\"widget-cate-container\">\n                                        <div className=\"widget-cate-div\">\n                                            <div>{item.newCate}</div>\n                                            <div className=\"widget-cate-count\">{item.count}</div>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                    <div className=\"widget-connect\">\n                        <div className=\"widget-title\">Stay Connected</div>\n                        <div className=\"widget-connect-container\">\n                            <div className=\"widget-icon\">\n                                <FontAwesomeIcon icon={faFacebookF}/>\n                            </div>\n                            <div className=\"widget-icon\">\n                                <FontAwesomeIcon icon={faTwitter}/>\n                            </div>\n                            <div className=\"widget-icon\">\n                                <FontAwesomeIcon icon={faInstagram}/>\n                            </div>\n                            <div className=\"widget-icon\">\n                                <FontAwesomeIcon icon={faGoogle}/>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"widget-newsletter\">\n                        <div className=\"widget-title\">Newsletter</div>\n                        <form className={ isSearchFocus === true ? \"widget-form widget_search_click\" : \"widget-form\"} \n                            onMouseEnter={() => { setIsSearchFocus(true)}}\n                            onMouseLeave={() => { setIsSearchFocus(false)}}>\n                            <input placeholder=\"Enter your email\"></input>\n                            <button>Send</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <div className=\"newsbody-line\"></div>\n        </div>\n    )\n}\nexport default withRouter(NewsBody);"]},"metadata":{},"sourceType":"module"}