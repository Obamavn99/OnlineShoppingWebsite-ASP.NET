{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Product/DashboardProductInfo.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nexport default function DashboardProductInfo(props) {\n  const createForm = useRef();\n  const [isCheckedSmall, setIsCheckedSmall] = useState(false);\n  const [isCheckedMedium, setIsCheckedMedium] = useState(false);\n  const [isCheckedLarge, setIsCheckedLarge] = useState(false);\n  const [inputValue, setInputValue] = useState([]);\n  const [cate, setCate] = useState([]);\n  const [cateValue, setCateValue] = useState(\"\");\n  const [size, setSize] = useState([]);\n  const [sex, setSex] = useState(\"\");\n  const [file, setFile] = useState([]);\n\n  const checkedSize = event => {\n    if (event.target.id === \"1\") {\n      if (isCheckedSmall) {\n        setIsCheckedSmall(false);\n      } else {\n        setSize(size => [...size, 'Small']);\n        setIsCheckedSmall(true);\n      }\n    }\n\n    if (event.target.id === \"2\") {\n      if (isCheckedMedium) {\n        setIsCheckedMedium(false);\n      } else {\n        setSize(size => [...size, 'Medium']);\n        setIsCheckedMedium(true);\n      }\n    }\n\n    if (event.target.id === \"3\") {\n      if (isCheckedLarge) {\n        setIsCheckedLarge(false);\n      } else {\n        setSize(size => [...size, 'Large']);\n        setIsCheckedLarge(true);\n      }\n    }\n  };\n\n  const handleOnChange = event => {\n    setInputValue({ ...inputValue,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  useEffect(() => {\n    axios.get(`http://localhost:4000/category`).then(res => {\n      setCate(res.data);\n    });\n  }, []);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    const formData = new FormData();\n    const imageArr = Array.from(file);\n    imageArr.forEach(image => {\n      formData.append('productImg', image);\n    });\n    formData.append(\"productName\", inputValue.name);\n    formData.append(\"productSale\", inputValue.sale);\n    formData.append(\"productPrice\", inputValue.price);\n    formData.append(\"productCate\", cateValue);\n    formData.append(\"productSize\", size);\n    formData.append(\"productDes\", inputValue.des);\n    formData.append(\"productSex\", sex);\n    formData.append(\"productDate\", new Date());\n    axios.post('http://localhost:4000/products', formData, config);\n    props.setCloseCreateFunc(false);\n    props.setToastFunc(true);\n  };\n\n  console.log(props.setToastFunc);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DashboardProductInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-title flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-title-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Product infomation\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-title-close flex-center\",\n    onClick: () => {\n      props.setCloseCreateFunc(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    encType: \"multipart/form-data\",\n    ref: createForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center\",\n    style: {\n      marginTop: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"create-box-btn btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, \"Add product\")))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Product/DashboardProductInfo.js"],"names":["React","useEffect","useRef","useState","FontAwesomeIcon","faTimes","axios","DashboardProductInfo","props","createForm","isCheckedSmall","setIsCheckedSmall","isCheckedMedium","setIsCheckedMedium","isCheckedLarge","setIsCheckedLarge","inputValue","setInputValue","cate","setCate","cateValue","setCateValue","size","setSize","sex","setSex","file","setFile","checkedSize","event","target","id","handleOnChange","name","value","get","then","res","data","onSubmit","preventDefault","config","headers","formData","FormData","imageArr","Array","from","forEach","image","append","sale","price","des","Date","post","setCloseCreateFunc","setToastFunc","console","log","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAEhD,QAAMC,UAAU,GAAGP,MAAM,EAAzB;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACqB,GAAD,EAAMC,MAAN,IAAgBtB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMyB,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAIA,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAoB,GAAxB,EAA6B;AACzB,UAAIrB,cAAJ,EAAoB;AAChBC,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,OAFD,MAEO;AACHY,QAAAA,OAAO,CAACD,IAAI,IAAE,CAAC,GAAGA,IAAJ,EAAU,OAAV,CAAP,CAAP;AACAX,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH;AACJ;;AACD,QAAIkB,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAoB,GAAxB,EAA6B;AACzB,UAAInB,eAAJ,EAAqB;AACjBC,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,OAFD,MAEO;AACHU,QAAAA,OAAO,CAACD,IAAI,IAAE,CAAC,GAAGA,IAAJ,EAAU,QAAV,CAAP,CAAP;AACAT,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;AACJ;;AACD,QAAIgB,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAoB,GAAxB,EAA6B;AACzB,UAAIjB,cAAJ,EAAoB;AAChBC,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,OAFD,MAEO;AACHQ,QAAAA,OAAO,CAACD,IAAI,IAAE,CAAC,GAAGA,IAAJ,EAAU,OAAV,CAAP,CAAP;AACAP,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH;AACJ;AACJ,GAzBD;;AA2BA,QAAMiB,cAAc,GAAIH,KAAD,IAAW;AAC9BZ,IAAAA,aAAa,CAAC,EAAC,GAAGD,UAAJ;AAAgB,OAACa,KAAK,CAACC,MAAN,CAAaG,IAAd,GAAqBJ,KAAK,CAACC,MAAN,CAAaI;AAAlD,KAAD,CAAb;AACH,GAFD;;AAIAjC,EAAAA,SAAS,CAAC,MAAK;AACXK,IAAAA,KAAK,CAAC6B,GAAN,CAAW,gCAAX,EACKC,IADL,CACUC,GAAG,IAAI;AACTlB,MAAAA,OAAO,CAACkB,GAAG,CAACC,IAAL,CAAP;AACH,KAHL;AAKH,GANQ,EAMP,EANO,CAAT;;AAQA,QAAMC,QAAQ,GAAIV,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACW,cAAN;AACA,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,UAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWrB,IAAX,CAAjB;AACAmB,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAK,IAAI;AACtBN,MAAAA,QAAQ,CAACO,MAAT,CAAgB,YAAhB,EAA8BD,KAA9B;AACH,KAFD;AAGAN,IAAAA,QAAQ,CAACO,MAAT,CAAgB,aAAhB,EAA+BlC,UAAU,CAACiB,IAA1C;AACAU,IAAAA,QAAQ,CAACO,MAAT,CAAgB,aAAhB,EAA+BlC,UAAU,CAACmC,IAA1C;AACAR,IAAAA,QAAQ,CAACO,MAAT,CAAgB,cAAhB,EAAgClC,UAAU,CAACoC,KAA3C;AACAT,IAAAA,QAAQ,CAACO,MAAT,CAAgB,aAAhB,EAA+B9B,SAA/B;AACAuB,IAAAA,QAAQ,CAACO,MAAT,CAAgB,aAAhB,EAA+B5B,IAA/B;AACAqB,IAAAA,QAAQ,CAACO,MAAT,CAAgB,YAAhB,EAA8BlC,UAAU,CAACqC,GAAzC;AACAV,IAAAA,QAAQ,CAACO,MAAT,CAAgB,YAAhB,EAA8B1B,GAA9B;AACAmB,IAAAA,QAAQ,CAACO,MAAT,CAAgB,aAAhB,EAA+B,IAAII,IAAJ,EAA/B;AACAhD,IAAAA,KAAK,CAACiD,IAAN,CAAW,gCAAX,EAA6CZ,QAA7C,EAAuDF,MAAvD;AACAjC,IAAAA,KAAK,CAACgD,kBAAN,CAAyB,KAAzB;AACAhD,IAAAA,KAAK,CAACiD,YAAN,CAAmB,IAAnB;AACH,GAvBD;;AAyBAC,EAAAA,OAAO,CAACC,GAAR,CAAYnD,KAAK,CAACiD,YAAlB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII;AACI,IAAA,SAAS,EAAC,oCADd;AAEI,IAAA,OAAO,EAAE,MAAI;AACTjD,MAAAA,KAAK,CAACgD,kBAAN,CAAyB,KAAzB;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEnD,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAJJ,CADJ,eAcI;AAAM,IAAA,QAAQ,EAAEkC,QAAhB;AAA0B,IAAA,OAAO,EAAC,qBAAlC;AAAwD,IAAA,GAAG,EAAE9B,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAyGI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAE;AAACmD,MAAAA,SAAS,EAAE;AAAZ,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,CAzGJ,CAdJ,CADJ,CADJ;AAkIH","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios'\n\nexport default function DashboardProductInfo(props) {\n\n    const createForm = useRef();\n    const [isCheckedSmall, setIsCheckedSmall] = useState(false);\n    const [isCheckedMedium, setIsCheckedMedium] = useState(false);\n    const [isCheckedLarge, setIsCheckedLarge] = useState(false);\n    const [inputValue, setInputValue] = useState([])\n    const [cate, setCate] = useState([])\n    const [cateValue, setCateValue] = useState(\"\")\n    const [size, setSize] = useState([])\n    const [sex, setSex] = useState(\"\")\n    const [file, setFile] = useState([])\n\n    const checkedSize = (event) => {\n        if (event.target.id === \"1\") {\n            if (isCheckedSmall) {\n                setIsCheckedSmall(false)\n            } else {\n                setSize(size=>[...size, 'Small'])\n                setIsCheckedSmall(true)\n            }\n        }\n        if (event.target.id === \"2\") {\n            if (isCheckedMedium) {\n                setIsCheckedMedium(false)\n            } else {\n                setSize(size=>[...size, 'Medium'])\n                setIsCheckedMedium(true)\n            }\n        }\n        if (event.target.id === \"3\") {\n            if (isCheckedLarge) {\n                setIsCheckedLarge(false)\n            } else {\n                setSize(size=>[...size, 'Large'])\n                setIsCheckedLarge(true)\n            }\n        }\n    }\n\n    const handleOnChange = (event) => {\n        setInputValue({...inputValue, [event.target.name]: event.target.value})\n    }\n    \n    useEffect(()=> {\n        axios.get(`http://localhost:4000/category`)\n            .then(res => {\n                setCate(res.data)\n            }\n        )\n    },[])\n\n    const onSubmit = (event) => {\n        event.preventDefault()\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n        const formData = new FormData();\n        const imageArr = Array.from(file);\n        imageArr.forEach(image => {\n            formData.append('productImg', image);\n        });\n        formData.append(\"productName\", inputValue.name);\n        formData.append(\"productSale\", inputValue.sale);\n        formData.append(\"productPrice\", inputValue.price);\n        formData.append(\"productCate\", cateValue);\n        formData.append(\"productSize\", size);\n        formData.append(\"productDes\", inputValue.des);\n        formData.append(\"productSex\", sex);\n        formData.append(\"productDate\", new Date());\n        axios.post('http://localhost:4000/products', formData, config)\n        props.setCloseCreateFunc(false);\n        props.setToastFunc(true);\n    }\n\n    console.log(props.setToastFunc)\n\n    return (\n        <div className=\"DashboardProductInfo\">\n            <div className=\"create-box\">\n                <div className=\"create-box-title flex\">\n                    <div className=\"create-box-title-text\">\n                        Product infomation\n                    </div>\n                    <div \n                        className=\"create-box-title-close flex-center\"\n                        onClick={()=>{\n                            props.setCloseCreateFunc(false);\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faTimes}/>\n                    </div>\n                </div>\n                <form onSubmit={onSubmit} encType=\"multipart/form-data\" ref={createForm}>\n                    {/* <div className=\"create-box-row flex\">\n                        <div className=\"left flex\">Name</div>\n                        <div className=\"right\">\n                            <input type=\"text\" name=\"name\" onChange={handleOnChange} required></input>\n                        </div>\n                    </div>\n                    <div className=\"create-box-row flex\">\n                        <div className=\"left flex\">Images </div>\n                        <div className=\"right\">\n                            <input \n                                onChange={(event) => {\n                                    setFile(event.target.files)\n                                }}\n                                type=\"file\" \n                                name=\"productImg\"\n                                className=\"noborder\"\n                                multiple=\"multiple\"\n                                required\n                                ></input>\n                        </div>\n                    </div>\n                    <div className=\"create-box-row flex\">\n                        <div className=\"left flex\">Defaut price </div>\n                        <div className=\"right\">\n                            <input type=\"number\" name=\"price\" placeholder=\"USD\" onChange={handleOnChange} required></input>\n                        </div>\n                    </div>\n                    <div className=\"create-box-row flex\">\n                        <div className=\"left flex\">Sale </div>\n                        <div className=\"right flex-center\">\n                            <input type=\"number\" placeholder=\"%\" style={{ width: \"100px\"}} onChange={handleOnChange} name=\"sale\" required></input>\n                            <label>From: </label>\n                            <input type=\"date\"  name=\"fromdate\" onChange={handleOnChange} placeholder=\"dd/mm/yyyy\" pattern=\"(^(((0[1-9]|1[0-9]|2[0-8])[\\/](0[1-9]|1[012]))|((29|30|31)[\\/](0[13578]|1[02]))|((29|30)[\\/](0[4,6,9]|11)))[\\/](19|[2-9][0-9])\\d\\d$)|(^29[\\/]02[\\/](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)$)\"/>\n                            <label>To: </label>\n                            <input type=\"date\"  name=\"todate\" onChange={handleOnChange} placeholder=\"dd/mm/yyyy\" pattern=\"(^(((0[1-9]|1[0-9]|2[0-8])[\\/](0[1-9]|1[012]))|((29|30|31)[\\/](0[13578]|1[02]))|((29|30)[\\/](0[4,6,9]|11)))[\\/](19|[2-9][0-9])\\d\\d$)|(^29[\\/]02[\\/](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)$)\"/>\n                        </div>\n                    </div>\n                    <div className=\"create-box-row flex\">\n                        <div className=\"left flex\">Category </div>\n                        <div className=\"right flex-center\">\n                            <select style={{ width: \"350px\"}} \n                                onChange={(event) => {setCateValue(event.target.value)}}\n                                value={cateValue}\n                                required>\n                                <option></option>\n                                { cate.length > 0 &&\n                                    cate.map((item, index) => {\n                                        return(\n                                            <option key={index}>{item.cateName}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                            <input type=\"text\" name=\"cate\" placeholder=\"New category?\" style={{  margin:'0 10px'}} onChange={handleOnChange}></input>\n                            <div className=\"btn\" style={{\n                                fontSize: '14px',\n                                fontFamily: 'sans-serif',\n                                fontWeight: '300',\n                                padding: '0 10px',\n                                cursor: 'pointer',\n                                width: '350px',\n                                height: '30px'\n                            }}>\n                                Add new category\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"create-box-row flex\">\n                        <div className=\"left flex\">Sex </div>\n                        <div className=\"right flex\">\n                            <select style={{ width: \"200px\"}} \n                                onChange={(event) => {setSex(event.target.value)}}\n                                value={sex}\n                                required>\n                                <option></option>\n                                <option>Man</option>\n                                <option>Woman</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"create-box-row flex\">\n                        <div className=\"left flex\">Size </div>\n                        <div className=\"right flex\">\n                            <div \n                                className={isCheckedSmall ? \"size-check isChecked\" : \"size-check\"}\n                                id=\"1\" \n                                onClick={checkedSize}>Small</div>\n                            <div \n                                className={isCheckedMedium ? \"size-check isChecked\" : \"size-check\"}\n                                id=\"2\" \n                                onClick={checkedSize}>Medium</div>\n                            <div \n                                className={isCheckedLarge ? \"size-check isChecked\" : \"size-check\"}\n                                id=\"3\" \n                                onClick={checkedSize}>Large</div>\n                        </div>\n                    </div>\n                    <div className=\"create-box-row flex\">\n                        <div className=\"left flex\">Description </div>\n                        <div className=\"right\">\n                            <input type=\"text\" name=\"des\" onChange={handleOnChange} required></input>\n                        </div>\n                    </div> */}\n\n                    <div className=\"flex-center\" style={{marginTop: '40px'}}>\n                    <button className=\"create-box-btn btn\">\n                        Add product\n                    </button>\n                </div>\n                </form>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}