{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardMain.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { faFileInvoice, faMoneyBillWave, faStar, faTshirt, faUser } from '@fortawesome/free-solid-svg-icons';\nimport DashboardTotalCount from './DashboardTotalCount';\nimport DashboardLocation from './DashboardLocation';\nimport DashboardTopFive from './DashboardTopFive';\nimport DashboardRecentReview from './DashboardRecentReview';\nimport axios from 'axios';\nimport DashboardRecentOrders from './DashboardRecentOrders';\nimport DashboardChart from './DashboardChart';\nexport default function DashboardMain() {\n  const [products, setProducts] = useState([]);\n  const [order, setOrder] = useState([]);\n  const [user, setUser] = useState([]);\n  const [topCustomer, setTopCusomer] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalSale, setTotalSale] = useState(0);\n  useEffect(() => {\n    axios.get(`http://localhost:4000/products`).then(res => {\n      setProducts(res.data);\n    });\n    axios.get(`http://localhost:4000/users/list`).then(res => {\n      setUser(res.data);\n    });\n    axios.get(`http://localhost:4000/order`).then(res => {\n      setOrder(res.data);\n      const topCustomer2 = Object.values(res.data.reduce((a, {\n        orderEmail,\n        orderName,\n        orderTotal,\n        orderAvatar\n      }) => {\n        console.log(a); // a[orderEmail] = a[orderEmail] || {orderEmail, orderName, orderAvatar, orderTotal, count: 0};\n\n        a[orderEmail].count++;\n        return a;\n      }, Object.create(null)));\n      topCustomer2.sort((a, b) => b.count - a.count);\n      setTopCusomer(topCustomer2);\n      var totalIncome = 0;\n      var totalSale = 0;\n\n      for (let i in res.data) {\n        for (let j in res.data[i].orderList) {\n          totalSale += res.data[i].orderList[j].amount;\n        }\n\n        totalIncome += res.data[i].orderTotal;\n      }\n\n      setTotalSale(totalSale);\n      setTotalIncome(totalIncome);\n    });\n  }, []);\n  const totalCount = [{\n    id: 1,\n    title: \"Total orders\",\n    count: order.length,\n    percent: 12,\n    color: \"orange\",\n    icon: faFileInvoice\n  }, {\n    id: 2,\n    title: \"Total sales\",\n    count: `${totalSale}`,\n    percent: 20,\n    color: \"pink\",\n    icon: faTshirt\n  }, {\n    id: 3,\n    title: \"Income\",\n    count: `${totalIncome}Ä‘`,\n    percent: 30,\n    color: \"green\",\n    icon: faMoneyBillWave\n  }, {\n    id: 4,\n    title: \"Users\",\n    count: user.length,\n    percent: 5,\n    color: \"lightblue\",\n    icon: faUser\n  }];\n  const recentVote = [];\n\n  if (products.length > 0) {\n    for (let i = 0; i < products.length; i++) {\n      const productVote = products[i].productVote;\n\n      for (let j = 0; j < productVote.length; j++) {\n        const newRatingDate = new Date(productVote[j].ratingDate);\n        productVote[j].productName = products[i].productName;\n\n        if (newRatingDate.getDate() === new Date().getDate()) {\n          let hours = newRatingDate.getHours().toString();\n          let minutes = newRatingDate.getMinutes().toString();\n\n          if (hours < 10) {\n            hours = \"0\" + hours;\n          }\n\n          if (minutes < 10) {\n            minutes = \"0\" + minutes;\n          }\n\n          productVote[j].ratingHours = hours;\n          productVote[j].ratingMinutes = minutes;\n        } else {\n          let days = newRatingDate.getDay().toString();\n          let months = newRatingDate.getMonth().toString();\n\n          if (days < 10) {\n            days = \"0\" + days;\n          }\n\n          if (months < 10) {\n            months = \"0\" + months;\n          }\n\n          productVote[j].ratingDays = days;\n          productVote[j].ratingMonths = months;\n          productVote[j].ratingYears = newRatingDate.getFullYear().toString();\n        }\n\n        recentVote.push(productVote[j]);\n      }\n    }\n  }\n\n  if (recentVote) {\n    recentVote.sort(function (a, b) {\n      return new Date(b.ratingDate) - new Date(a.ratingDate);\n    });\n  }\n\n  const topRecentVote = recentVote.splice(0, 5);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, totalCount.map((item, index) => {\n    return /*#__PURE__*/React.createElement(DashboardTotalCount, {\n      key: index,\n      icon: item.icon,\n      title: item.title,\n      count: item.count,\n      percent: item.percent,\n      color: item.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    });\n  })), /*#__PURE__*/React.createElement(DashboardLocation, {\n    order: order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardTopFive, {\n    icon: faUser,\n    title: \"Top customers\",\n    color: \"lightblue\",\n    data: topCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DashboardTopFive, {\n    icon: faTshirt,\n    title: \"Top selling products\",\n    color: \"pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardRecentReview, {\n    icon: faStar,\n    title: \"Customer Review\",\n    color: \"orange\",\n    topRecentVote: topRecentVote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DashboardRecentOrders // recent orders\n  , {\n    icon: faFileInvoice,\n    title: \"Recent Order\",\n    color: \"green\",\n    topRecentVote: topRecentVote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardMain.js"],"names":["React","useEffect","useState","faFileInvoice","faMoneyBillWave","faStar","faTshirt","faUser","DashboardTotalCount","DashboardLocation","DashboardTopFive","DashboardRecentReview","axios","DashboardRecentOrders","DashboardChart","DashboardMain","products","setProducts","order","setOrder","user","setUser","topCustomer","setTopCusomer","totalIncome","setTotalIncome","totalSale","setTotalSale","get","then","res","data","topCustomer2","Object","values","reduce","a","orderEmail","orderName","orderTotal","orderAvatar","console","log","count","create","sort","b","i","j","orderList","amount","totalCount","id","title","length","percent","color","icon","recentVote","productVote","newRatingDate","Date","ratingDate","productName","getDate","hours","getHours","toString","minutes","getMinutes","ratingHours","ratingMinutes","days","getDay","months","getMonth","ratingDays","ratingMonths","ratingYears","getFullYear","push","topRecentVote","splice","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAO,kCAAP;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,MAAzC,EAAiDC,QAAjD,EAA2DC,MAA3D,QAAyE,mCAAzE;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,SAASC,aAAT,GAAyB;AAEpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoB,WAAD,EAAcC,aAAd,IAA+BrB,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACwB,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,CAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,KAAK,CAACgB,GAAN,CAAW,gCAAX,EACKC,IADL,CACUC,GAAG,IAAI;AACTb,MAAAA,WAAW,CAACa,GAAG,CAACC,IAAL,CAAX;AACH,KAHL;AAKAnB,IAAAA,KAAK,CAACgB,GAAN,CAAW,kCAAX,EACKC,IADL,CACUC,GAAG,IAAI;AACTT,MAAAA,OAAO,CAACS,GAAG,CAACC,IAAL,CAAP;AACH,KAHL;AAKAnB,IAAAA,KAAK,CAACgB,GAAN,CAAW,6BAAX,EACKC,IADL,CACUC,GAAG,IAAI;AACTX,MAAAA,QAAQ,CAACW,GAAG,CAACC,IAAL,CAAR;AAEA,YAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcJ,GAAG,CAACC,IAAJ,CAASI,MAAT,CAAgB,CAACC,CAAD,EAAI;AAACC,QAAAA,UAAD;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA,UAAxB;AAAoCC,QAAAA;AAApC,OAAJ,KAAyD;AACxGC,QAAAA,OAAO,CAACC,GAAR,CAAYN,CAAZ,EADwG,CAExG;;AACAA,QAAAA,CAAC,CAACC,UAAD,CAAD,CAAcM,KAAd;AACA,eAAOP,CAAP;AACH,OALkC,EAKhCH,MAAM,CAACW,MAAP,CAAc,IAAd,CALgC,CAAd,CAArB;AAMAZ,MAAAA,YAAY,CAACa,IAAb,CAAkB,CAACT,CAAD,EAAGU,CAAH,KAAUA,CAAC,CAACH,KAAF,GAAUP,CAAC,CAACO,KAAxC;AACApB,MAAAA,aAAa,CAACS,YAAD,CAAb;AAEA,UAAIR,WAAW,GAAG,CAAlB;AACA,UAAIE,SAAS,GAAG,CAAhB;;AACA,WAAI,IAAIqB,CAAR,IAAajB,GAAG,CAACC,IAAjB,EAAuB;AACnB,aAAI,IAAIiB,CAAR,IAAalB,GAAG,CAACC,IAAJ,CAASgB,CAAT,EAAYE,SAAzB,EAAoC;AAChCvB,UAAAA,SAAS,IAAII,GAAG,CAACC,IAAJ,CAASgB,CAAT,EAAYE,SAAZ,CAAsBD,CAAtB,EAAyBE,MAAtC;AACH;;AACD1B,QAAAA,WAAW,IAAIM,GAAG,CAACC,IAAJ,CAASgB,CAAT,EAAYR,UAA3B;AACH;;AACDZ,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACAD,MAAAA,cAAc,CAACD,WAAD,CAAd;AACH,KAvBL;AAyBH,GApCQ,EAoCN,EApCM,CAAT;AAsCA,QAAM2B,UAAU,GAAG,CACf;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,cAFX;AAGIV,IAAAA,KAAK,EAAEzB,KAAK,CAACoC,MAHjB;AAIIC,IAAAA,OAAO,EAAE,EAJb;AAKIC,IAAAA,KAAK,EAAE,QALX;AAMIC,IAAAA,IAAI,EAAEtD;AANV,GADe,EASf;AACIiD,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,aAFX;AAGIV,IAAAA,KAAK,EAAG,GAAEjB,SAAU,EAHxB;AAII6B,IAAAA,OAAO,EAAE,EAJb;AAKIC,IAAAA,KAAK,EAAE,MALX;AAMIC,IAAAA,IAAI,EAAEnD;AANV,GATe,EAiBf;AACI8C,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,QAFX;AAGIV,IAAAA,KAAK,EAAG,GAAEnB,WAAY,GAH1B;AAII+B,IAAAA,OAAO,EAAE,EAJb;AAKIC,IAAAA,KAAK,EAAE,OALX;AAMIC,IAAAA,IAAI,EAAErD;AANV,GAjBe,EAyBf;AACIgD,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,OAFX;AAGIV,IAAAA,KAAK,EAAEvB,IAAI,CAACkC,MAHhB;AAIIC,IAAAA,OAAO,EAAE,CAJb;AAKIC,IAAAA,KAAK,EAAE,WALX;AAMIC,IAAAA,IAAI,EAAElD;AANV,GAzBe,CAAnB;AAmCA,QAAMmD,UAAU,GAAG,EAAnB;;AACA,MAAI1C,QAAQ,CAACsC,MAAT,GAAkB,CAAtB,EAAyB;AACrB,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/B,QAAQ,CAACsC,MAA7B,EAAqCP,CAAC,EAAtC,EAA0C;AACtC,YAAMY,WAAW,GAAG3C,QAAQ,CAAC+B,CAAD,CAAR,CAAYY,WAAhC;;AACA,WAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,WAAW,CAACL,MAAhC,EAAwCN,CAAC,EAAzC,EAA6C;AACzC,cAAMY,aAAa,GAAG,IAAIC,IAAJ,CAASF,WAAW,CAACX,CAAD,CAAX,CAAec,UAAxB,CAAtB;AACAH,QAAAA,WAAW,CAACX,CAAD,CAAX,CAAee,WAAf,GAA6B/C,QAAQ,CAAC+B,CAAD,CAAR,CAAYgB,WAAzC;;AACA,YAAIH,aAAa,CAACI,OAAd,OAA4B,IAAIH,IAAJ,GAAWG,OAAX,EAAhC,EAAsD;AAClD,cAAIC,KAAK,GAAGL,aAAa,CAACM,QAAd,GAAyBC,QAAzB,EAAZ;AACA,cAAIC,OAAO,GAAGR,aAAa,CAACS,UAAd,GAA2BF,QAA3B,EAAd;;AACA,cAAIF,KAAK,GAAG,EAAZ,EAAgB;AACZA,YAAAA,KAAK,GAAG,MAAMA,KAAd;AACH;;AACD,cAAIG,OAAO,GAAG,EAAd,EAAkB;AACdA,YAAAA,OAAO,GAAG,MAAMA,OAAhB;AACH;;AACDT,UAAAA,WAAW,CAACX,CAAD,CAAX,CAAesB,WAAf,GAA6BL,KAA7B;AACAN,UAAAA,WAAW,CAACX,CAAD,CAAX,CAAeuB,aAAf,GAA+BH,OAA/B;AACH,SAXD,MAWO;AACH,cAAII,IAAI,GAAGZ,aAAa,CAACa,MAAd,GAAuBN,QAAvB,EAAX;AACA,cAAIO,MAAM,GAAGd,aAAa,CAACe,QAAd,GAAyBR,QAAzB,EAAb;;AACA,cAAIK,IAAI,GAAG,EAAX,EAAe;AACXA,YAAAA,IAAI,GAAG,MAAMA,IAAb;AACH;;AACD,cAAIE,MAAM,GAAG,EAAb,EAAiB;AACbA,YAAAA,MAAM,GAAG,MAAMA,MAAf;AACH;;AACDf,UAAAA,WAAW,CAACX,CAAD,CAAX,CAAe4B,UAAf,GAA4BJ,IAA5B;AACAb,UAAAA,WAAW,CAACX,CAAD,CAAX,CAAe6B,YAAf,GAA8BH,MAA9B;AACAf,UAAAA,WAAW,CAACX,CAAD,CAAX,CAAe8B,WAAf,GAA6BlB,aAAa,CAACmB,WAAd,GAA4BZ,QAA5B,EAA7B;AACH;;AACDT,QAAAA,UAAU,CAACsB,IAAX,CAAgBrB,WAAW,CAACX,CAAD,CAA3B;AACH;AACJ;AACJ;;AAED,MAAIU,UAAJ,EAAgB;AACZA,IAAAA,UAAU,CAACb,IAAX,CAAgB,UAAST,CAAT,EAAWU,CAAX,EAAa;AACzB,aAAO,IAAIe,IAAJ,CAASf,CAAC,CAACgB,UAAX,IAAyB,IAAID,IAAJ,CAASzB,CAAC,CAAC0B,UAAX,CAAhC;AACH,KAFD;AAGH;;AAED,QAAMmB,aAAa,GAAGvB,UAAU,CAACwB,MAAX,CAAkB,CAAlB,EAAoB,CAApB,CAAtB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM/B,UAAU,CAACgC,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAgB;AAC7B,wBACI,oBAAC,mBAAD;AACI,MAAA,GAAG,EAAIA,KADX;AAEI,MAAA,IAAI,EAAID,IAAI,CAAC3B,IAFjB;AAGI,MAAA,KAAK,EAAI2B,IAAI,CAAC/B,KAHlB;AAII,MAAA,KAAK,EAAI+B,IAAI,CAACzC,KAJlB;AAKI,MAAA,OAAO,EAAIyC,IAAI,CAAC7B,OALpB;AAMI,MAAA,KAAK,EAAI6B,IAAI,CAAC5B,KANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH,GAXC,CADN,CADJ,eAeI,oBAAC,iBAAD;AACI,IAAA,KAAK,EAAEtC,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,eAkBI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,IAAI,EAAIX,MADZ;AAEI,IAAA,KAAK,EAAG,eAFZ;AAGI,IAAA,KAAK,EAAG,WAHZ;AAII,IAAA,IAAI,EAAIe,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI,oBAAC,gBAAD;AACI,IAAA,IAAI,EAAIhB,QADZ;AAEI,IAAA,KAAK,EAAG,sBAFZ;AAGI,IAAA,KAAK,EAAG,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAlBJ,eA+BI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,qBAAD;AACI,IAAA,IAAI,EAAID,MADZ;AAEI,IAAA,KAAK,EAAG,iBAFZ;AAGI,IAAA,KAAK,EAAG,QAHZ;AAII,IAAA,aAAa,EAAI4E,aAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI,oBAAC,qBAAD,CAAuB;AAAvB;AACI,IAAA,IAAI,EAAI9E,aADZ;AAEI,IAAA,KAAK,EAAG,cAFZ;AAGI,IAAA,KAAK,EAAG,OAHZ;AAII,IAAA,aAAa,EAAI8E,aAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CA/BJ,eA6CI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA7CJ,CADJ;AAmDH","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { faFileInvoice, faMoneyBillWave, faStar, faTshirt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport DashboardTotalCount from './DashboardTotalCount'\nimport DashboardLocation from './DashboardLocation'\nimport DashboardTopFive from './DashboardTopFive'\nimport DashboardRecentReview from './DashboardRecentReview'\nimport axios from 'axios'\nimport DashboardRecentOrders from './DashboardRecentOrders'\nimport DashboardChart from './DashboardChart'\n\nexport default function DashboardMain() {\n\n    const [products, setProducts] = useState([]);\n    const [order, setOrder] = useState([]);\n    const [user, setUser] = useState([]);\n    const [topCustomer, setTopCusomer] = useState([]);\n    const [totalIncome, setTotalIncome] = useState(0);\n    const [totalSale, setTotalSale] = useState(0);\n\n    useEffect(()=>{\n        axios.get(`http://localhost:4000/products`)\n            .then(res => {\n                setProducts(res.data)\n            }\n        )\n        axios.get(`http://localhost:4000/users/list`)\n            .then(res => {\n                setUser(res.data)\n            }\n        )\n        axios.get(`http://localhost:4000/order`)\n            .then(res => {\n                setOrder(res.data)\n\n                const topCustomer2 = Object.values(res.data.reduce((a, {orderEmail, orderName, orderTotal, orderAvatar}) => {\n                    console.log(a)\n                    // a[orderEmail] = a[orderEmail] || {orderEmail, orderName, orderAvatar, orderTotal, count: 0};\n                    a[orderEmail].count++;\n                    return a;\n                }, Object.create(null)));\n                topCustomer2.sort((a,b) =>  b.count - a.count)\n                setTopCusomer(topCustomer2)\n\n                var totalIncome = 0;\n                var totalSale = 0;\n                for(let i in res.data) {\n                    for(let j in res.data[i].orderList) {\n                        totalSale += res.data[i].orderList[j].amount\n                    }\n                    totalIncome += res.data[i].orderTotal\n                }\n                setTotalSale(totalSale)\n                setTotalIncome(totalIncome)\n            }\n        )\n    }, [])\n\n    const totalCount = [\n        {\n            id: 1,\n            title: \"Total orders\",\n            count: order.length,\n            percent: 12,\n            color: \"orange\",\n            icon: faFileInvoice\n        },\n        {\n            id: 2,\n            title: \"Total sales\",\n            count: `${totalSale}`,\n            percent: 20,\n            color: \"pink\",\n            icon: faTshirt\n        },\n        {\n            id: 3,\n            title: \"Income\",\n            count: `${totalIncome}Ä‘`,\n            percent: 30,\n            color: \"green\",\n            icon: faMoneyBillWave\n        },\n        {\n            id: 4,\n            title: \"Users\",\n            count: user.length,\n            percent: 5,\n            color: \"lightblue\",\n            icon: faUser\n        },\n    ]\n\n    const recentVote = [];\n    if (products.length > 0) {\n        for (let i = 0; i < products.length; i++) {\n            const productVote = products[i].productVote;\n            for (let j = 0; j < productVote.length; j++) {\n                const newRatingDate = new Date(productVote[j].ratingDate);\n                productVote[j].productName = products[i].productName;\n                if (newRatingDate.getDate() === new Date().getDate()) {\n                    let hours = newRatingDate.getHours().toString();\n                    let minutes = newRatingDate.getMinutes().toString();\n                    if (hours < 10) {\n                        hours = \"0\" + hours\n                    }\n                    if (minutes < 10) {\n                        minutes = \"0\" + minutes\n                    }\n                    productVote[j].ratingHours = hours;\n                    productVote[j].ratingMinutes = minutes;\n                } else {\n                    let days = newRatingDate.getDay().toString();\n                    let months = newRatingDate.getMonth().toString();\n                    if (days < 10) {\n                        days = \"0\" + days\n                    }\n                    if (months < 10) {\n                        months = \"0\" + months\n                    }\n                    productVote[j].ratingDays = days;\n                    productVote[j].ratingMonths = months;\n                    productVote[j].ratingYears = newRatingDate.getFullYear().toString();\n                }\n                recentVote.push(productVote[j])\n            }\n        }\n    }\n\n    if (recentVote) {\n        recentVote.sort(function(a,b){\n            return new Date(b.ratingDate) - new Date(a.ratingDate);\n        });\n    }\n\n    const topRecentVote = recentVote.splice(0,5)\n\n    return (\n        <div className=\"dashboard-main\">\n            <div className=\"row flex\">\n                { totalCount.map((item, index)=> {\n                    return (\n                        <DashboardTotalCount\n                            key = {index}\n                            icon = {item.icon}\n                            title = {item.title}\n                            count = {item.count}\n                            percent = {item.percent}\n                            color = {item.color}\n                        />\n                    )\n                })}\n            </div>\n            <DashboardLocation\n                order={order}\n            />\n            <div className=\"row flex\">\n                <DashboardTopFive\n                    icon = {faUser}\n                    title = \"Top customers\"\n                    color = \"lightblue\"\n                    data = {topCustomer}\n                />\n                <DashboardTopFive\n                    icon = {faTshirt}\n                    title = \"Top selling products\"\n                    color = \"pink\"\n                />\n            </div>\n            <div className=\"row flex\">\n                <DashboardRecentReview\n                    icon = {faStar}\n                    title = \"Customer Review\"\n                    color = \"orange\"\n                    topRecentVote = {topRecentVote}\n                />\n                <DashboardRecentOrders // recent orders\n                    icon = {faFileInvoice}\n                    title = \"Recent Order\"\n                    color = \"green\"\n                    topRecentVote = {topRecentVote}\n                />\n            </div>\n            <div className=\"row flex\">\n                <DashboardChart/>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}