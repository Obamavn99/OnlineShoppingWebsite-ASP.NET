{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/src/components/Product/ProductBody.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faCartPlus, faChevronLeft, faChevronRight, faHeart, faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from 'react-router-dom';\nimport ReactStars from \"react-rating-stars-component\";\nexport default function ProductBody(props) {\n  function slugify(str) {\n    str = str.replace(/^\\s+|\\s+$/g, ''); // trim\n\n    str = str.toLowerCase(); // remove accents, swap ñ for n, etc\n\n    var from = \"ãàáäâẽèéëêìíïîõòóöôùúüûñç·/_,:;\";\n    var to = \"aaaaaeeeeeiiiiooooouuuunc------\";\n\n    for (var i = 0, l = from.length; i < l; i++) {\n      str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n    }\n\n    str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n    .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n    .replace(/-+/g, '-'); // collapse dashes\n\n    return str; // Trim - from end of text\n  }\n\n  const handleMouseMove = e => {\n    const {\n      left,\n      top,\n      width,\n      height\n    } = e.target.getBoundingClientRect();\n    const x = (e.pageX - left) / width * 100;\n    const y = (e.pageY - top) / height * 100;\n    setZoom(`${x}% ${y}%`);\n  };\n\n  const [imgIndex, setImgIndex] = useState(0);\n  const [countCart, setCountCart] = useState(1);\n  const [hover, setHover] = useState(false);\n  const [zoom, setZoom] = useState(`0% 0%`);\n  const width = 500;\n  const productSmall = useRef(null);\n  useEffect(() => {\n    if (hover === false) {\n      var interval = setInterval(() => {\n        setImgIndex(imgIndex => imgIndex + 1);\n      }, 5000);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [hover]);\n  let slugSex = \"\";\n  let ratingList = \"\";\n  let averageRating = 0;\n  let product = \"\";\n\n  if (props.product) {\n    product = props.product;\n    console.log(product.productSex);\n    slugSex = \"/\" + slugify(product.productSex);\n\n    if (imgIndex >= product.productImg.length) {\n      //infinity slider loop\n      // setProductImgBig(productImgBig.concat(props.productImg))\n      setImgIndex(0);\n    }\n\n    if (product.productImg.length > 4) {\n      if (imgIndex === 1 || imgIndex === 2) {\n        productSmall.current.style.transform = `translateY(0px)`;\n      } else if (imgIndex === product.productImg.length - 1) {\n        productSmall.current.style.transform = `translateY(-${(imgIndex - 5) * 110 + 50}px)`;\n      } else if (imgIndex === product.productImg.length - 2) {\n        productSmall.current.style.transform = `translateY(-${(imgIndex - 4) * 110 + 50}px)`;\n      } else if (imgIndex === product.productImg.length - 3) {\n        productSmall.current.style.transform = `translateY(-${(imgIndex - 3) * 110 + 50}px)`;\n      } else if (imgIndex > 2) {\n        productSmall.current.style.transform = `translateY(-${(imgIndex - 2) * 110}px)`;\n      } else {\n        if (productSmall.current) {\n          productSmall.current.style.transform = `translateY(0px)`;\n        }\n      }\n    } //Counting star vote\n\n\n    ratingList = props.productVote.map(a => a.ratingStar); // get all rating\n\n    const totalRating = ratingList.reduce((a, b) => a + b, 0);\n    averageRating = totalRating / ratingList.length;\n  }\n\n  const ratingStar = {\n    size: 12,\n    value: averageRating,\n    edit: false,\n    activeColor: \"#fda32a\",\n    color: \"#ddd\",\n    isHalf: true\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-info-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/src/components/Product/ProductBody.js"],"names":["React","useEffect","useRef","useState","FontAwesomeIcon","faAngleRight","faCartPlus","faChevronLeft","faChevronRight","faHeart","faMinus","faPlus","Link","ReactStars","ProductBody","props","slugify","str","replace","toLowerCase","from","to","i","l","length","RegExp","charAt","handleMouseMove","e","left","top","width","height","target","getBoundingClientRect","x","pageX","y","pageY","setZoom","imgIndex","setImgIndex","countCart","setCountCart","hover","setHover","zoom","productSmall","interval","setInterval","clearInterval","slugSex","ratingList","averageRating","product","console","log","productSex","productImg","current","style","transform","productVote","map","a","ratingStar","totalRating","reduce","b","size","value","edit","activeColor","color","isHalf"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {  faAngleRight, faCartPlus, faChevronLeft, faChevronRight, faHeart, faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from 'react-router-dom';\nimport ReactStars from \"react-rating-stars-component\";\n\nexport default function ProductBody(props) {\n\n    function slugify(str){\n            str = str.replace(/^\\s+|\\s+$/g, ''); // trim\n            str = str.toLowerCase();\n\n            // remove accents, swap ñ for n, etc\n            var from = \"ãàáäâẽèéëêìíïîõòóöôùúüûñç·/_,:;\";\n            var to   = \"aaaaaeeeeeiiiiooooouuuunc------\";\n            for (var i=0, l=from.length ; i<l ; i++) {\n                str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n            }\n\n            str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n                .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n                .replace(/-+/g, '-'); // collapse dashes\n\n            return str;    // Trim - from end of text\n    }\n    const handleMouseMove = (e) => {\n        const { left, top, width, height } = e.target.getBoundingClientRect();\n        const x = ((e.pageX - left) / width) * 100;\n        const y = ((e.pageY - top) / height) * 100;\n        setZoom(`${x}% ${y}%`);\n    };\n\n    const [imgIndex, setImgIndex] = useState(0);\n    const [countCart, setCountCart] = useState(1);\n    const [hover, setHover] = useState(false);\n    const [zoom, setZoom] = useState(`0% 0%`);\n    const width = 500;\n    const productSmall = useRef(null);\n\n    useEffect(() => {\n        if (hover === false) {\n            var interval = setInterval(() => {\n                setImgIndex(imgIndex => imgIndex + 1);\n            }, 5000);\n        }\n        return() => {\n            clearInterval(interval);\n        }\n    },[hover])\n\n    let slugSex = \"\";\n    let ratingList = \"\";\n    let averageRating = 0;\n    let product = \"\";\n    if (props.product) {\n        product = props.product;\n        console.log(product.productSex)\n        slugSex = \"/\" + slugify(product.productSex);\n        if (imgIndex >= product.productImg.length) { //infinity slider loop\n            // setProductImgBig(productImgBig.concat(props.productImg))\n            setImgIndex(0);\n        }\n\n        if (product.productImg.length > 4) {\n            if (imgIndex === 1 || imgIndex === 2) {\n                productSmall.current.style.transform= `translateY(0px)`\n            } else if (imgIndex === product.productImg.length - 1) {\n                productSmall.current.style.transform= `translateY(-${(imgIndex-5) * 110 + 50}px)`\n            } else if (imgIndex === product.productImg.length - 2) {\n                productSmall.current.style.transform= `translateY(-${(imgIndex-4) * 110 + 50}px)`\n            } else if (imgIndex === product.productImg.length - 3) {\n                productSmall.current.style.transform= `translateY(-${(imgIndex-3) * 110 + 50}px)`\n            } else if (imgIndex > 2) {\n                productSmall.current.style.transform= `translateY(-${(imgIndex-2) * 110}px)`\n            } else {\n                if (productSmall.current) {\n                    productSmall.current.style.transform= `translateY(0px)`\n                }\n            }\n        }\n\n        //Counting star vote\n        ratingList = props.productVote.map(a => a.ratingStar); // get all rating\n        const totalRating = ratingList.reduce((a, b) => a + b, 0)\n        averageRating = totalRating/ratingList.length;\n    }\n\n    const ratingStar = {\n        size: 12,\n        value: averageRating,\n        edit: false,\n        activeColor: \"#fda32a\",\n        color: \"#ddd\",\n        isHalf: true\n    };\n\n    return(\n        <div className=\"ProductBody\">\n            {/* <div className=\"product-breadcrumb flex\">\n                <Link to=\"/\" className=\"breadcrumb-item breadcrumb-link\">Home</Link>\n                <FontAwesomeIcon icon={ faAngleRight } className=\"breadcrumb-arrow\"/>\n                <Link to={slugSex} className=\"breadcrumb-item breadcrumb-link\">{props.productSex}</Link>\n                <FontAwesomeIcon icon={ faAngleRight } className=\"breadcrumb-arrow\"/>\n                <div className=\"breadcrumb-item breadcrumb-product\">{props.productName}</div>\n            </div> */}\n\n            {/* <div className=\"product-detail flex\">\n                <div className=\"product-gallery flex\"\n                    onMouseEnter={()=> {setHover(true)}}\n                    onMouseLeave={()=> {setHover(false)}}>\n                    <div \n                        className=\"product-small\" ref={productSmall}\n                        >\n                        {productImg.map((item, index) => {\n                            return (\n                                <div \n                                    key={index}\n                                    className={imgIndex === index ? \"product-small-item product-small-item-active\" : \"product-small-item\"}>\n                                    <img \n                                        src={item}\n                                        onClick={()=>{ setImgIndex(index)}}\n                                        alt=\"\"\n                                        ></img>\n                                </div>\n                            )\n                        })}\n                    </div>\n                    <div\n                        className=\"product-slider flex\"\n                        onMouseMove={handleMouseMove}\n                        >\n                        {productImg.map((item, index) => {\n                            return (\n                                <div\n                                    key={index}\n                                    className=\"product-big flex\" \n                                    style={{ \n                                        transform: `translateX(-${width * imgIndex}px`,\n                                        backgroundImage: `url(${item})`,\n                                        backgroundPosition: `${zoom}`\n                                    }}>\n                                    <div className=\"product-big-item\">\n                                        <img \n                                            id={index}\n                                            className=\"nodrag\"\n                                            style={{ width: `${width}px`}}\n                                            src={item}\n                                            alt=\"\"\n                                            ></img>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                        <div \n                            className=\"change-product left\"\n                            onClick={()=> {\n                                if (imgIndex > 0) setImgIndex(imgIndex - 1)\n                            }}\n                            >\n                            <FontAwesomeIcon icon={faChevronLeft}></FontAwesomeIcon>\n                        </div>\n                        <div className=\"change-product right\"\n                            onClick={()=> {\n                                if (imgIndex < productImg.length) setImgIndex(imgIndex + 1)\n                            }}\n                            >\n                            <FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"product-info-detail\">\n                    <div className=\"product-info-title\">\n                        {props.productName}\n                    </div>\n                    <div className=\"product-info-des\">\n                        {props.productDes}\n                    </div>\n                    <div \n                        className=\"product-info-vote\"\n                        onClick={props.scrollOnLick}\n                        >\n                        <ReactStars {...ratingStar} />\n                        <p>\n                            ({ratingList.length} customer reviews)\n                        </p>\n                    </div>\n                    <div className=\"product-info-price\">\n                        {props.productPrice}\n                    </div>\n                    <div className=\"product-info-cart flex\">\n                        <div className=\"count-cart noselect\">\n                            <div className=\"count-cart-item left flex-center\"\n                                onClick={() => { \n                                    if (countCart > 1) setCountCart(countCart-1) \n                                }}\n                                >\n                                <FontAwesomeIcon icon={faMinus}/>\n                            </div> \n                            <div className=\"count-cart-item text flex-center\">\n                                <form>\n                                    <input \n                                        type=\"text\" \n                                        value={countCart}\n                                        onChange={e => setCountCart(Number(e.target.value))}\n                                    />\n                                </form>\n                            </div>\n                            <div \n                                className=\"count-cart-item right flex-center\"\n                                onClick={() => { setCountCart(countCart+1) }}\n                                >\n                                <FontAwesomeIcon icon={faPlus}/>\n                            </div>\n                        </div>\n                        <div className=\"product-info-addtocart flex-center btn\">\n                            <FontAwesomeIcon icon={faCartPlus}/>\n                            <p>Add to cart</p>\n                        </div>\n                        <div \n                            className=\"product-info-wishlist flex-center\">\n                            <FontAwesomeIcon icon={faHeart}></FontAwesomeIcon>\n                        </div>\n                    </div>\n                    <div className=\"product-info-line\"></div>\n                    <div className=\"product-info-cate flex\">\n                        <p>Category:</p>\n                        <p>{props.productCate}</p>\n                    </div>\n                    <div className=\"product-info-line\"></div>\n                </div>\n            </div> */}\n            <div className=\"product-info-line\"></div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}