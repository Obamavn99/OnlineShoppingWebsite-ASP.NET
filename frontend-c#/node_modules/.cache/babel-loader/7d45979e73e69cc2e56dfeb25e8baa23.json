{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/src/components/chat.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport ReactSpeedometer from \"react-d3-speedometer\";\n\nclass chat extends Component {\n  constructor() {\n    super();\n    this.state = {\n      response: 0,\n      endpoint: \"http://127.0.0.1:4001\"\n    };\n  }\n\n  componentDidMount() {\n    const {\n      endpoint\n    } = this.state; //Very simply connect to the socket\n\n    const socket = socketIOClient(endpoint); //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n\n    socket.on(\"outgoing data\", data => this.setState({\n      response: data.num\n    }));\n  }\n\n  render() {\n    const {\n      response\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactSpeedometer, {\n      maxValue: 140,\n      value: response,\n      needleColor: \"black\",\n      startColor: \"orange\",\n      segments: 10,\n      endColor: \"red\",\n      needleTransition: \"easeElastic\",\n      ringWidth: 30,\n      textColor: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default chat;","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/src/components/chat.js"],"names":["React","Component","socketIOClient","ReactSpeedometer","chat","constructor","state","response","endpoint","componentDidMount","socket","on","data","setState","num","render","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AACzBI,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,CADD;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACD,MAAAA;AAAD,QAAa,KAAKF,KAAxB,CADgB,CAEhB;;AACA,UAAMI,MAAM,GAAGR,cAAc,CAACM,QAAD,CAA7B,CAHgB,CAIhB;;AACAE,IAAAA,MAAM,CAACC,EAAP,CAAU,eAAV,EAA2BC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACN,MAAAA,QAAQ,EAAEK,IAAI,CAACE;AAAhB,KAAd,CAAnC;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACR,MAAAA;AAAD,QAAa,KAAKD,KAAxB;AACA,wBACI;AAAK,MAAA,KAAK,EAAE;AAACU,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,QAAQ,EAAE,GADd;AAEI,MAAA,KAAK,EAAET,QAFX;AAGI,MAAA,WAAW,EAAC,OAHhB;AAII,MAAA,UAAU,EAAC,QAJf;AAKI,MAAA,QAAQ,EAAE,EALd;AAMI,MAAA,QAAQ,EAAC,KANb;AAOI,MAAA,gBAAgB,EAAE,aAPtB;AAQI,MAAA,SAAS,EAAE,EARf;AASI,MAAA,SAAS,EAAE,KATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAeH;;AAlCwB;;AAqC7B,eAAeH,IAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport socketIOClient from \"socket.io-client\"\nimport ReactSpeedometer from \"react-d3-speedometer\"\n\nclass chat extends Component {\n    constructor() {\n        super();\n        this.state = {\n            response: 0,\n            endpoint: \"http://127.0.0.1:4001\"\n        };\n    }\n\n    componentDidMount() {\n        const {endpoint} = this.state;\n        //Very simply connect to the socket\n        const socket = socketIOClient(endpoint);\n        //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n        socket.on(\"outgoing data\", data => this.setState({response: data.num}));\n    }\n\n    render() {\n        const {response} = this.state;\n        return (\n            <div style={{textAlign: \"center\"}}>\n                <ReactSpeedometer\n                    maxValue={140}\n                    value={response}\n                    needleColor=\"black\"\n                    startColor=\"orange\"\n                    segments={10}\n                    endColor=\"red\"\n                    needleTransition={\"easeElastic\"}\n                    ringWidth={30}\n                    textColor={\"red\"}\n                />\n            </div>\n        )\n    }\n}\n\nexport default chat;"]},"metadata":{},"sourceType":"module"}