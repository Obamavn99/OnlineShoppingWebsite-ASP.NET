{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/OpenChatBtn.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../Styles/Chat.css';\nimport '../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComment, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport socketIOClient from \"socket.io-client\";\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nconst ENDPOINT = \"http://localhost:4000\";\n\nfunction OpenChatBtn(props) {\n  const messageRef = useRef();\n  const inputRef = useRef();\n  const [openChat, setOpenChat] = useState(false);\n  const [onHover, setOnHover] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [openChatContent, setOpenChatContent] = useState(false);\n  const [clientChat, setClientChat] = useState([]);\n  const socket = socketIOClient(ENDPOINT);\n  const [chatList, setChatList] = useState([]);\n  useEffect(() => {\n    if (!sessionStorage.getItem('chat-id')) {\n      sessionStorage.setItem('chat-id', Math.floor(Math.random() * 190000000) + 100000000);\n    }\n\n    axios.get(`http://localhost:4000/chat/${sessionStorage.getItem('chat-id')}`).then(res => {\n      setClientChat(res.data);\n    });\n    socket.emit('join', {\n      sessionId: sessionStorage.getItem('chat-id'),\n      isAdmin: false\n    });\n    socket.on('sendFirstInfo', data => {\n      if (data.length > 0) setChatList(data[0].chatContent);\n    });\n    socket.on('thread', data => {\n      setChatList(data.chatContent);\n    });\n    socket.on(\"admin-msg\", function (data) {\n      alert(\"checked\");\n      setChatList(chatList => [...chatList, data]);\n      setTimeout(() => {\n        messageRef.current.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }, 100);\n    });\n  }, []);\n\n  const handleChange = event => {\n    setInputValue({ ...inputValue,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const location = props.history.location.pathname;\n\n  const sendFirstChatOnSubmit = event => {\n    event.preventDefault();\n    setOpenChatContent(true);\n    socket.emit('firstMessage', {\n      sessionId: sessionStorage.getItem('chat-id'),\n      chatName: inputValue.chatName,\n      chatEmail: inputValue.chatEmail,\n      chatContent: [{\n        text: inputValue.chatContent,\n        time: new Date()\n      }]\n    });\n    setChatList(chatList => [...chatList, {\n      text: inputValue.chatContent,\n      time: new Date()\n    }]);\n  };\n\n  const sendChatOnSubmit = event => {\n    event.preventDefault();\n    socket.emit('messageSend', {\n      sessionId: sessionStorage.getItem('chat-id'),\n      text: inputValue.messageSend,\n      time: new Date()\n    });\n    setChatList(chatList => [...chatList, {\n      text: inputValue.messageSend,\n      time: new Date()\n    }]);\n    setTimeout(() => {\n      messageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }, 100);\n    inputRef.current.value = \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: location === \"/admin\" || location === \"/admin/dashboard\" ? \"chat-btn displayNone\" : \"chat-btn\",\n    onMouseEnter: () => {\n      setOnHover(true);\n    },\n    onMouseLeave: () => {\n      if (openChat) {\n        setOnHover(true);\n      } else setOnHover(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: onHover ? \"chat-btn-container chat-btn-hover\" : \"chat-btn-container\",\n    onClick: () => {\n      if (messageRef.current) messageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n\n      if (openChat) {\n        setOpenChat(false);\n        setOnHover(false);\n      } else {\n        setOpenChat(true);\n        setOnHover(true);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Live Chat\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: openChat ? \"chat-box hide_chat_box\" : \"chat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-box-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Live Chat\"), openChatContent === false && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-box-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendFirstChatOnSubmit,\n    className: openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, \"Introduce yourself *\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"chatName\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Name\",\n    className: \"intro\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"chatEmail\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Email\",\n    className: \"intro\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, \"Message *\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"chatContent\",\n    type: \"textarea\",\n    onChange: handleChange,\n    className: \"message\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn chat-box-body-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, \"Chat\"))), chatList.length > 0 && openChatContent && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-box-body no-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendChatOnSubmit,\n    className: openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-col chat-box-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, chatList.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      ref: messageRef,\n      className: \"chat-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 45\n      }\n    }, item.fromAdmin !== true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clienttext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 57\n      }\n    }, item.text)), item.fromAdmin === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admintext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 57\n      }\n    }, item.text)));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex chat-box-send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"messageSend\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Make a message\",\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"flex-center sendchat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPaperPlane,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 37\n    }\n  })))))));\n}\n\nexport default withRouter(OpenChatBtn);","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/OpenChatBtn.js"],"names":["React","useEffect","useRef","useState","FontAwesomeIcon","faComment","faPaperPlane","socketIOClient","withRouter","axios","ENDPOINT","OpenChatBtn","props","messageRef","inputRef","openChat","setOpenChat","onHover","setOnHover","inputValue","setInputValue","openChatContent","setOpenChatContent","clientChat","setClientChat","socket","chatList","setChatList","sessionStorage","getItem","setItem","Math","floor","random","get","then","res","data","emit","sessionId","isAdmin","on","length","chatContent","alert","setTimeout","current","scrollIntoView","behavior","handleChange","event","target","name","value","location","history","pathname","sendFirstChatOnSubmit","preventDefault","chatName","chatEmail","text","time","Date","sendChatOnSubmit","messageSend","map","item","index","fromAdmin"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport '../Styles/Chat.css'\nimport '../App.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment, faPaperPlane } from '@fortawesome/free-solid-svg-icons'\nimport socketIOClient from \"socket.io-client\"\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nconst ENDPOINT = \"http://localhost:4000\";\n\nfunction OpenChatBtn(props) {\n    const messageRef = useRef();\n    const inputRef = useRef();\n    const [openChat, setOpenChat] = useState(false)\n    const [onHover, setOnHover] = useState(false)\n    const [inputValue, setInputValue] = useState(\"\")\n    const [openChatContent, setOpenChatContent] = useState(false)\n\n    const [clientChat, setClientChat] = useState([])\n\n    const socket = socketIOClient(ENDPOINT)\n    const [chatList, setChatList] = useState([])\n\n    useEffect(() => {\n        if (!sessionStorage.getItem('chat-id')) {\n            sessionStorage.setItem('chat-id', Math.floor(Math.random() * 190000000) + 100000000);\n        }\n        axios.get(`http://localhost:4000/chat/${sessionStorage.getItem('chat-id')}`)\n            .then(res => {\n                setClientChat(res.data)\n            }\n        )\n        socket.emit('join', {\n            sessionId: sessionStorage.getItem('chat-id'),\n            isAdmin: false\n        })\n        socket.on('sendFirstInfo', (data)=> {\n            if (data.length > 0) setChatList(data[0].chatContent)\n        })\n        socket.on('thread', (data)=> {\n            setChatList(data.chatContent)\n        })\n        socket.on(\"admin-msg\", function(data) {\n            alert(\"checked\")\n            setChatList(chatList=> [...chatList, data]);\n            setTimeout(()=>{\n                messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n            }, 100)\n        })\n    }, [])\n\n    const handleChange = (event) => {\n        setInputValue({...inputValue , [event.target.name]: event.target.value})\n    }\n    const location = props.history.location.pathname;\n\n    const sendFirstChatOnSubmit = (event) => {\n        event.preventDefault()\n        setOpenChatContent(true)\n        socket.emit('firstMessage', {\n            sessionId: sessionStorage.getItem('chat-id'),\n            chatName: inputValue.chatName,\n            chatEmail: inputValue.chatEmail,\n            chatContent: [\n                {\n                    text: inputValue.chatContent,\n                    time: new Date()\n                }\n            ]\n        })\n        setChatList(chatList=> [...chatList, {\n            text: inputValue.chatContent,\n            time: new Date()\n        }])\n    }\n\n    const sendChatOnSubmit = (event) => {\n        event.preventDefault();\n        socket.emit('messageSend', {\n            sessionId: sessionStorage.getItem('chat-id'),\n            text: inputValue.messageSend,\n            time: new Date(),\n        });\n        setChatList(chatList=> [...chatList, {text: inputValue.messageSend, time: new Date()}])\n        setTimeout(()=>{\n            messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n        }, 100)\n        inputRef.current.value = \"\";\n    }\n\n    return (\n        <div \n            className={location === \"/admin\" || location === \"/admin/dashboard\" ? \"chat-btn displayNone\" : \"chat-btn\"}\n            onMouseEnter={()=> { setOnHover(true) }}\n            onMouseLeave={()=> { if (openChat) { setOnHover(true) } else setOnHover(false) }}\n        >\n            <div \n                className={onHover ? \"chat-btn-container chat-btn-hover\" : \"chat-btn-container\"}\n                onClick={()=>{\n                    if (messageRef.current) messageRef.current.scrollIntoView({ behavior: \"smooth\" });\n                    if (openChat) { \n                        setOpenChat(false); \n                        setOnHover(false) \n                    } else { \n                        setOpenChat(true); \n                        setOnHover(true) \n                    }\n                }}\n                >\n                <FontAwesomeIcon icon={faComment}/>\n                <p>Live Chat</p>\n            </div>\n            <div className={openChat ? \"chat-box hide_chat_box\" : \"chat-box\"}>\n                <div className=\"chat-box-header\">\n                    Live Chat\n                </div>\n                { openChatContent === false &&  \n                    <div className=\"chat-box-body\">\n                        <form onSubmit={sendFirstChatOnSubmit} className={openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\"}>\n                            <label>Introduce yourself *</label>\n                            <input name=\"chatName\" type=\"text\" onChange={handleChange} placeholder=\"Name\" className=\"intro\" required></input>\n                            <input name=\"chatEmail\" type=\"text\" onChange={handleChange} placeholder=\"Email\" className=\"intro\" required></input>\n                            <label>Message *</label>\n                            <textarea name=\"chatContent\" type=\"textarea\" onChange={handleChange} className=\"message\" required></textarea>\n                            <button className=\"btn chat-box-body-btn\">Chat</button>\n                        </form>\n                    </div>\n                }\n                { (chatList.length > 0 && openChatContent) && \n                    <div className=\"chat-box-body no-p\">\n                        <form onSubmit={sendChatOnSubmit} className={openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\"}>\n                            {/* <div className=\"chat-box-user flex\" style={{background: '#ddd', width:'100%'}}>\n                                <label>{chatData.chatName}</label>\n                                <label>{chatData.chatTime}</label>\n                                <label>{chatData.chatEmail}</label>\n                            </div>   */}\n                            <div className=\"flex-col chat-box-list\">\n                                {\n                                    chatList.map((item, index) => {\n                                        return (\n                                            <div key={index} ref={messageRef} className=\"chat-list\">\n                                                {\n                                                    item.fromAdmin !== true && \n                                                    <div className=\"clienttext\">\n                                                        <p>{item.text}</p>\n                                                    </div>\n                                                }\n                                                {\n                                                    item.fromAdmin === true && \n                                                    <div className=\"admintext\">\n                                                        <p>{item.text}</p>\n                                                    </div>\n                                                }\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>  \n                            <div className=\"flex chat-box-send\">\n                                <input name=\"messageSend\" type=\"text\" onChange={handleChange} placeholder=\"Make a message\" ref={inputRef}></input>\n                                <button className=\"flex-center sendchat\">\n                                    <FontAwesomeIcon icon={faPaperPlane}/>\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(OpenChatBtn);"]},"metadata":{},"sourceType":"module"}