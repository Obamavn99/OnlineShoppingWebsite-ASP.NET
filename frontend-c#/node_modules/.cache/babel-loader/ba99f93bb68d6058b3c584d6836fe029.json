{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/Header/Account.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport '../../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { UserContext } from '../../contexts/User';\nimport AccountInfo from './AccountInfo';\n\nfunction Account(props) {\n  const {\n    setUserInfoFunc\n  } = useContext(UserContext);\n  const [check, setCheck] = useState(false);\n  const [tabID, setTabID] = useState(0);\n  const [arrSuccess, setArrSuccess] = useState([]);\n  const [arrErr, setArrErr] = useState([]);\n  const [user, setUser] = useState({});\n  const [login, setLogin] = useState(false);\n\n  const handleOnChange = event => {\n    setUser({ ...user,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n\n    if (tabID === 0) {\n      axios.post('http://pe.heromc.net:4000/users/login', {\n        loginEmail: user.loginEmail,\n        loginPassword: user.loginPassword\n      }).then(res => {\n        setArrSuccess(arrSuccess => [...arrSuccess, \"Login success!\"]);\n        setTimeout(() => {\n          window.location.reload(false);\n          document.body.style.overflow = 'unset';\n        }, 1000);\n        localStorage.setItem('token', res.data.token);\n        localStorage.setItem('user-id', res.data.user._id);\n      }).catch(err => {\n        setArrErr(arrErr => [...arrErr, err.response.data]);\n      });\n    } else {\n      axios.post('http://pe.heromc.net:4000/users/register', {\n        userName: user.registerName,\n        userEmail: user.registerEmail,\n        userPassword: user.registerPassword,\n        userRole: \"user\"\n      }).then(res => {\n        setArrSuccess(arrSuccess => [...arrSuccess, res.data]);\n        setTimeout(() => {\n          window.location.reload(false);\n          document.body.style.overflow = 'unset';\n        }, 1000);\n      }).catch(err => {\n        setArrErr(arrErr => [...arrErr, err.response.data]);\n      });\n    }\n  };\n\n  useEffect(() => {\n    axios.get(`http://pe.heromc.net:4000/users/${localStorage.getItem('user-id')}`, {\n      headers: {\n        \"authorization\": `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => {\n      setUserInfoFunc(res.data.user);\n      setLogin(true);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  let uniqueErr,\n      uniqueSuccess = [];\n\n  if (arrErr.length > 0) {\n    uniqueErr = arrErr.filter(function (item, pos) {\n      return arrErr.indexOf(item) === pos;\n    });\n  }\n\n  if (arrSuccess.length > 0) {\n    uniqueSuccess = arrSuccess.filter(function (item, pos) {\n      return arrSuccess.indexOf(item) === pos;\n    });\n  }\n\n  console.log(\"asdasd\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.accountOpen === false ? 'Account displayNone' : 'Account',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default withRouter(Account);","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/Header/Account.js"],"names":["React","useContext","useEffect","useState","FontAwesomeIcon","faTimes","faCheck","axios","withRouter","UserContext","AccountInfo","Account","props","setUserInfoFunc","check","setCheck","tabID","setTabID","arrSuccess","setArrSuccess","arrErr","setArrErr","user","setUser","login","setLogin","handleOnChange","event","target","name","value","handleOnSubmit","preventDefault","post","loginEmail","loginPassword","then","res","setTimeout","window","location","reload","document","body","style","overflow","localStorage","setItem","data","token","_id","catch","err","response","userName","registerName","userEmail","registerEmail","userPassword","registerPassword","userRole","get","getItem","headers","console","log","uniqueErr","uniqueSuccess","length","filter","item","pos","indexOf","accountOpen"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport '../../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes , faCheck } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios'\nimport {\n    withRouter\n} from 'react-router-dom'\n\nimport { UserContext } from '../../contexts/User'\nimport AccountInfo from './AccountInfo'\n\nfunction Account(props) {\n    const { \n        setUserInfoFunc \n    } = useContext(UserContext);\n\n    const [check, setCheck] = useState(false);\n    const [tabID, setTabID] = useState(0);\n    const [arrSuccess, setArrSuccess] = useState([]);\n    const [arrErr, setArrErr] = useState([]);\n    const [user, setUser] = useState({});\n    const [login, setLogin] = useState(false);\n\n    const handleOnChange = (event) => {\n        setUser({...user , [event.target.name]: event.target.value})\n    }\n\n    const handleOnSubmit = (event) => {\n        event.preventDefault();\n        if (tabID === 0) {\n            axios.post('http://pe.heromc.net:4000/users/login', {\n                loginEmail: user.loginEmail,\n                loginPassword: user.loginPassword\n            }) \n            .then(res => {\n                setArrSuccess(arrSuccess=>[...arrSuccess, \"Login success!\"])\n                setTimeout(()=> {\n                    window.location.reload(false);\n                    document.body.style.overflow = 'unset';\n                }, 1000)\n                localStorage.setItem('token', res.data.token);\n                localStorage.setItem('user-id', res.data.user._id);\n            })\n            .catch(err => {\n                setArrErr(arrErr=>[...arrErr, err.response.data]);\n            })\n        } else {\n            axios.post('http://pe.heromc.net:4000/users/register', {\n                userName: user.registerName,\n                userEmail: user.registerEmail,\n                userPassword: user.registerPassword,\n                userRole: \"user\"\n            })\n            .then(res => {\n                setArrSuccess(arrSuccess=>[...arrSuccess, res.data])\n                setTimeout(()=> {\n                    window.location.reload(false);\n                    document.body.style.overflow = 'unset';\n                }, 1000)\n            })\n            .catch(err => {\n                setArrErr(arrErr=>[...arrErr, err.response.data]);\n            })\n        }\n    }\n\n    useEffect(()=> {\n        axios.get(`http://pe.heromc.net:4000/users/${localStorage.getItem('user-id')}`, { \n            headers: {\"authorization\" : `Bearer ${localStorage.getItem('token')}`}\n        })\n        .then(res => {\n            setUserInfoFunc(res.data.user);\n            setLogin(true);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    },[])\n\n    let uniqueErr, uniqueSuccess = [];\n    if (arrErr.length > 0) {\n        uniqueErr = arrErr.filter(function(item, pos) {\n            return arrErr.indexOf(item) === pos;\n        })\n    }\n    if (arrSuccess.length > 0) {\n        uniqueSuccess = arrSuccess.filter(function(item, pos) {\n            return arrSuccess.indexOf(item) === pos;\n        })\n    }\n\n    console.log(\"asdasd\")\n\n    return(\n        <div className={props.accountOpen === false ? 'Account displayNone' : 'Account'}>\n            {/* <div className=\"account-container\">\n                <div className=\"search-header flex\">\n                    <div className=\"search-title\">My Account</div>\n                    <div\n                        className=\"search-close\"\n                        onClick={props.clickToClose}\n                        >\n                        <FontAwesomeIcon \n                            icon={faTimes}\n                            className=\"icon\"\n                            />\n                    </div>\n                </div >\n                \n                {login === true && \n                    <AccountInfo/>\n                }\n                \n                {login === false && \n                <div className={props.accountOpen === false ? '' : 'fadeIn'}>\n                    <div \n                        className='search-tab login-tab flex'>\n                        <div \n                            className={tabID === 0 ? 'search-tab-cate search-tab-active' : 'search-tab-cate'}\n                            onClick={() => {setTabID(0);setArrErr([]);setArrSuccess([])}}\n                            >\n                            Login\n                        </div>\n                        <div \n                            className={tabID === 1 ? 'search-tab-cate search-tab-active' : 'search-tab-cate'}\n                            onClick={() => {setTabID(1);setArrErr([]);setArrSuccess([])}}\n                            >\n                            Register\n                        </div>\n                    </div>\n                    <div className=\"login-err flex-center flex-col\">\n                        { uniqueErr && \n                            <div>\n                                {\n                                    uniqueErr.map((item, index) => {\n                                        return(\n                                            <div key={index}>\n                                                <FontAwesomeIcon icon={faTimes} style={{ marginRight: '10px', color: 'red'}}/>\n                                                {item}\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                        }\n                        { uniqueSuccess && \n                            <div >\n                                {\n                                    uniqueSuccess.map((item, index) => {\n                                        return(\n                                            <div key={index} className=\"login-success\">\n                                                <FontAwesomeIcon icon={faCheck} style={{ marginRight: '10px', color: 'green'}}/>\n                                                {item}\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                        }\n                    </div>\n                    { tabID === 0 &&\n                        <div className=\"search-form login-form fadeToRight\">\n                            <form className=\"flex-col\" onSubmit={handleOnSubmit}>\n                                <input type=\"email\" placeholder=\"Email\" name=\"loginEmail\" onChange={handleOnChange}/>\n                                <input type=\"password\" placeholder=\"Password\" name=\"loginPassword\" onChange={handleOnChange}/>\n                                <div className=\"remember-login flex noselect\" \n                                    onClick={() => { \n                                        if (check) {\n                                            setCheck(false)\n                                        } else { \n                                            setCheck(true) \n                                        }\n                                    }}\n                                >\n                                    <div className=\"check-box\"></div>\n                                    {check && \n                                        <div className=\"check-box-active flex-center\" onClick={()=> setCheck(false)}>\n                                            <FontAwesomeIcon className=\"check-box-active\" icon={faCheck}></FontAwesomeIcon>\n                                        </div>\n                                    }\n                                    <p>Remember me</p>\n                                </div>\n                                <button type=\"submit\" onClick={handleOnSubmit} className=\"btn\">LOGIN</button>\n                                <label>LOST YOUR PASSWORD?</label>\n                            </form>\n                        </div>\n                    }\n                    { tabID === 1 && \n                        <div className=\"search-form login-form fadeToLeft\">\n                            <form className=\"flex-col\" onSubmit={handleOnSubmit}>\n                                <input type=\"text\" placeholder=\"Name\" name=\"registerName\" onChange={handleOnChange}/>\n                                <input type=\"email\" placeholder=\"Email\" name=\"registerEmail\" onChange={handleOnChange}/>\n                                <input type=\"password\" placeholder=\"Password\" name=\"registerPassword\" onChange={handleOnChange}/>\n                                <button className=\"btn\">REGISTER</button>\n                            </form>\n                        </div>\n                    }\n                </div>\n                }\n            </div> */}\n        </div>\n    )\n}\n\nexport default withRouter(Account);"]},"metadata":{},"sourceType":"module"}