{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/Header/Account.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport '../../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { UserContext } from '../../contexts/User';\nimport AccountInfo from './AccountInfo';\n\nfunction Account(props) {\n  // const { \n  //     setUserInfoFunc \n  // } = useContext(UserContext);\n  // const [check, setCheck] = useState(false);\n  // const [tabID, setTabID] = useState(0);\n  // const [arrSuccess, setArrSuccess] = useState([]);\n  // const [arrErr, setArrErr] = useState([]);\n  // const [user, setUser] = useState({});\n  // const [login, setLogin] = useState(false);\n  // const handleOnChange = (event) => {\n  //     setUser({...user , [event.target.name]: event.target.value})\n  // }\n  // const handleOnSubmit = (event) => {\n  //     event.preventDefault();\n  //     if (tabID === 0) {\n  //         axios.post('http://pe.heromc.net:4000/users/login', {\n  //             loginEmail: user.loginEmail,\n  //             loginPassword: user.loginPassword\n  //         }) \n  //         .then(res => {\n  //             setArrSuccess(arrSuccess=>[...arrSuccess, \"Login success!\"])\n  //             setTimeout(()=> {\n  //                 window.location.reload(false);\n  //                 document.body.style.overflow = 'unset';\n  //             }, 1000)\n  //             localStorage.setItem('token', res.data.token);\n  //             localStorage.setItem('user-id', res.data.user._id);\n  //         })\n  //         .catch(err => {\n  //             setArrErr(arrErr=>[...arrErr, err.response.data]);\n  //         })\n  //     } else {\n  //         axios.post('http://pe.heromc.net:4000/users/register', {\n  //             userName: user.registerName,\n  //             userEmail: user.registerEmail,\n  //             userPassword: user.registerPassword,\n  //             userRole: \"user\"\n  //         })\n  //         .then(res => {\n  //             setArrSuccess(arrSuccess=>[...arrSuccess, res.data])\n  //             setTimeout(()=> {\n  //                 window.location.reload(false);\n  //                 document.body.style.overflow = 'unset';\n  //             }, 1000)\n  //         })\n  //         .catch(err => {\n  //             setArrErr(arrErr=>[...arrErr, err.response.data]);\n  //         })\n  //     }\n  // }\n  // useEffect(()=> {\n  //     axios.get(`http://pe.heromc.net:4000/users/${localStorage.getItem('user-id')}`, { \n  //         headers: {\"authorization\" : `Bearer ${localStorage.getItem('token')}`}\n  //     })\n  //     .then(res => {\n  //         setUserInfoFunc(res.data.user);\n  //         setLogin(true);\n  //     })\n  //     .catch(err => {\n  //         console.log(err);\n  //     })\n  // },[])\n  let uniqueErr,\n      uniqueSuccess = [];\n\n  if (arrErr.length > 0) {\n    uniqueErr = arrErr.filter(function (item, pos) {\n      return arrErr.indexOf(item) === pos;\n    });\n  }\n\n  if (arrSuccess.length > 0) {\n    uniqueSuccess = arrSuccess.filter(function (item, pos) {\n      return arrSuccess.indexOf(item) === pos;\n    });\n  }\n\n  console.log(\"asdasd\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.accountOpen === false ? 'Account displayNone' : 'Account',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default withRouter(Account);","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/Header/Account.js"],"names":["React","useContext","useEffect","useState","FontAwesomeIcon","faTimes","faCheck","axios","withRouter","UserContext","AccountInfo","Account","props","uniqueErr","uniqueSuccess","arrErr","length","filter","item","pos","indexOf","arrSuccess","console","log","accountOpen"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,eAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,EAAmBC,OAAnB,QAAkC,mCAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,UADJ,QAEO,kBAFP;AAIA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAIC,SAAJ;AAAA,MAAeC,aAAa,GAAG,EAA/B;;AACA,MAAIC,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;AACnBH,IAAAA,SAAS,GAAGE,MAAM,CAACE,MAAP,CAAc,UAASC,IAAT,EAAeC,GAAf,EAAoB;AAC1C,aAAOJ,MAAM,CAACK,OAAP,CAAeF,IAAf,MAAyBC,GAAhC;AACH,KAFW,CAAZ;AAGH;;AACD,MAAIE,UAAU,CAACL,MAAX,GAAoB,CAAxB,EAA2B;AACvBF,IAAAA,aAAa,GAAGO,UAAU,CAACJ,MAAX,CAAkB,UAASC,IAAT,EAAeC,GAAf,EAAoB;AAClD,aAAOE,UAAU,CAACD,OAAX,CAAmBF,IAAnB,MAA6BC,GAApC;AACH,KAFe,CAAhB;AAGH;;AAEDG,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEX,KAAK,CAACY,WAAN,KAAsB,KAAtB,GAA8B,qBAA9B,GAAsD,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AA6GH;;AAED,eAAehB,UAAU,CAACG,OAAD,CAAzB","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport '../../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes , faCheck } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios'\nimport {\n    withRouter\n} from 'react-router-dom'\n\nimport { UserContext } from '../../contexts/User'\nimport AccountInfo from './AccountInfo'\n\nfunction Account(props) {\n    // const { \n    //     setUserInfoFunc \n    // } = useContext(UserContext);\n\n    // const [check, setCheck] = useState(false);\n    // const [tabID, setTabID] = useState(0);\n    // const [arrSuccess, setArrSuccess] = useState([]);\n    // const [arrErr, setArrErr] = useState([]);\n    // const [user, setUser] = useState({});\n    // const [login, setLogin] = useState(false);\n\n    // const handleOnChange = (event) => {\n    //     setUser({...user , [event.target.name]: event.target.value})\n    // }\n\n    // const handleOnSubmit = (event) => {\n    //     event.preventDefault();\n    //     if (tabID === 0) {\n    //         axios.post('http://pe.heromc.net:4000/users/login', {\n    //             loginEmail: user.loginEmail,\n    //             loginPassword: user.loginPassword\n    //         }) \n    //         .then(res => {\n    //             setArrSuccess(arrSuccess=>[...arrSuccess, \"Login success!\"])\n    //             setTimeout(()=> {\n    //                 window.location.reload(false);\n    //                 document.body.style.overflow = 'unset';\n    //             }, 1000)\n    //             localStorage.setItem('token', res.data.token);\n    //             localStorage.setItem('user-id', res.data.user._id);\n    //         })\n    //         .catch(err => {\n    //             setArrErr(arrErr=>[...arrErr, err.response.data]);\n    //         })\n    //     } else {\n    //         axios.post('http://pe.heromc.net:4000/users/register', {\n    //             userName: user.registerName,\n    //             userEmail: user.registerEmail,\n    //             userPassword: user.registerPassword,\n    //             userRole: \"user\"\n    //         })\n    //         .then(res => {\n    //             setArrSuccess(arrSuccess=>[...arrSuccess, res.data])\n    //             setTimeout(()=> {\n    //                 window.location.reload(false);\n    //                 document.body.style.overflow = 'unset';\n    //             }, 1000)\n    //         })\n    //         .catch(err => {\n    //             setArrErr(arrErr=>[...arrErr, err.response.data]);\n    //         })\n    //     }\n    // }\n\n    // useEffect(()=> {\n    //     axios.get(`http://pe.heromc.net:4000/users/${localStorage.getItem('user-id')}`, { \n    //         headers: {\"authorization\" : `Bearer ${localStorage.getItem('token')}`}\n    //     })\n    //     .then(res => {\n    //         setUserInfoFunc(res.data.user);\n    //         setLogin(true);\n    //     })\n    //     .catch(err => {\n    //         console.log(err);\n    //     })\n    // },[])\n\n    let uniqueErr, uniqueSuccess = [];\n    if (arrErr.length > 0) {\n        uniqueErr = arrErr.filter(function(item, pos) {\n            return arrErr.indexOf(item) === pos;\n        })\n    }\n    if (arrSuccess.length > 0) {\n        uniqueSuccess = arrSuccess.filter(function(item, pos) {\n            return arrSuccess.indexOf(item) === pos;\n        })\n    }\n\n    console.log(\"asdasd\")\n\n    return(\n        <div className={props.accountOpen === false ? 'Account displayNone' : 'Account'}>\n            {/* <div className=\"account-container\">\n                <div className=\"search-header flex\">\n                    <div className=\"search-title\">My Account</div>\n                    <div\n                        className=\"search-close\"\n                        onClick={props.clickToClose}\n                        >\n                        <FontAwesomeIcon \n                            icon={faTimes}\n                            className=\"icon\"\n                            />\n                    </div>\n                </div >\n                \n                {login === true && \n                    <AccountInfo/>\n                }\n                \n                {login === false && \n                <div className={props.accountOpen === false ? '' : 'fadeIn'}>\n                    <div \n                        className='search-tab login-tab flex'>\n                        <div \n                            className={tabID === 0 ? 'search-tab-cate search-tab-active' : 'search-tab-cate'}\n                            onClick={() => {setTabID(0);setArrErr([]);setArrSuccess([])}}\n                            >\n                            Login\n                        </div>\n                        <div \n                            className={tabID === 1 ? 'search-tab-cate search-tab-active' : 'search-tab-cate'}\n                            onClick={() => {setTabID(1);setArrErr([]);setArrSuccess([])}}\n                            >\n                            Register\n                        </div>\n                    </div>\n                    <div className=\"login-err flex-center flex-col\">\n                        { uniqueErr && \n                            <div>\n                                {\n                                    uniqueErr.map((item, index) => {\n                                        return(\n                                            <div key={index}>\n                                                <FontAwesomeIcon icon={faTimes} style={{ marginRight: '10px', color: 'red'}}/>\n                                                {item}\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                        }\n                        { uniqueSuccess && \n                            <div >\n                                {\n                                    uniqueSuccess.map((item, index) => {\n                                        return(\n                                            <div key={index} className=\"login-success\">\n                                                <FontAwesomeIcon icon={faCheck} style={{ marginRight: '10px', color: 'green'}}/>\n                                                {item}\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                        }\n                    </div>\n                    { tabID === 0 &&\n                        <div className=\"search-form login-form fadeToRight\">\n                            <form className=\"flex-col\" onSubmit={handleOnSubmit}>\n                                <input type=\"email\" placeholder=\"Email\" name=\"loginEmail\" onChange={handleOnChange}/>\n                                <input type=\"password\" placeholder=\"Password\" name=\"loginPassword\" onChange={handleOnChange}/>\n                                <div className=\"remember-login flex noselect\" \n                                    onClick={() => { \n                                        if (check) {\n                                            setCheck(false)\n                                        } else { \n                                            setCheck(true) \n                                        }\n                                    }}\n                                >\n                                    <div className=\"check-box\"></div>\n                                    {check && \n                                        <div className=\"check-box-active flex-center\" onClick={()=> setCheck(false)}>\n                                            <FontAwesomeIcon className=\"check-box-active\" icon={faCheck}></FontAwesomeIcon>\n                                        </div>\n                                    }\n                                    <p>Remember me</p>\n                                </div>\n                                <button type=\"submit\" onClick={handleOnSubmit} className=\"btn\">LOGIN</button>\n                                <label>LOST YOUR PASSWORD?</label>\n                            </form>\n                        </div>\n                    }\n                    { tabID === 1 && \n                        <div className=\"search-form login-form fadeToLeft\">\n                            <form className=\"flex-col\" onSubmit={handleOnSubmit}>\n                                <input type=\"text\" placeholder=\"Name\" name=\"registerName\" onChange={handleOnChange}/>\n                                <input type=\"email\" placeholder=\"Email\" name=\"registerEmail\" onChange={handleOnChange}/>\n                                <input type=\"password\" placeholder=\"Password\" name=\"registerPassword\" onChange={handleOnChange}/>\n                                <button className=\"btn\">REGISTER</button>\n                            </form>\n                        </div>\n                    }\n                </div>\n                }\n            </div> */}\n        </div>\n    )\n}\n\nexport default withRouter(Account);"]},"metadata":{},"sourceType":"module"}