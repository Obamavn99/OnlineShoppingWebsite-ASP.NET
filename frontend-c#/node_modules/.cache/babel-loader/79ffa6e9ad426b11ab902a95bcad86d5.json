{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Collection/DashboardCollectionCreate.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nexport default function DashboardCollectionCreate(props) {\n  const createForm = useRef();\n  const [collectionName, setCollectionName] = useState(\"\");\n  const [product, setProduct] = useState([]);\n  const [productList, setProductList] = useState([]);\n\n  const onSubmit = event => {// event.preventDefault()\n    // var listOrder = []\n    // var total = 0;\n    // for(let i in productList) {\n    //     const data = {\n    //         id: productList[i]._id,\n    //         amount: productList[i].count,\n    //     }\n    //     total += productList[i].productPrice * productList[i].count\n    //     listOrder.push(data)\n    // }\n    // axios.post('http://localhost:4000/order', {\n    //     orderName: orderName,\n    //     orderEmail: orderEmail,\n    //     orderPhone: orderPhone,\n    //     orderAddress: orderAddress,\n    //     orderTinh: orderProvince,\n    //     orderHuyen: orderDistric,\n    //     orderList: listOrder,\n    //     orderTotal: total,\n    //     orderPaymentMethod: orderPaymentMethod,\n    //     orderDate: new Date()\n    // })\n    // props.setCloseCreateFunc(false);\n    // props.setToastFunc(true);\n  };\n\n  useEffect(() => {\n    axios.get(`http://localhost:4000/users/list`).then(res => {\n      setUserList(res.data);\n      res.data.filter(item => {\n        if (item.userEmail === user) {\n          setCollectionName(item.userName);\n          setOrderEmail(item.userEmail);\n          setOrderPhone(item.userPhone);\n          setOrderProvince(item.userProvince);\n          setOrderDistric(item.userDistric);\n          setOrderAddress(item.userAddress);\n        }\n      });\n    });\n    axios.get(`http://localhost:4000/products`).then(res => {\n      setProduct(res.data);\n    });\n\n    if (user === \"\") {\n      setOrderName(\"\");\n      setOrderEmail(\"\");\n      setOrderPhone(\"\");\n      setOrderAddress(\"\");\n      setOrderProvince(\"\");\n      setProvinceId(\"\");\n    }\n  }, [user]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DashboardProductInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-title flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-title-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Order infomation\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-title-close flex-center\",\n    onClick: () => {\n      props.setCloseCreateFunc(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    encType: \"multipart/form-data\",\n    ref: createForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-left flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: collectionName || \"\",\n    onChange: event => {\n      setCollectionName(event.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-left flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: orderEmail || \"\",\n    onChange: event => {\n      setOrderEmail(event.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-left flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, \"Phone\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    value: orderPhone || \"\",\n    onChange: event => {\n      setOrderPhone(event.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-left flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, \"Items\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"input\",\n    style: {\n      height: '25px',\n      marginBottom: '10px'\n    },\n    value: \"\",\n    onChange: event => {\n      const isExists = (cartItems = [], item = {}) => {\n        for (let cartItem of cartItems) {\n          if (cartItem._id === item._id) {\n            return cartItem;\n          }\n        }\n\n        return false;\n      };\n\n      const value = event.target.value;\n      const virtualCart = [...productList];\n\n      if (productList.length === 0) {\n        virtualCart.push({ ...JSON.parse(value),\n          count: 1\n        });\n      } else {\n        if (!isExists(productList, JSON.parse(value))) {\n          virtualCart.push({ ...JSON.parse(value),\n            count: 1\n          });\n        } else {\n          for (let i = 0; i < virtualCart.length; i++) {\n            if (virtualCart[i]._id === JSON.parse(value)._id) {\n              virtualCart[i].count += 1;\n              break;\n            }\n          }\n        }\n      }\n\n      setProductList(virtualCart);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    value: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }, \"select a product\"), product.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: JSON.stringify(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 41\n      }\n    }, \"Name: \", item.productName, \", Price: \", item.productPrice);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    style: {\n      overflowY: 'hidden',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  }, productList && productList.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"order-list-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.productImg[0],\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        width: '55%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 49\n      }\n    }, item.productName), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: index,\n      className: \"count-btn flex-center\",\n      onClick: event => {\n        const arr = [...productList];\n        const id = event.target.id;\n\n        for (let i in arr) {\n          if (id === i) {\n            if (arr[i].count === 0) {\n              return;\n            } else {\n              arr[i].count -= 1;\n            }\n          }\n        }\n\n        setProductList(arr);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 53\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 53\n      }\n    }, item.count), /*#__PURE__*/React.createElement(\"p\", {\n      id: index,\n      className: \"count-btn flex-center\",\n      onClick: event => {\n        const arr = [...productList];\n        const id = event.target.id;\n\n        for (let i in arr) {\n          if (id === i) {\n            arr[i].count += 1;\n          }\n        }\n\n        setProductList(arr);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 53\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: index,\n      className: \"delete-order-item flex-center\",\n      onClick: event => {\n        var arr = [];\n        const id = event.target.id;\n\n        for (let i in productList) {\n          if (i !== id) {\n            arr.push(productList[i]);\n          }\n        }\n\n        setProductList(arr);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        pointerEvents: 'none'\n      },\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 53\n      }\n    })));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-left flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, \"Payment method\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"input\",\n    type: \"text\",\n    value: orderPaymentMethod || \"\",\n    onChange: event => {\n      setOrderPaymentMethod(event.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"cash on delivery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 33\n    }\n  }, \"Cash On Delivery\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"direct back transfer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 33\n    }\n  }, \"Direct Back Transfer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"paypal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 33\n    }\n  }, \"Paypal\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center\",\n    style: {\n      marginTop: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"create-box-btn btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, \"Create order\")))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Collection/DashboardCollectionCreate.js"],"names":["React","useEffect","useRef","useState","FontAwesomeIcon","faTimes","axios","DashboardCollectionCreate","props","createForm","collectionName","setCollectionName","product","setProduct","productList","setProductList","onSubmit","event","get","then","res","setUserList","data","filter","item","userEmail","user","userName","setOrderEmail","setOrderPhone","userPhone","setOrderProvince","userProvince","setOrderDistric","userDistric","setOrderAddress","userAddress","setOrderName","setProvinceId","setCloseCreateFunc","target","value","orderEmail","orderPhone","height","marginBottom","isExists","cartItems","cartItem","_id","virtualCart","length","push","JSON","parse","count","i","map","index","stringify","productName","productPrice","overflowY","flexWrap","productImg","width","display","alignItems","arr","id","pointerEvents","orderPaymentMethod","setOrderPaymentMethod","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,yBAAT,CAAmCC,KAAnC,EAA0C;AAErD,QAAMC,UAAU,GAAGP,MAAM,EAAzB;AAEA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;;AAGA,QAAMa,QAAQ,GAAIC,KAAD,IAAW,CACxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA5BD;;AA8BAhB,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,KAAK,CAACY,GAAN,CAAW,kCAAX,EACKC,IADL,CACUC,GAAG,IAAI;AACTC,MAAAA,WAAW,CAACD,GAAG,CAACE,IAAL,CAAX;AACAF,MAAAA,GAAG,CAACE,IAAJ,CAASC,MAAT,CAAiBC,IAAD,IAAQ;AACpB,YAAIA,IAAI,CAACC,SAAL,KAAmBC,IAAvB,EAA6B;AACzBf,UAAAA,iBAAiB,CAACa,IAAI,CAACG,QAAN,CAAjB;AACAC,UAAAA,aAAa,CAACJ,IAAI,CAACC,SAAN,CAAb;AACAI,UAAAA,aAAa,CAACL,IAAI,CAACM,SAAN,CAAb;AACAC,UAAAA,gBAAgB,CAACP,IAAI,CAACQ,YAAN,CAAhB;AACAC,UAAAA,eAAe,CAACT,IAAI,CAACU,WAAN,CAAf;AACAC,UAAAA,eAAe,CAACX,IAAI,CAACY,WAAN,CAAf;AACH;AACJ,OATD;AAUH,KAbL;AAeA9B,IAAAA,KAAK,CAACY,GAAN,CAAW,gCAAX,EACKC,IADL,CACUC,GAAG,IAAI;AACTP,MAAAA,UAAU,CAACO,GAAG,CAACE,IAAL,CAAV;AACH,KAHL;;AAKA,QAAII,IAAI,KAAK,EAAb,EAAiB;AACbW,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAT,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAM,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAJ,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAO,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH;AACJ,GA7BQ,EA6BP,CAACZ,IAAD,CA7BO,CAAT;AA+BA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII;AACI,IAAA,SAAS,EAAC,oCADd;AAEI,IAAA,OAAO,EAAE,MAAI;AACTlB,MAAAA,KAAK,CAAC+B,kBAAN,CAAyB,KAAzB;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAElC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAJJ,CADJ,eAcI;AAAM,IAAA,QAAQ,EAAEW,QAAhB;AAA0B,IAAA,OAAO,EAAC,qBAAlC;AAAwD,IAAA,GAAG,EAAEP,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AACgB,IAAA,IAAI,EAAC,MADrB;AAEI,IAAA,KAAK,EAAEC,cAAc,IAAI,EAF7B;AAGI,IAAA,QAAQ,EAAGO,KAAD,IAAS;AACfN,MAAAA,iBAAiB,CAACM,KAAK,CAACuB,MAAN,CAAaC,KAAd,CAAjB;AACH,KALL;AAKO,IAAA,QAAQ,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ,eAaI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AACgB,IAAA,IAAI,EAAC,OADrB;AAEI,IAAA,KAAK,EAAEC,UAAU,IAAI,EAFzB;AAGI,IAAA,QAAQ,EAAGzB,KAAD,IAAS;AACfW,MAAAA,aAAa,CAACX,KAAK,CAACuB,MAAN,CAAaC,KAAd,CAAb;AACH,KALL;AAKO,IAAA,QAAQ,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAbJ,eAyBI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AACgB,IAAA,IAAI,EAAC,OADrB;AAEI,IAAA,KAAK,EAAEE,UAAU,IAAI,EAFzB;AAGI,IAAA,QAAQ,EAAG1B,KAAD,IAAS;AACfY,MAAAA,aAAa,CAACZ,KAAK,CAACuB,MAAN,CAAaC,KAAd,CAAb;AACH,KALL;AAKO,IAAA,QAAQ,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAzBJ,eAqCI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,OADd;AAEI,IAAA,KAAK,EAAE;AAACG,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,YAAY,EAAE;AAA/B,KAFX;AAGI,IAAA,KAAK,EAAE,EAHX;AAII,IAAA,QAAQ,EAAG5B,KAAD,IAAS;AACf,YAAM6B,QAAQ,GAAG,CAACC,SAAS,GAAG,EAAb,EAAiBvB,IAAI,GAAG,EAAxB,KAA+B;AAC5C,aAAK,IAAIwB,QAAT,IAAqBD,SAArB,EAAgC;AAC5B,cAAIC,QAAQ,CAACC,GAAT,KAAiBzB,IAAI,CAACyB,GAA1B,EAA+B;AAC3B,mBAAOD,QAAP;AACH;AACJ;;AACD,eAAO,KAAP;AACH,OAPD;;AASA,YAAMP,KAAK,GAAGxB,KAAK,CAACuB,MAAN,CAAaC,KAA3B;AACA,YAAMS,WAAW,GAAG,CAAC,GAAGpC,WAAJ,CAApB;;AACA,UAAIA,WAAW,CAACqC,MAAZ,KAAuB,CAA3B,EAA8B;AAC1BD,QAAAA,WAAW,CAACE,IAAZ,CAAiB,EAAC,GAAGC,IAAI,CAACC,KAAL,CAAWb,KAAX,CAAJ;AAAuBc,UAAAA,KAAK,EAAE;AAA9B,SAAjB;AACH,OAFD,MAEO;AACH,YAAI,CAACT,QAAQ,CAAChC,WAAD,EAAcuC,IAAI,CAACC,KAAL,CAAWb,KAAX,CAAd,CAAb,EAA+C;AAC3CS,UAAAA,WAAW,CAACE,IAAZ,CAAiB,EAAC,GAAGC,IAAI,CAACC,KAAL,CAAWb,KAAX,CAAJ;AAAuBc,YAAAA,KAAK,EAAE;AAA9B,WAAjB;AACH,SAFD,MAEO;AACH,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,WAAW,CAACC,MAAhC,EAAwCK,CAAC,EAAzC,EAA6C;AACzC,gBAAIN,WAAW,CAACM,CAAD,CAAX,CAAeP,GAAf,KAAuBI,IAAI,CAACC,KAAL,CAAWb,KAAX,EAAkBQ,GAA7C,EAAkD;AAC9CC,cAAAA,WAAW,CAACM,CAAD,CAAX,CAAeD,KAAf,IAAwB,CAAxB;AACA;AACH;AACJ;AACJ;AACJ;;AACDxC,MAAAA,cAAc,CAACmC,WAAD,CAAd;AACH,KA/BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAiCI;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,KAAK,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjCJ,EAkCKtC,OAAO,CAAC6C,GAAR,CAAY,CAACjC,IAAD,EAAOkC,KAAP,KAAiB;AAC1B,wBACI;AACI,MAAA,GAAG,EAAEA,KADT;AAEI,MAAA,KAAK,EAAEL,IAAI,CAACM,SAAL,CAAenC,IAAf,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAGQA,IAAI,CAACoC,WAHb,eAGmCpC,IAAI,CAACqC,YAHxC,CADJ;AAMH,GAPA,CAlCL,CADJ,eA4CI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAkB,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,QAAQ,EAAC;AAAhC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMjD,WAAW,IACTA,WAAW,CAAC2C,GAAZ,CAAgB,CAACjC,IAAD,EAAOkC,KAAP,KAAiB;AAC7B,wBACI;AACI,MAAA,GAAG,EAAEA,KADT;AAEI,MAAA,SAAS,EAAC,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAK,MAAA,GAAG,EAAElC,IAAI,CAACwC,UAAL,CAAgB,CAAhB,CAAV;AAA8B,MAAA,GAAG,EAAC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BzC,IAAI,CAACoC,WAAhC,CALJ,eAMI;AAAK,MAAA,KAAK,EAAE;AAACM,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,UAAU,EAAE;AAA9B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,EAAE,EAAET,KADR;AAEI,MAAA,SAAS,EAAC,uBAFd;AAGI,MAAA,OAAO,EAAGzC,KAAD,IAAS;AACd,cAAMmD,GAAG,GAAG,CAAC,GAAGtD,WAAJ,CAAZ;AACA,cAAMuD,EAAE,GAAGpD,KAAK,CAACuB,MAAN,CAAa6B,EAAxB;;AACA,aAAK,IAAIb,CAAT,IAAcY,GAAd,EAAmB;AACf,cAAIC,EAAE,KAAKb,CAAX,EAAc;AACV,gBAAIY,GAAG,CAACZ,CAAD,CAAH,CAAOD,KAAP,KAAiB,CAArB,EAAwB;AACpB;AACH,aAFD,MAEO;AACHa,cAAAA,GAAG,CAACZ,CAAD,CAAH,CAAOD,KAAP,IAAgB,CAAhB;AACH;AACJ;AACJ;;AACDxC,QAAAA,cAAc,CAACqD,GAAD,CAAd;AACH,OAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI5C,IAAI,CAAC+B,KAAT,CAnBJ,eAoBI;AACI,MAAA,EAAE,EAAEG,KADR;AAEI,MAAA,SAAS,EAAC,uBAFd;AAGI,MAAA,OAAO,EAAGzC,KAAD,IAAS;AACd,cAAMmD,GAAG,GAAG,CAAC,GAAGtD,WAAJ,CAAZ;AACA,cAAMuD,EAAE,GAAGpD,KAAK,CAACuB,MAAN,CAAa6B,EAAxB;;AACA,aAAK,IAAIb,CAAT,IAAcY,GAAd,EAAmB;AACf,cAAIC,EAAE,KAAKb,CAAX,EAAc;AACVY,YAAAA,GAAG,CAACZ,CAAD,CAAH,CAAOD,KAAP,IAAgB,CAAhB;AACH;AACJ;;AACDxC,QAAAA,cAAc,CAACqD,GAAD,CAAd;AACH,OAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WApBJ,CANJ,eAyCI;AACI,MAAA,EAAE,EAAEV,KADR;AAEI,MAAA,SAAS,EAAC,+BAFd;AAGI,MAAA,OAAO,EAAGzC,KAAD,IAAS;AACd,YAAImD,GAAG,GAAG,EAAV;AACA,cAAMC,EAAE,GAAGpD,KAAK,CAACuB,MAAN,CAAa6B,EAAxB;;AACA,aAAK,IAAIb,CAAT,IAAc1C,WAAd,EAA2B;AACvB,cAAI0C,CAAC,KAAKa,EAAV,EAAc;AACVD,YAAAA,GAAG,CAAChB,IAAJ,CAAStC,WAAW,CAAC0C,CAAD,CAApB;AACH;AACJ;;AACDzC,QAAAA,cAAc,CAACqD,GAAD,CAAd;AACH,OAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAaI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAE;AAACE,QAAAA,aAAa,EAAE;AAAhB,OAAxB;AAAiD,MAAA,IAAI,EAAEjE,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CAzCJ,CADJ;AA2DH,GA5DD,CAFR,CA5CJ,CAFJ,CArCJ,eAsJI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,OADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAEkE,kBAAkB,IAAI,EAHjC;AAII,IAAA,QAAQ,EAAGtD,KAAD,IAAS;AACfuD,MAAAA,qBAAqB,CAACvD,KAAK,CAACuB,MAAN,CAAaC,KAAd,CAArB;AACH,KANL;AAMO,IAAA,QAAQ,MANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eASI;AAAQ,IAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,eAUI;AAAQ,IAAA,KAAK,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVJ,eAWI;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,CADJ,CAFJ,CAtJJ,eAwKI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAE;AAACgC,MAAAA,SAAS,EAAE;AAAZ,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAxKJ,CAdJ,CADJ,CADJ;AAiMH","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios'\n\nexport default function DashboardCollectionCreate(props) {\n\n    const createForm = useRef();\n\n    const [collectionName, setCollectionName] = useState(\"\")\n    const [product, setProduct] = useState([])\n    const [productList, setProductList] = useState([])\n    \n\n    const onSubmit = (event) => {\n        // event.preventDefault()\n\n        // var listOrder = []\n        // var total = 0;\n        // for(let i in productList) {\n        //     const data = {\n        //         id: productList[i]._id,\n        //         amount: productList[i].count,\n        //     }\n        //     total += productList[i].productPrice * productList[i].count\n        //     listOrder.push(data)\n        // }\n\n        // axios.post('http://localhost:4000/order', {\n        //     orderName: orderName,\n        //     orderEmail: orderEmail,\n        //     orderPhone: orderPhone,\n        //     orderAddress: orderAddress,\n        //     orderTinh: orderProvince,\n        //     orderHuyen: orderDistric,\n        //     orderList: listOrder,\n        //     orderTotal: total,\n        //     orderPaymentMethod: orderPaymentMethod,\n        //     orderDate: new Date()\n        // })\n        // props.setCloseCreateFunc(false);\n        // props.setToastFunc(true);\n    }\n\n    useEffect(()=>{\n        axios.get(`http://localhost:4000/users/list`)\n            .then(res => {\n                setUserList(res.data)\n                res.data.filter((item)=>{\n                    if (item.userEmail === user) {\n                        setCollectionName(item.userName)\n                        setOrderEmail(item.userEmail)\n                        setOrderPhone(item.userPhone)\n                        setOrderProvince(item.userProvince)\n                        setOrderDistric(item.userDistric)\n                        setOrderAddress(item.userAddress) \n                    }\n                })\n            }\n        ) \n        axios.get(`http://localhost:4000/products`)\n            .then(res => {\n                setProduct(res.data)\n            }\n        )\n        if (user === \"\") {\n            setOrderName(\"\")\n            setOrderEmail(\"\")\n            setOrderPhone(\"\")\n            setOrderAddress(\"\")\n            setOrderProvince(\"\")\n            setProvinceId(\"\")\n        }\n    },[user])\n    \n    return (\n        <div className=\"DashboardProductInfo\">\n            <div className=\"create-box\"> \n                <div className=\"create-box-title flex\">\n                    <div className=\"create-box-title-text\">\n                        Order infomation\n                    </div>\n                    <div  \n                        className=\"create-box-title-close flex-center\"\n                        onClick={()=>{\n                            props.setCloseCreateFunc(false);\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faTimes}/>\n                    </div>\n                </div>\n                <form onSubmit={onSubmit} encType=\"multipart/form-data\" ref={createForm}>\n                    <div className=\"create-box-row flex\">\n                        <div className=\"dashboard-left flex\">Name</div>\n                        <div className=\"dashboard-right\">\n                            <input \n                                type=\"text\" name=\"name\" \n                                value={collectionName || \"\"}\n                                onChange={(event)=>{\n                                    setCollectionName(event.target.value)\n                                }} required\n                            ></input>\n                        </div>\n                    </div>\n                    <div className=\"create-box-row flex\">\n                        <div className=\"dashboard-left flex\">Email</div>\n                        <div className=\"dashboard-right\">\n                            <input \n                                type=\"text\" name=\"email\" \n                                value={orderEmail || \"\"}\n                                onChange={(event)=>{\n                                    setOrderEmail(event.target.value)\n                                }} required\n                                ></input>\n                        </div>\n                    </div>\n                    <div className=\"create-box-row flex\">\n                        <div className=\"dashboard-left flex\">Phone</div>\n                        <div className=\"dashboard-right\">\n                            <input \n                                type=\"text\" name=\"phone\" \n                                value={orderPhone || \"\"}\n                                onChange={(event)=>{\n                                    setOrderPhone(event.target.value)\n                                }} required\n                                ></input>\n                        </div>\n                    </div>\n                    <div className=\"create-box-row flex\">\n                        <div className=\"dashboard-left flex\">Items</div>\n                        <div className=\"dashboard-right\">\n                            <select \n                                className=\"input\"\n                                style={{height: '25px', marginBottom: '10px'}}\n                                value={\"\"}\n                                onChange={(event)=>{\n                                    const isExists = (cartItems = [], item = {}) => {\n                                        for (let cartItem of cartItems) {\n                                            if (cartItem._id === item._id) {\n                                                return cartItem;\n                                            }\n                                        }\n                                        return false;\n                                    }\n\n                                    const value = event.target.value\n                                    const virtualCart = [...productList] \n                                    if (productList.length === 0) {\n                                        virtualCart.push({...JSON.parse(value), count: 1})\n                                    } else {\n                                        if (!isExists(productList, JSON.parse(value))) {\n                                            virtualCart.push({...JSON.parse(value), count: 1})\n                                        } else {\n                                            for (let i = 0; i < virtualCart.length; i++) {\n                                                if (virtualCart[i]._id === JSON.parse(value)._id) {\n                                                    virtualCart[i].count += 1\n                                                    break\n                                                }\n                                            }\n                                        }\n                                    }\n                                    setProductList(virtualCart)\n                                }}\n                            >\n                                <option selected value>select a product</option>\n                                {product.map((item, index) => {\n                                    return (\n                                        <option\n                                            key={index}\n                                            value={JSON.stringify(item)}\n                                        >Name: {item.productName}, Price: {item.productPrice}</option>\n                                    )\n                                })}\n                            </select>\n                            <div className=\"\" style={{ overflowY: 'hidden', flexWrap:'wrap'}}>\n                                { productList && \n                                    productList.map((item, index) => {\n                                        return (\n                                            <div \n                                                key={index}\n                                                className=\"order-list-item\"\n                                            >\n                                                <img src={item.productImg[0]} alt=\"\"></img>\n                                                <p style={{width: '55%'}}>{item.productName}</p>\n                                                <div style={{display: 'flex', alignItems: 'center'}}>\n                                                    <p \n                                                        id={index}\n                                                        className=\"count-btn flex-center\"\n                                                        onClick={(event)=>{\n                                                            const arr = [...productList]\n                                                            const id = event.target.id;\n                                                            for (let i in arr) {\n                                                                if (id === i) {\n                                                                    if (arr[i].count === 0) {\n                                                                        return\n                                                                    } else {\n                                                                        arr[i].count -= 1\n                                                                    }\n                                                                }\n                                                            }\n                                                            setProductList(arr)\n                                                        }}\n                                                    >-</p>\n                                                    <p>{item.count}</p>\n                                                    <p \n                                                        id={index}\n                                                        className=\"count-btn flex-center\"\n                                                        onClick={(event)=>{\n                                                            const arr = [...productList]\n                                                            const id = event.target.id;\n                                                            for (let i in arr) {\n                                                                if (id === i) {\n                                                                    arr[i].count += 1\n                                                                }\n                                                            }\n                                                            setProductList(arr)\n                                                        }}\n                                                    >+</p>\n                                                </div>\n                                                <div \n                                                    id={index}\n                                                    className=\"delete-order-item flex-center\"\n                                                    onClick={(event)=>{\n                                                        var arr = [];\n                                                        const id = event.target.id;\n                                                        for (let i in productList) {\n                                                            if (i !== id) {\n                                                                arr.push(productList[i])\n                                                            }\n                                                        }\n                                                        setProductList(arr)\n                                                    }}>\n                                                    <FontAwesomeIcon style={{pointerEvents: 'none'}} icon={faTimes}/>\n                                                </div>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"create-box-row flex\">\n                        <div className=\"dashboard-left flex\">Payment method</div>\n                        <div className=\"dashboard-right\">\n                            <select \n                                className=\"input\"\n                                type=\"text\"\n                                value={orderPaymentMethod || \"\"}\n                                onChange={(event)=>{\n                                    setOrderPaymentMethod(event.target.value)\n                                }} required\n                            >\n                                <option></option>\n                                <option value=\"cash on delivery\">Cash On Delivery</option>\n                                <option value=\"direct back transfer\">Direct Back Transfer</option>\n                                <option value=\"paypal\">Paypal</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"flex-center\" style={{marginTop: '40px'}}>\n                        <button className=\"create-box-btn btn\">\n                            Create order\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}