{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/DashboardMain.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../App.css';\nimport '../../../Styles/Dashboard.css';\nimport { faFileInvoice, faMoneyBillWave, faStar, faTshirt, faUser } from '@fortawesome/free-solid-svg-icons';\nimport DashboardTotalCount from './DashboardTotalCount';\nimport DashboardLocation from './DashboardLocation';\nimport DashboardTopFive from './DashboardTopFive';\nimport DashboardRecentReview from './DashboardRecentReview';\nimport axios from 'axios';\nexport default function DashboardMain() {\n  const totalCount = [{\n    id: 1,\n    title: \"Total orders\",\n    count: \"3200\",\n    percent: 12,\n    color: \"orange\",\n    icon: faFileInvoice\n  }, {\n    id: 2,\n    title: \"Total sales\",\n    count: \"$120 000\",\n    percent: 20,\n    color: \"pink\",\n    icon: faTshirt\n  }, {\n    id: 3,\n    title: \"Income\",\n    count: \"$30 000\",\n    percent: 30,\n    color: \"green\",\n    icon: faMoneyBillWave\n  }, {\n    id: 4,\n    title: \"Customers\",\n    count: \"1200\",\n    percent: 5,\n    color: \"lightblue\",\n    icon: faUser\n  }];\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:4000/products`).then(res => {\n      setProducts(res.data);\n    });\n  }, []); // console.log(products);\n\n  const recentVote = [];\n\n  for (let i = 0; i < products.length; i++) {\n    // id: products[i]._id,\n    // productName: products[i].productName,\n    const productVote = products[i].productVote;\n\n    for (let j = 0; j < productVote.length; j++) {\n      productVote[j].productName = products[i].productName;\n      recentVote.push(productVote[j]);\n    }\n  }\n\n  if (recentVote) {\n    recentVote.sort(function (a, b) {\n      return new Date(b.ratingDate) - new Date(a.ratingDate);\n    });\n  }\n\n  const topRecentVote = recentVote.splice(0, 5);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, totalCount.map((item, index) => {\n    return /*#__PURE__*/React.createElement(DashboardTotalCount, {\n      key: index,\n      icon: item.icon,\n      title: item.title,\n      count: item.count,\n      percent: item.percent,\n      color: item.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    });\n  })), /*#__PURE__*/React.createElement(DashboardLocation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardTopFive, {\n    icon: faUser,\n    title: \"Top customers\",\n    color: \"lightblue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DashboardTopFive, {\n    icon: faTshirt,\n    title: \"Top selling products\",\n    color: \"pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardRecentReview, {\n    icon: faStar,\n    title: \"Customer Review\",\n    color: \"orange\",\n    topRecentVote: topRecentVote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DashboardRecentReview // recent orders\n  , {\n    icon: faFileInvoice,\n    title: \"Customer Review\",\n    color: \"orange\",\n    topRecentVote: topRecentVote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/DashboardMain.js"],"names":["React","useEffect","useState","faFileInvoice","faMoneyBillWave","faStar","faTshirt","faUser","DashboardTotalCount","DashboardLocation","DashboardTopFive","DashboardRecentReview","axios","DashboardMain","totalCount","id","title","count","percent","color","icon","products","setProducts","get","then","res","data","recentVote","i","length","productVote","j","productName","push","sort","a","b","Date","ratingDate","topRecentVote","splice","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../App.css'\nimport '../../../Styles/Dashboard.css'\nimport { faFileInvoice, faMoneyBillWave, faStar, faTshirt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport DashboardTotalCount from './DashboardTotalCount'\nimport DashboardLocation from './DashboardLocation'\nimport DashboardTopFive from './DashboardTopFive'\nimport DashboardRecentReview from './DashboardRecentReview'\nimport axios from 'axios'\n\nexport default function DashboardMain() {\n\n    const totalCount = [\n        {\n            id: 1,\n            title: \"Total orders\",\n            count: \"3200\",\n            percent: 12,\n            color: \"orange\",\n            icon: faFileInvoice\n        },\n        {\n            id: 2,\n            title: \"Total sales\",\n            count: \"$120 000\",\n            percent: 20,\n            color: \"pink\",\n            icon: faTshirt\n        },\n        {\n            id: 3,\n            title: \"Income\",\n            count: \"$30 000\",\n            percent: 30,\n            color: \"green\",\n            icon: faMoneyBillWave\n        },\n        {\n            id: 4,\n            title: \"Customers\",\n            count: \"1200\",\n            percent: 5,\n            color: \"lightblue\",\n            icon: faUser\n        },\n    ]\n    const [products, setProducts] = useState([]);\n\n    useEffect(()=>{\n        axios.get(`http://localhost:4000/products`)\n            .then(res => {\n                setProducts(res.data)\n            }\n        )\n    }, [])\n\n    // console.log(products);\n    const recentVote = [];\n    for (let i = 0; i < products.length; i++) {\n            // id: products[i]._id,\n            // productName: products[i].productName,\n            const productVote = products[i].productVote;\n            for (let j = 0; j < productVote.length; j++) {\n                productVote[j].productName = products[i].productName;\n                recentVote.push(productVote[j])\n            }\n    }\n    if (recentVote) {\n        recentVote.sort(function(a,b){\n            return new Date(b.ratingDate) - new Date(a.ratingDate);\n        });\n    }\n\n    const topRecentVote = recentVote.splice(0,5)\n\n    return (\n        <div className=\"dashboard-main\">\n            <div className=\"row flex\">\n                { totalCount.map((item, index)=> {\n                    return (\n                        <DashboardTotalCount\n                            key = {index}\n                            icon = {item.icon}\n                            title = {item.title}\n                            count = {item.count}\n                            percent = {item.percent}\n                            color = {item.color}\n                        />\n                    )\n                })}\n            </div>\n            <DashboardLocation/>\n            <div className=\"row flex\">\n                <DashboardTopFive\n                    icon = {faUser}\n                    title = \"Top customers\"\n                    color = \"lightblue\"\n                />\n                <DashboardTopFive\n                    icon = {faTshirt}\n                    title = \"Top selling products\"\n                    color = \"pink\"\n                />\n            </div>\n            <div className=\"row flex\">\n                <DashboardRecentReview\n                    icon = {faStar}\n                    title = \"Customer Review\"\n                    color = \"orange\"\n                    topRecentVote = {topRecentVote}\n                />\n                <DashboardRecentReview // recent orders\n                    icon = {faFileInvoice}\n                    title = \"Customer Review\"\n                    color = \"orange\"\n                    topRecentVote = {topRecentVote}\n                />\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}