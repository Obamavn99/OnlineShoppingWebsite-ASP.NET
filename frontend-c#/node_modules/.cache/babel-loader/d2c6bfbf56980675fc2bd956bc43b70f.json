{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardChart.js\";\nimport React from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { Doughnut } from \"react-chartjs-2\";\nexport default function DashboardChart(props) {\n  const order = props.order;\n\n  if (order.length > 0) {\n    const productList = [];\n\n    for (let i in order) {\n      for (let j in order[i].orderList) {\n        productList.push(order[i].orderList[j]);\n      }\n    }\n\n    const productListTotal = [];\n\n    for (let i in productList) {\n      console.log(productList[i].id);\n\n      for (let j = i + 1; j <= productList.length; j++) {\n        //     if (productList[i].id === productList[j].id) {\n        //         console.log(\"c\")\n        //     }\n        console.log(productList[i].id);\n        console.log(productList[j].id);\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faGlobe,\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Global Sales by Top Categories\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-content flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Doughnut, {\n    data: {\n      labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n      datasets: [{\n        label: \"Population (millions)\",\n        backgroundColor: [\"#3e95cd\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\"],\n        data: [2478, 5267, 734, 784, 433]\n      }]\n    },\n    option: {\n      title: {\n        display: true,\n        text: \"Predicted world population (millions) in 2050\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardChart.js"],"names":["React","FontAwesomeIcon","faGlobe","Doughnut","DashboardChart","props","order","length","productList","i","j","orderList","push","productListTotal","console","log","id","labels","datasets","label","backgroundColor","data","title","display","text"],"mappings":";AAAA,OAAOA,KAAP,MAAuB,OAAvB;AACA,OAAO,qBAAP;AACA,OAAO,kCAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAE1C,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;;AACA,MAAIA,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AAClB,UAAMC,WAAW,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAT,IAAcH,KAAd,EAAqB;AACjB,WAAK,IAAII,CAAT,IAAcJ,KAAK,CAACG,CAAD,CAAL,CAASE,SAAvB,EAAkC;AAC9BH,QAAAA,WAAW,CAACI,IAAZ,CAAiBN,KAAK,CAACG,CAAD,CAAL,CAASE,SAAT,CAAmBD,CAAnB,CAAjB;AACH;AACJ;;AACD,UAAMG,gBAAgB,GAAG,EAAzB;;AACA,SAAK,IAAIJ,CAAT,IAAcD,WAAd,EAA2B;AACvBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAW,CAACC,CAAD,CAAX,CAAeO,EAA3B;;AACA,WAAK,IAAIN,CAAC,GAAGD,CAAC,GAAC,CAAf,EAAkBC,CAAC,IAAGF,WAAW,CAACD,MAAlC,EAA0CG,CAAC,EAA3C,EAA+C;AAC/C;AACA;AACA;AACII,QAAAA,OAAO,CAACC,GAAR,CAAYP,WAAW,CAACC,CAAD,CAAX,CAAeO,EAA3B;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYP,WAAW,CAACE,CAAD,CAAX,CAAeM,EAA3B;AACH;AACJ;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEd,OAAvB;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAE;AACFe,MAAAA,MAAM,EAAE,CACJ,QADI,EAEJ,MAFI,EAGJ,QAHI,EAIJ,eAJI,EAKJ,eALI,CADN;AAQFC,MAAAA,QAAQ,EAAE,CACN;AACAC,QAAAA,KAAK,EAAE,uBADP;AAEAC,QAAAA,eAAe,EAAE,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,CAFjB;AASAC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB;AATN,OADM;AARR,KADV;AAuBI,IAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,IADN;AAEHC,QAAAA,IAAI,EAAE;AAFH;AADH,KAvBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAJJ,CAJJ,CADJ;AA8CH","sourcesContent":["import React, { } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons'\nimport { Doughnut } from \"react-chartjs-2\";\n\nexport default function DashboardChart(props) {\n\n    const order = props.order\n    if (order.length > 0) { \n        const productList = []\n        for (let i in order) {\n            for (let j in order[i].orderList) {\n                productList.push(order[i].orderList[j])\n            }\n        }\n        const productListTotal = []\n        for (let i in productList) {\n            console.log(productList[i].id)\n            for (let j = i+1; j <=productList.length; j++) {\n            //     if (productList[i].id === productList[j].id) {\n            //         console.log(\"c\")\n            //     }\n                console.log(productList[i].id)\n                console.log(productList[j].id)\n            }\n        }\n    }\n\n    return (\n        <div className=\"chart flex-col\">\n            <div className=\"headerbox flex-center\">\n                <FontAwesomeIcon icon={faGlobe} className=\"icon\"/>\n            </div>\n            <div className=\"top-location-container\">\n                <div className=\"headerbox-header\">\n                    <p>Global Sales by Top Categories</p>\n                </div>\n                <div className=\"top-location-content flex\">\n                    <div className=\"top-location-map\">\n                        <Doughnut\n                            data={{\n                                labels: [\n                                    \"Africa\",\n                                    \"Asia\",\n                                    \"Europe\",\n                                    \"Latin America\",\n                                    \"North America\"\n                                ],\n                                datasets: [\n                                    {\n                                    label: \"Population (millions)\",\n                                    backgroundColor: [\n                                        \"#3e95cd\",\n                                        \"#8e5ea2\",\n                                        \"#3cba9f\",\n                                        \"#e8c3b9\",\n                                        \"#c45850\"\n                                    ],\n                                    data: [2478, 5267, 734, 784, 433]\n                                    }\n                                ]\n                            }}\n                            option={{\n                                title: {\n                                    display: true,\n                                    text: \"Predicted world population (millions) in 2050\"\n                                }\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}