{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardMain.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { faFileInvoice, faMoneyBillWave, faStar, faTshirt, faUser } from '@fortawesome/free-solid-svg-icons';\nimport DashboardTotalCount from './DashboardTotalCount';\nimport DashboardLocation from './DashboardLocation';\nimport DashboardTopFive from './DashboardTopFive';\nimport DashboardRecentReview from './DashboardRecentReview';\nimport axios from 'axios';\nimport DashboardRecentOrders from './DashboardRecentOrders';\nimport DashboardChart from './DashboardChart';\nexport default function DashboardMain() {\n  const [products, setProducts] = useState([]);\n  const [order, setOrder] = useState([]);\n  const [totalSale, setTotalSale] = useState(0);\n  useEffect(() => {\n    axios.get(`http://localhost:4000/products`).then(res => {\n      setProducts(res.data);\n    });\n    axios.get(`http://localhost:4000/order`).then(res => {\n      setOrder(res.data);\n      var total = 0;\n\n      for (let i in res.data) {\n        console.log(res.data[i]);\n        total += res.data[i].orderTotal;\n      }\n\n      setTotalSale(total);\n    });\n  }, []);\n  const totalCount = [{\n    id: 1,\n    title: \"Total orders\",\n    count: order.length,\n    percent: 12,\n    color: \"orange\",\n    icon: faFileInvoice\n  }, {\n    id: 2,\n    title: \"Total sales\",\n    count: `${totalSale}đ`,\n    percent: 20,\n    color: \"pink\",\n    icon: faTshirt\n  }, {\n    id: 3,\n    title: \"Income\",\n    count: `${totalSale}đ`,\n    percent: 30,\n    color: \"green\",\n    icon: faMoneyBillWave\n  }, {\n    id: 4,\n    title: \"Customers\",\n    count: \"1200\",\n    percent: 5,\n    color: \"lightblue\",\n    icon: faUser\n  }];\n  const recentVote = [];\n\n  if (products.length > 0) {\n    for (let i = 0; i < products.length; i++) {\n      const productVote = products[i].productVote;\n\n      for (let j = 0; j < productVote.length; j++) {\n        const newRatingDate = new Date(productVote[j].ratingDate);\n        productVote[j].productName = products[i].productName;\n\n        if (newRatingDate.getDate() === new Date().getDate()) {\n          let hours = newRatingDate.getHours().toString();\n          let minutes = newRatingDate.getMinutes().toString();\n\n          if (hours < 10) {\n            hours = \"0\" + hours;\n          }\n\n          if (minutes < 10) {\n            minutes = \"0\" + minutes;\n          }\n\n          productVote[j].ratingHours = hours;\n          productVote[j].ratingMinutes = minutes;\n        } else {\n          let days = newRatingDate.getDay().toString();\n          let months = newRatingDate.getMonth().toString();\n\n          if (days < 10) {\n            days = \"0\" + days;\n          }\n\n          if (months < 10) {\n            months = \"0\" + months;\n          }\n\n          productVote[j].ratingDays = days;\n          productVote[j].ratingMonths = months;\n          productVote[j].ratingYears = newRatingDate.getFullYear().toString();\n        }\n\n        recentVote.push(productVote[j]);\n      }\n    }\n  }\n\n  if (recentVote) {\n    recentVote.sort(function (a, b) {\n      return new Date(b.ratingDate) - new Date(a.ratingDate);\n    });\n  }\n\n  const topRecentVote = recentVote.splice(0, 5);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, totalCount.map((item, index) => {\n    return /*#__PURE__*/React.createElement(DashboardTotalCount, {\n      key: index,\n      icon: item.icon,\n      title: item.title,\n      count: item.count,\n      percent: item.percent,\n      color: item.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    });\n  })), /*#__PURE__*/React.createElement(DashboardLocation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardTopFive, {\n    icon: faUser,\n    title: \"Top customers\",\n    color: \"lightblue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DashboardTopFive, {\n    icon: faTshirt,\n    title: \"Top selling products\",\n    color: \"pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardRecentReview, {\n    icon: faStar,\n    title: \"Customer Review\",\n    color: \"orange\",\n    topRecentVote: topRecentVote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DashboardRecentOrders // recent orders\n  , {\n    icon: faFileInvoice,\n    title: \"Recent Order\",\n    color: \"green\",\n    topRecentVote: topRecentVote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DashboardChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardMain.js"],"names":["React","useEffect","useState","faFileInvoice","faMoneyBillWave","faStar","faTshirt","faUser","DashboardTotalCount","DashboardLocation","DashboardTopFive","DashboardRecentReview","axios","DashboardRecentOrders","DashboardChart","DashboardMain","products","setProducts","order","setOrder","totalSale","setTotalSale","get","then","res","data","total","i","console","log","orderTotal","totalCount","id","title","count","length","percent","color","icon","recentVote","productVote","j","newRatingDate","Date","ratingDate","productName","getDate","hours","getHours","toString","minutes","getMinutes","ratingHours","ratingMinutes","days","getDay","months","getMonth","ratingDays","ratingMonths","ratingYears","getFullYear","push","sort","a","b","topRecentVote","splice","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { faFileInvoice, faMoneyBillWave, faStar, faTshirt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport DashboardTotalCount from './DashboardTotalCount'\nimport DashboardLocation from './DashboardLocation'\nimport DashboardTopFive from './DashboardTopFive'\nimport DashboardRecentReview from './DashboardRecentReview'\nimport axios from 'axios'\nimport DashboardRecentOrders from './DashboardRecentOrders'\nimport DashboardChart from './DashboardChart'\n\nexport default function DashboardMain() {\n\n    const [products, setProducts] = useState([]);\n    const [order, setOrder] = useState([]);\n    const [totalSale, setTotalSale] = useState(0)\n\n    useEffect(()=>{\n        axios.get(`http://localhost:4000/products`)\n            .then(res => {\n                setProducts(res.data)\n            }\n        )\n        axios.get(`http://localhost:4000/order`)\n            .then(res => {\n                setOrder(res.data)\n                var total = 0;\n                for(let i in res.data) {\n                    console.log(res.data[i])\n                    total += res.data[i].orderTotal\n                }\n                setTotalSale(total)\n            }\n        )\n    }, [])\n\n    const totalCount = [\n        {\n            id: 1,\n            title: \"Total orders\",\n            count: order.length,\n            percent: 12,\n            color: \"orange\",\n            icon: faFileInvoice\n        },\n        {\n            id: 2,\n            title: \"Total sales\",\n            count: `${totalSale}đ`,\n            percent: 20,\n            color: \"pink\",\n            icon: faTshirt\n        },\n        {\n            id: 3,\n            title: \"Income\",\n            count: `${totalSale}đ`,\n            percent: 30,\n            color: \"green\",\n            icon: faMoneyBillWave\n        },\n        {\n            id: 4,\n            title: \"Customers\",\n            count: \"1200\",\n            percent: 5,\n            color: \"lightblue\",\n            icon: faUser\n        },\n    ]\n\n    const recentVote = [];\n    if (products.length > 0) {\n        for (let i = 0; i < products.length; i++) {\n            const productVote = products[i].productVote;\n            for (let j = 0; j < productVote.length; j++) {\n                const newRatingDate = new Date(productVote[j].ratingDate);\n                productVote[j].productName = products[i].productName;\n                if (newRatingDate.getDate() === new Date().getDate()) {\n                    let hours = newRatingDate.getHours().toString();\n                    let minutes = newRatingDate.getMinutes().toString();\n                    if (hours < 10) {\n                        hours = \"0\" + hours\n                    }\n                    if (minutes < 10) {\n                        minutes = \"0\" + minutes\n                    }\n                    productVote[j].ratingHours = hours;\n                    productVote[j].ratingMinutes = minutes;\n                } else {\n                    let days = newRatingDate.getDay().toString();\n                    let months = newRatingDate.getMonth().toString();\n                    if (days < 10) {\n                        days = \"0\" + days\n                    }\n                    if (months < 10) {\n                        months = \"0\" + months\n                    }\n                    productVote[j].ratingDays = days;\n                    productVote[j].ratingMonths = months;\n                    productVote[j].ratingYears = newRatingDate.getFullYear().toString();\n                }\n                recentVote.push(productVote[j])\n            }\n        }\n    }\n\n    if (recentVote) {\n        recentVote.sort(function(a,b){\n            return new Date(b.ratingDate) - new Date(a.ratingDate);\n        });\n    }\n\n    const topRecentVote = recentVote.splice(0,5)\n\n    return (\n        <div className=\"dashboard-main\">\n            <div className=\"row flex\">\n                { totalCount.map((item, index)=> {\n                    return (\n                        <DashboardTotalCount\n                            key = {index}\n                            icon = {item.icon}\n                            title = {item.title}\n                            count = {item.count}\n                            percent = {item.percent}\n                            color = {item.color}\n                        />\n                    )\n                })}\n            </div>\n            <DashboardLocation/>\n            <div className=\"row flex\">\n                <DashboardTopFive\n                    icon = {faUser}\n                    title = \"Top customers\"\n                    color = \"lightblue\"\n                />\n                <DashboardTopFive\n                    icon = {faTshirt}\n                    title = \"Top selling products\"\n                    color = \"pink\"\n                />\n            </div>\n            <div className=\"row flex\">\n                <DashboardRecentReview\n                    icon = {faStar}\n                    title = \"Customer Review\"\n                    color = \"orange\"\n                    topRecentVote = {topRecentVote}\n                />\n                <DashboardRecentOrders // recent orders\n                    icon = {faFileInvoice}\n                    title = \"Recent Order\"\n                    color = \"green\"\n                    topRecentVote = {topRecentVote}\n                />\n            </div>\n            <div className=\"row flex\">\n                <DashboardChart/>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}