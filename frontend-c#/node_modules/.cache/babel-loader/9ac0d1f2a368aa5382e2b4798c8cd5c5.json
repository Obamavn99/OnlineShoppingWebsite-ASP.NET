{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Inbox/DashboardInbox.js\";\nimport React from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { useEffect, useState } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport axios from 'axios';\nconst ENDPOINT = \"http://localhost:4000\";\nexport default function DashboardInbox(props) {\n  const [allChatData, setAllChatData] = useState([]);\n  const [roomId, setRoomId] = useState(0);\n  const [roomIndex, setRoomIndex] = useState(0);\n  const [chatInput, setChatInput] = useState(\"\");\n  const socket = socketIOClient(ENDPOINT);\n  useEffect(() => {\n    socket.emit('join', {\n      sessionId: 'admin',\n      isAdmin: true\n    });\n    socket.on('send-all-chat', data => {\n      setAllChatData(data);\n    });\n    socket.on(\"client-msg\", function (data) {\n      console.log(data.allchat);\n      setAllChatData(data.allchat);\n    });\n  }, []);\n\n  const handleOnChange = event => {\n    setChatInput(event.target.value);\n  };\n\n  const sendChatInput = event => {\n    event.preventDefault();\n    const data = {\n      fromAdmin: true,\n      text: chatInput,\n      time: new Date(),\n      roomId: roomId\n    };\n    socket.emit('messageSend-admin', data);\n    axios.get(`http://localhost:4000/chat`).then(res => {\n      setAllChatData(res.data);\n    });\n  };\n\n  console.log(allChatData);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-admin flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  })), allChatData.length > 0 && allChatData.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"boxchat-item flex\",\n      onClick: () => {\n        setRoomId(item.sessionId);\n        setRoomIndex(index);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxchat-avt flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://cdn4.vectorstock.com/i/1000x1000/94/38/avatar-flat-icon-on-black-background-black-style-vector-25959438.jpg\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"boxchat-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    }, item.chatName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"boxchat-first\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }\n    }, item.chatContent[item.chatContent.length - 1].text)));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, allChatData.length > 0 && allChatData[roomIndex].map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxchat-box-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxchat-box-avt flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://cdn4.vectorstock.com/i/1000x1000/94/38/avatar-flat-icon-on-black-background-black-style-vector-25959438.jpg\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"boxchat-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 41\n      }\n    }, allChatData[roomIndex].chatName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"boxchat-first\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 41\n      }\n    }, item.chatContent[item.chatContent.length - 1].text)));\n  }), allChatData.length > 0 && allChatData[roomIndex].chatContent.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, item.text);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendChatInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleOnChange,\n    name: \"chatInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"Send\")))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Inbox/DashboardInbox.js"],"names":["React","useEffect","useState","socketIOClient","axios","ENDPOINT","DashboardInbox","props","allChatData","setAllChatData","roomId","setRoomId","roomIndex","setRoomIndex","chatInput","setChatInput","socket","emit","sessionId","isAdmin","on","data","console","log","allchat","handleOnChange","event","target","value","sendChatInput","preventDefault","fromAdmin","text","time","Date","get","then","res","length","map","item","index","chatName","chatContent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { useEffect, useState } from 'react'\nimport socketIOClient from \"socket.io-client\"\nimport axios from 'axios'\n\nconst ENDPOINT = \"http://localhost:4000\";\n\nexport default function DashboardInbox(props) {\n    const [allChatData, setAllChatData] = useState([])\n    const [roomId, setRoomId] = useState(0);\n    const [roomIndex, setRoomIndex] = useState(0)\n    const [chatInput, setChatInput] = useState(\"\")\n\n    const socket = socketIOClient(ENDPOINT);\n\n    useEffect(() => {\n        socket.emit('join', {\n            sessionId: 'admin',\n            isAdmin: true\n        })\n        socket.on('send-all-chat', (data)=>{\n            setAllChatData(data)\n        })\n        socket.on(\"client-msg\", function(data) {\n            console.log(data.allchat)\n            setAllChatData(data.allchat)\n        })\n    },[])\n\n    const handleOnChange = (event) => {\n        setChatInput(event.target.value)\n    }\n\n    const sendChatInput = (event) => {\n        event.preventDefault();\n        const data = {\n            fromAdmin: true,\n            text: chatInput,\n            time: new Date(),\n            roomId: roomId\n        }\n        socket.emit('messageSend-admin', data)\n\n        axios.get(`http://localhost:4000/chat`)\n            .then(res => {\n                setAllChatData(res.data)\n            }\n        )\n    }\n\n    console.log(allChatData)\n\n    return (\n        <div className=\"boxchat-admin flex\">\n            <div className=\"boxchat-list\">\n                <div className=\"boxchat-search\">\n                    <input type=\"text\"></input>\n                </div>\n                { allChatData.length > 0 && \n                    allChatData.map((item,index)=>{\n                        return (\n                            <div \n                                key={index}\n                                className=\"boxchat-item flex\"\n                                onClick={()=>{\n                                    setRoomId(item.sessionId)\n                                    setRoomIndex(index)\n                                }}\n                            >\n                                <div className=\"boxchat-avt flex-center\">\n                                    <img \n                                        src=\"https://cdn4.vectorstock.com/i/1000x1000/94/38/avatar-flat-icon-on-black-background-black-style-vector-25959438.jpg\" \n                                        alt=\"\"\n                                    ></img>\n                                </div>\n                                <div className=\"flex-col\">\n                                    <p className=\"boxchat-name\">{item.chatName}</p>\n                                    <p className=\"boxchat-first\">{item.chatContent[item.chatContent.length - 1].text}</p>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"boxchat-main\">\n                <div className=\"boxchat-box\">\n                    { allChatData.length>0 &&\n                        allChatData[roomIndex].map((item, index)=>{\n                            return (\n                                <div className=\"boxchat-box-info\">\n                                    <div className=\"boxchat-box-avt flex-center\">\n                                        <img \n                                            src=\"https://cdn4.vectorstock.com/i/1000x1000/94/38/avatar-flat-icon-on-black-background-black-style-vector-25959438.jpg\" \n                                            alt=\"\"\n                                        ></img>\n                                    </div>\n                                    <div className=\"flex-col\">\n                                        <p className=\"boxchat-name\">{allChatData[roomIndex].chatName}</p>\n                                        <p className=\"boxchat-first\">{item.chatContent[item.chatContent.length - 1].text}</p>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                    { allChatData.length>0 &&\n                        allChatData[roomIndex].chatContent.map((item, index)=>{\n                            return(\n                                <div key={index}>\n                                    {item.text}\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                <div className=\"boxchat-type\">\n                    <form onSubmit={sendChatInput}>\n                        <input type=\"text\" onChange={handleOnChange} name=\"chatInput\"></input>\n                        <button>Send</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}