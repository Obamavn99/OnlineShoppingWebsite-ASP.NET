{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/src/components/ProductBody.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from 'react-router-dom';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\nexport default function ProductBody(props) {\n  function slugify(text) {\n    return text.toString().toLowerCase().replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(/[^\\u0100-\\uFFFF\\w\\-]/g, '-') // Remove all non-word chars ( fix for UTF-8 chars )\n    .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n  }\n\n  const slugSex = \"/\" + slugify(props.productSex);\n  const productImgSmall = props.productImg; // const [productImgBig, setProductImgBig] = useState([].concat(props.productImg));\n  // const productImgBig = [].concat(props.productImg);\n\n  const [imgIndex, setImgIndex] = useState(0);\n  const [hover, setHover] = useState(false);\n  const [zoom, setZoom] = useState(`0% 0%`);\n  const width = 510;\n  const productSmall = useRef(null);\n\n  const handleMouseMove = e => {\n    const {\n      left,\n      top,\n      width,\n      height\n    } = e.target.getBoundingClientRect();\n    const x = (e.pageX - left) / width * 100;\n    const y = (e.pageY - top) / height * 100;\n    setZoom(`${x}% ${y}%`);\n  };\n\n  if (imgIndex >= productImgSmall.length) {\n    //infinity slider loop\n    // setProductImgBig(productImgBig.concat(props.productImg))\n    setImgIndex(0);\n  } // if (productImgSmall.length > 4) {\n  //     if (imgIndex === 1 || imgIndex === 2) {\n  //         productSmall.current.style.transform= `translateY(0px)`\n  //     } else if (imgIndex === productImgSmall.length - 1) {\n  //         productSmall.current.style.transform= `translateY(-${(imgIndex-5) * 110 + 50}px)`\n  //     } else if (imgIndex === productImgSmall.length - 2) {\n  //         productSmall.current.style.transform= `translateY(-${(imgIndex-4) * 110 + 50}px)`\n  //     } else if (imgIndex === productImgSmall.length - 3) {\n  //         productSmall.current.style.transform= `translateY(-${(imgIndex-3) * 110 + 50}px)`\n  //     } else if (imgIndex > 2) {\n  //         productSmall.current.style.transform= `translateY(-${(imgIndex-2) * 110}px)`\n  //     } else {\n  //         if (productSmall.current) {\n  //             productSmall.current.style.transform= `translateY(0px)`\n  //         }\n  //     }\n  // }\n\n\n  const dragImg = event => {\n    console.log(event);\n  };\n\n  useEffect(() => {\n    if (hover === false) {\n      var interval = setInterval(() => {\n        setImgIndex(imgIndex => imgIndex + 1);\n      }, 5000);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [hover]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-breadcrumb flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"breadcrumb-item breadcrumb-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faAngleRight,\n    className: \"breadcrumb-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: slugSex,\n    className: \"breadcrumb-item breadcrumb-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, props.productCate), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faAngleRight,\n    className: \"breadcrumb-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"breadcrumb-item breadcrumb-product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, props.productName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Swiper, {\n    spaceBetween: 50,\n    slidesPerView: 3,\n    onSlideChange: () => console.log('slide change'),\n    onSwiper: swiper => console.log(swiper),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, productImgSmall.map((item, index) => {\n    return /*#__PURE__*/React.createElement(SwiperSlide, {\n      key: index,\n      className: \"product-big flex\" // onMouseMove={handleMouseMove}\n      // style={{ \n      //     transform: `translateX(-${width * imgIndex}px`,\n      //     backgroundImage: `url(${item})`,\n      //     backgroundPosition: `${zoom}`\n      // }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"nodrag\",\n      style: {\n        width: `${width}px`\n      },\n      src: item,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }));\n  }))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/src/components/ProductBody.js"],"names":["React","useEffect","useRef","useState","FontAwesomeIcon","faAngleRight","Link","Swiper","SwiperSlide","ProductBody","props","slugify","text","toString","toLowerCase","replace","slugSex","productSex","productImgSmall","productImg","imgIndex","setImgIndex","hover","setHover","zoom","setZoom","width","productSmall","handleMouseMove","e","left","top","height","target","getBoundingClientRect","x","pageX","y","pageY","length","dragImg","event","console","log","interval","setInterval","clearInterval","productCate","productName","swiper","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {  faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from 'react-router-dom';\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\n\n\nexport default function ProductBody(props) {\n\n    function slugify(text){\n        return text.toString().toLowerCase()\n            .replace(/\\s+/g, '-')           // Replace spaces with -\n            .replace(/[^\\u0100-\\uFFFF\\w\\-]/g,'-') // Remove all non-word chars ( fix for UTF-8 chars )\n            .replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\n            .replace(/^-+/, '')             // Trim - from start of text\n            .replace(/-+$/, '');            // Trim - from end of text\n    }\n    const slugSex = \"/\" + slugify(props.productSex);\n\n    const productImgSmall = props.productImg;\n    // const [productImgBig, setProductImgBig] = useState([].concat(props.productImg));\n    // const productImgBig = [].concat(props.productImg);\n    \n    const [imgIndex, setImgIndex] = useState(0);\n    const [hover, setHover] = useState(false);\n    const [zoom, setZoom] = useState(`0% 0%`);\n    const width = 510;\n    const productSmall = useRef(null);\n\n    const handleMouseMove = (e) => {\n        const { left, top, width, height } = e.target.getBoundingClientRect();\n        const x = ((e.pageX - left) / width) * 100;\n        const y = ((e.pageY - top) / height) * 100;\n        setZoom(`${x}% ${y}%`);\n    };\n    \n    if (imgIndex >= productImgSmall.length) { //infinity slider loop\n        // setProductImgBig(productImgBig.concat(props.productImg))\n        setImgIndex(0);\n    }\n\n    // if (productImgSmall.length > 4) {\n    //     if (imgIndex === 1 || imgIndex === 2) {\n    //         productSmall.current.style.transform= `translateY(0px)`\n    //     } else if (imgIndex === productImgSmall.length - 1) {\n    //         productSmall.current.style.transform= `translateY(-${(imgIndex-5) * 110 + 50}px)`\n    //     } else if (imgIndex === productImgSmall.length - 2) {\n    //         productSmall.current.style.transform= `translateY(-${(imgIndex-4) * 110 + 50}px)`\n    //     } else if (imgIndex === productImgSmall.length - 3) {\n    //         productSmall.current.style.transform= `translateY(-${(imgIndex-3) * 110 + 50}px)`\n    //     } else if (imgIndex > 2) {\n    //         productSmall.current.style.transform= `translateY(-${(imgIndex-2) * 110}px)`\n    //     } else {\n    //         if (productSmall.current) {\n    //             productSmall.current.style.transform= `translateY(0px)`\n    //         }\n    //     }\n    // }\n\n    const dragImg = (event) => {\n        console.log(event)\n    }\n\n    useEffect(() => {\n        if (hover === false) {\n            var interval = setInterval(() => {\n                setImgIndex(imgIndex => imgIndex + 1);\n            }, 5000);\n        }\n        return() => {\n            clearInterval(interval);\n        }\n    },[hover])\n\n    return(\n        <div className=\"ProductBody\">\n            <div className=\"product-breadcrumb flex\">\n                <Link to=\"/\" className=\"breadcrumb-item breadcrumb-link\">Home</Link>\n                <FontAwesomeIcon icon={ faAngleRight } className=\"breadcrumb-arrow\"/>\n                <Link to={slugSex} className=\"breadcrumb-item breadcrumb-link\">{props.productCate}</Link>\n                <FontAwesomeIcon icon={ faAngleRight } className=\"breadcrumb-arrow\"/>\n                <div className=\"breadcrumb-item breadcrumb-product\">{props.productName}</div>\n            </div>\n\n            <div className=\"product-detail\">\n                <Swiper\n                    spaceBetween={50}\n                    slidesPerView={3}\n                    onSlideChange={() => console.log('slide change')}\n                    onSwiper={(swiper) => console.log(swiper)}\n                    >\n                    {/* <SwiperSlide>Slide 1</SwiperSlide>\n                    <SwiperSlide>Slide 2</SwiperSlide>\n                    <SwiperSlide>Slide 3</SwiperSlide>\n                    <SwiperSlide>Slide 4</SwiperSlide> */}\n                    {productImgSmall.map((item, index) => {\n                        return (\n                            <SwiperSlide \n                                key={index}\n                                className=\"product-big flex\" \n                                // onMouseMove={handleMouseMove}\n                                // style={{ \n                                //     transform: `translateX(-${width * imgIndex}px`,\n                                //     backgroundImage: `url(${item})`,\n                                //     backgroundPosition: `${zoom}`\n                                // }}\n                                >\n                                {/* <div className=\"product-big-item\"> */}\n                                    <img \n                                        className=\"nodrag\"\n                                        style={{ width: `${width}px`}}\n                                        src={item}\n                                        alt=\"\"\n                                        ></img>\n                                {/* </div> */}\n                            </SwiperSlide>\n                        )\n                    })}\n                </Swiper>\n                {/* <div className=\"product-gallery flex\"\n                    onMouseEnter={()=> {setHover(true)}}\n                    onMouseLeave={()=> {setHover(false)}}>\n                    <div \n                        className=\"product-small\" ref={productSmall}\n                        >\n                        {productImgSmall.map((item, index) => {\n                            return (\n                                <div \n                                    key={index}\n                                    className={imgIndex === index ? \"product-small-item product-small-item-active\" : \"product-small-item\"}>\n                                    <img \n                                        src={item}\n                                        onClick={()=>{ setImgIndex(index)}}\n                                        alt=\"\"\n                                        ></img>\n                                </div>\n                            )\n                        })}\n                    </div>\n                    <div \n                        className=\"product-slider flex\" \n                        onDragStart={(event)=> {dragImg(event)}}\n                        >\n                        {productImgSmall.map((item, index) => {\n                            return (\n                                <div \n                                    key={index}\n                                    className=\"product-big flex\" \n                                    // onMouseMove={handleMouseMove}\n                                    style={{ \n                                        transform: `translateX(-${width * imgIndex}px`,\n                                        backgroundImage: `url(${item})`,\n                                        backgroundPosition: `${zoom}`\n                                    }}>\n                                    <div className=\"product-big-item\">\n                                        <img \n                                            className=\"nodrag\"\n                                            style={{ width: `${width}px`}}\n                                            src={item}\n                                            alt=\"\"\n                                            ></img>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            */}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}