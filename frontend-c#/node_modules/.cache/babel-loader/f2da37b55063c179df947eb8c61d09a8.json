{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/src/components/chat.js\";\nimport React, { useEffect, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:4000\";\n\nfunction Chat() {\n  const [chatData, setChatData] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const cc = [];\n  const socket = socketIOClient(ENDPOINT);\n  useEffect(() => {\n    socket.on('connect', function (data) {\n      socket.emit('join', 'Hello server from client');\n    });\n    socket.on('thread', data => {\n      setChatData(chatData.push(data));\n      console.log('effect', chatData);\n    });\n  }, [chatData]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    socket.emit('mess', inputValue);\n  };\n\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  if (chatData.length) console.log('zxc', chatData);\n  console.log(cc);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Chat\")));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/src/components/chat.js"],"names":["React","useEffect","useState","socketIOClient","ENDPOINT","Chat","chatData","setChatData","inputValue","setInputValue","cc","socket","on","data","emit","push","console","log","handleSubmit","event","preventDefault","handleChange","target","value","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,SAASC,IAAT,GAAgB;AAEZ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMQ,EAAE,GAAG,EAAX;AAEA,QAAMC,MAAM,GAAGR,cAAc,CAACC,QAAD,CAA7B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,UAAUC,IAAV,EAAgB;AACjCF,MAAAA,MAAM,CAACG,IAAP,CAAY,MAAZ,EAAoB,0BAApB;AACH,KAFD;AAGAH,IAAAA,MAAM,CAACC,EAAP,CAAU,QAAV,EAAqBC,IAAD,IAAS;AACzBN,MAAAA,WAAW,CAACD,QAAQ,CAACS,IAAT,CAAcF,IAAd,CAAD,CAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,QAAtB;AACH,KAHD;AAIH,GARQ,EAQN,CAACA,QAAD,CARM,CAAT;;AAUA,QAAMY,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAT,IAAAA,MAAM,CAACG,IAAP,CAAY,MAAZ,EAAoBN,UAApB;AACH,GAHD;;AAIA,QAAMa,YAAY,GAAIF,KAAD,IAAW;AAC5BV,IAAAA,aAAa,CAACU,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAb;AACH,GAFD;;AAIA,MAAIjB,QAAQ,CAACkB,MAAb,EAAqBR,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBX,QAAnB;AACrBU,EAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEG,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ,CADJ;AAmBH;;AAED,eAAehB,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:4000\";\n\nfunction Chat() {\n\n    const [chatData, setChatData] = useState([]);\n    const [inputValue, setInputValue] = useState(\"\");\n    const cc = [];\n\n    const socket = socketIOClient(ENDPOINT);\n    useEffect(() => {\n        socket.on('connect', function (data) {\n            socket.emit('join', 'Hello server from client');\n        });\n        socket.on('thread', (data)=> {\n            setChatData(chatData.push(data));\n            console.log('effect', chatData)\n        })\n    }, [chatData])\n    \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        socket.emit('mess', inputValue);\n    }\n    const handleChange = (event) => {\n        setInputValue(event.target.value)\n    }\n\n    if (chatData.length) console.log('zxc', chatData)\n    console.log(cc)\n    \n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" onChange={handleChange}></input>\n                <button>Chat</button>\n            </form>\n            {/* <ul>\n                {\n                    chatData.map((item, index)=>{\n                        return(\n                            <div key={index}>\n                                {item}\n                            </div>\n                        )\n                    })\n                }\n            </ul> */}\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}