{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Projects/OnlineShop-ASP.net/frontend-c#/src/components/News/NewsBody.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../App.css';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport NewsNavbar from './NewsNavbar';\nimport NewsBodyBig from './NewsBodyBig';\nimport NewBodySmall from './NewBodySmall';\nimport NewsBodyPag from './NewsBodyPag';\nimport NewsBodyWidget from './NewsBodyWidget';\n\nfunction NewsBody(props) {\n  const [news, setNews] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const newsPerPage = 5;\n  const [currentTab, setCurrentTab] = useState(-1);\n  const [currentTabText, setCurrentTabText] = useState(\"\");\n  let firstPost = [];\n  let sortedCate = [];\n  let nextPosts = [];\n  let splicedCate = [];\n  let pages = [];\n  let pageNumbers = []; //Số trang được chia ra\n\n  const [searchNews, setSearchNews] = useState(null);\n  const [searchErr, setSearchErr] = useState(null);\n  useEffect(() => {\n    if (searchNews) {\n      axios.get(`https://localhost:4000/api/news`).then(res => {\n        const search = [];\n\n        for (let i in res.data) {\n          if (res.data[i].newTitle.toLowerCase().includes(searchNews)) {\n            search.push(res.data[i]);\n          }\n        }\n\n        if (search.length > 0) {\n          setNews(search);\n          setSearchErr(null);\n        } else {\n          setSearchErr(\"No results found\");\n        }\n      });\n    } else {\n      if (props.history.location.pathname === \"/news\") {\n        axios.get(`https://localhost:4000/api/news`).then(res => {\n          setNews(res.data);\n        });\n      } else {\n        axios.get(`https://localhost:4000/api/news/category/${props.match.params.cate}`).then(res => {\n          setNews(res.data);\n        });\n      }\n    }\n  }, [props.history.location.pathname, props.match.params.cate, searchNews]);\n\n  const choosePage = event => {\n    window.scrollTo(0, 0);\n\n    if (Number(event.target.id) === 0) {\n      setCurrentPage(currentPage);\n    } else if (Number(event.target.id) === -1) {\n      if (currentPage > 1) {\n        setCurrentPage(currentPage - 1);\n      } else {\n        setCurrentPage(1);\n      }\n    } else if (Number(event.target.id) === 999) {\n      setCurrentPage(currentPage + 1);\n    } else {\n      setCurrentPage(Number(event.target.id));\n    }\n  };\n\n  if (news.length > 0) {\n    //Filt Posts depend on Category\n    let filterNews = [];\n\n    if (currentTab === -1) {\n      filterNews = news;\n    } else if (currentTabText) {\n      filterNews = news.filter(item => {\n        return item.newCate === currentTabText;\n      });\n    } else {\n      filterNews = news;\n    } //Panigation\n\n\n    const indexOfLastNews = currentPage * newsPerPage;\n    const indexOfFirstNews = indexOfLastNews - newsPerPage;\n    const currentNews = filterNews.slice(indexOfFirstNews, indexOfLastNews);\n\n    if (currentNews) {\n      firstPost = currentNews[0]; //Post of big image\n    }\n\n    nextPosts = currentNews.slice(1); //Panigation button\n\n    for (let i = 1; i <= Math.ceil(filterNews.length / newsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    if (currentPage === 2) {\n      pages.push(currentPage - 1, currentPage);\n    } else {\n      if (currentPage === 1 && pageNumbers.length === 1) {\n        pages.push();\n      } else if (currentPage === 1 && currentPage < pageNumbers.length) {\n        pages.push(currentPage, currentPage + 1);\n      } else if (currentPage === 2) {\n        pages.push(currentPage - 1, currentPage);\n      } else if (currentPage > 2 && currentPage < pageNumbers.length - 1) {\n        pages.push(currentPage - 1, currentPage);\n      } else if (currentPage === pageNumbers.length - 1) {\n        pages.push(currentPage - 1, currentPage);\n      } else {\n        pages.push(currentPage - 1, currentPage);\n      }\n    } //Get all category\n\n\n    const cate = Object.values(news.reduce((a, {\n      newCate\n    }) => {\n      a[newCate] = a[newCate] || {\n        newCate,\n        count: 0\n      };\n      a[newCate].count++;\n      return a;\n    }, Object.create(null))); //Sort and splice category by posts count\n\n    cate.sort((a, b) => b.count - a.count);\n    splicedCate = cate.splice(0, 5);\n    splicedCate.sort((a, b) => b.count - a.count);\n\n    for (let i = 0; i < splicedCate.length; i++) {\n      sortedCate.push(splicedCate[i].newCate);\n    }\n  }\n\n  const setCurrentTabFunc = data => {\n    setCurrentTab(data);\n  };\n\n  const setCurrentTabTextFunc = data => {\n    setCurrentTabText(data);\n  };\n\n  const setCurrentPageFunc = data => {\n    setCurrentPage(data);\n  };\n\n  const cateLink = `/news/category/${firstPost.newCate}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewsBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewsNavbar, {\n    setCurrentTab: setCurrentTabFunc,\n    setCurrentTabText: setCurrentTabTextFunc,\n    setCurrentPage: setCurrentPageFunc,\n    currentTab: currentTab,\n    currentTabText: currentTabText,\n    sortedCate: sortedCate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newsbody-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newsbody-post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NewsBodyBig, {\n    firstPost: firstPost,\n    cateLink: cateLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }), nextPosts.map((item, index) => {\n    return /*#__PURE__*/React.createElement(NewBodySmall, {\n      item: item,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    });\n  }), /*#__PURE__*/React.createElement(NewsBodyPag, {\n    choosePage: choosePage,\n    currentPage: currentPage,\n    pages: pages,\n    pageNumbers: pageNumbers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(NewsBodyWidget, {\n    searchErr: searchErr,\n    setSearchNews: setSearchNews,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newsbody-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default withRouter(NewsBody);","map":{"version":3,"sources":["/Users/namduong/Projects/OnlineShop-ASP.net/frontend-c#/src/components/News/NewsBody.js"],"names":["React","useEffect","useState","axios","withRouter","NewsNavbar","NewsBodyBig","NewBodySmall","NewsBodyPag","NewsBodyWidget","NewsBody","props","news","setNews","currentPage","setCurrentPage","newsPerPage","currentTab","setCurrentTab","currentTabText","setCurrentTabText","firstPost","sortedCate","nextPosts","splicedCate","pages","pageNumbers","searchNews","setSearchNews","searchErr","setSearchErr","get","then","res","search","i","data","newTitle","toLowerCase","includes","push","length","history","location","pathname","match","params","cate","choosePage","event","window","scrollTo","Number","target","id","filterNews","filter","item","newCate","indexOfLastNews","indexOfFirstNews","currentNews","slice","Math","ceil","Object","values","reduce","a","count","create","sort","b","splice","setCurrentTabFunc","setCurrentTabTextFunc","setCurrentPageFunc","cateLink","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../../App.css';\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom';\nimport NewsNavbar from './NewsNavbar';\nimport NewsBodyBig from './NewsBodyBig';\nimport NewBodySmall from './NewBodySmall';\nimport NewsBodyPag from './NewsBodyPag';\nimport NewsBodyWidget from './NewsBodyWidget';\n\nfunction NewsBody(props) {\n    const [news, setNews] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const newsPerPage = 5;\n    const [currentTab, setCurrentTab] = useState(-1);\n    const [currentTabText, setCurrentTabText] = useState(\"\");\n    let firstPost = [];\n    let sortedCate = [];\n    let nextPosts = [];\n    let splicedCate = [];\n    let pages = [];\n    let pageNumbers = []; //Số trang được chia ra\n    const [searchNews, setSearchNews] = useState(null)\n    const [searchErr, setSearchErr] = useState(null)\n\n    useEffect(() => {\n        if (searchNews) {\n            axios.get(`https://localhost:4000/api/news`)\n                .then(res => { \n                    const search = []\n                    for (let i in res.data) { \n                        if ((res.data[i].newTitle).toLowerCase().includes(searchNews)) {\n                            search.push(res.data[i])\n                        }\n                    }\n                    if (search.length > 0) {\n                        setNews(search) \n                        setSearchErr(null)\n                    } else { \n                        setSearchErr(\"No results found\") \n                    }\n                }\n            )\n        } else {\n            if (props.history.location.pathname === \"/news\") {\n                axios.get(`https://localhost:4000/api/news`)\n                    .then(res => {\n                        setNews(res.data)\n                    }\n                )\n            } else {\n                axios.get(`https://localhost:4000/api/news/category/${props.match.params.cate}`)\n                    .then(res => {\n                        setNews(res.data)\n                    }\n                )\n            }\n        }\n    },[props.history.location.pathname, props.match.params.cate, searchNews])\n\n    const choosePage = (event) => {\n        window.scrollTo(0,0);\n        if (Number(event.target.id) === 0) {\n            setCurrentPage(currentPage)\n        } else if (Number(event.target.id) === -1) {\n            if (currentPage > 1) {\n                setCurrentPage(currentPage - 1)\n            } else {\n                setCurrentPage(1)\n            }\n        } else if (Number(event.target.id) === 999) {\n            setCurrentPage(currentPage + 1)\n        } else {\n            setCurrentPage(Number(event.target.id))\n        }\n    }\n    \n    if (news.length > 0) {\n        //Filt Posts depend on Category\n        let filterNews = [];\n        if (currentTab === -1) {\n            filterNews = news;\n        } else if (currentTabText) {\n            filterNews = news.filter((item) => {\n                return item.newCate === currentTabText\n            })\n        } else {\n            filterNews = news;\n        }\n        //Panigation\n        const indexOfLastNews = currentPage * newsPerPage;\n        const indexOfFirstNews = indexOfLastNews - newsPerPage;\n        const currentNews = filterNews.slice(indexOfFirstNews, indexOfLastNews);\n        if (currentNews) {\n            firstPost = currentNews[0]; //Post of big image\n        }\n        nextPosts = currentNews.slice(1);\n\n        //Panigation button\n        for (let i = 1; i <= Math.ceil(filterNews.length / newsPerPage); i++) {\n            pageNumbers.push(i);\n        }\n        if (currentPage === 2) {\n            pages.push(currentPage - 1, currentPage);\n        } else {\n            if (currentPage === 1 && pageNumbers.length === 1) {\n                pages.push();\n            } else if (currentPage === 1 && currentPage < pageNumbers.length) {\n                pages.push(currentPage, currentPage + 1);\n            }else if (currentPage === 2) {\n                pages.push(currentPage - 1, currentPage);\n            } else if (currentPage > 2 && currentPage < pageNumbers.length - 1) {\n                pages.push(currentPage -1, currentPage);\n            } else if (currentPage === pageNumbers.length - 1) {\n                pages.push(currentPage - 1, currentPage);\n            } else {\n                pages.push(currentPage - 1, currentPage);\n            }\n        }\n        \n        //Get all category\n        const cate = Object.values(news.reduce((a, {newCate}) => {\n            a[newCate] = a[newCate] || {newCate, count: 0};\n            a[newCate].count++;\n            return a;\n        }, Object.create(null)));\n        //Sort and splice category by posts count\n        cate.sort((a,b) =>  b.count - a.count)\n        splicedCate = cate.splice(0,5);\n        splicedCate.sort((a, b) => b.count - a.count);\n\n        for (let i = 0; i < splicedCate.length; i++) {\n            sortedCate.push(splicedCate[i].newCate);\n        }\n    }\n    const setCurrentTabFunc = (data) => {\n        setCurrentTab(data)\n    }\n    const setCurrentTabTextFunc = (data) => {\n        setCurrentTabText(data)\n    }\n    const setCurrentPageFunc = (data) => {\n        setCurrentPage(data)\n    }\n    const cateLink = (`/news/category/${firstPost.newCate}`)\n\n    return(\n        <div className=\"NewsBody\">\n            <NewsNavbar\n                setCurrentTab = {setCurrentTabFunc}\n                setCurrentTabText = {setCurrentTabTextFunc}\n                setCurrentPage = {setCurrentPageFunc}\n                currentTab = {currentTab}\n                currentTabText = {currentTabText}\n                sortedCate = {sortedCate}\n            />\n            <div className=\"newsbody-container\">\n                <div className=\"newsbody-post\">\n                    <NewsBodyBig\n                        firstPost = {firstPost}\n                        cateLink = {cateLink}\n                    />\n                    {nextPosts.map((item, index) => {\n                        return (\n                            <NewBodySmall\n                                item={item}\n                                key={index}\n                            />\n                        )\n                    })}\n                    <NewsBodyPag\n                        choosePage = {choosePage}\n                        currentPage = {currentPage}\n                        pages = {pages}\n                        pageNumbers = {pageNumbers}\n                    />\n                </div>\n                <NewsBodyWidget\n                    searchErr={searchErr}\n                    setSearchNews= {setSearchNews}\n                />\n            </div>\n            <div className=\"newsbody-line\"></div>\n        </div>\n    )\n}\nexport default withRouter(NewsBody);"]},"metadata":{},"sourceType":"module"}