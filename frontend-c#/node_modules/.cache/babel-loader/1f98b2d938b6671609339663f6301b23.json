{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Projects/frontend-c#/src/components/admin/Dashboard/Inbox/DashboardInbox.js\";\nimport React, { useRef } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { useEffect, useState } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nconst ENDPOINT = \"http://pe.heromc.net:4000\";\nexport default function DashboardInbox(props) {\n  const [allChatData, setAllChatData] = useState([]);\n  const [constAllChatData, setConstAllChatData] = useState([]);\n  const [roomId, setRoomId] = useState(0);\n  const [roomIndex, setRoomIndex] = useState(0);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const socket = socketIOClient(ENDPOINT);\n  useEffect(() => {\n    socket.emit('join', {\n      sessionId: 'admin',\n      isAdmin: true\n    });\n    socket.on('send-all-chat', data => {\n      setAllChatData(data);\n      setConstAllChatData(data);\n\n      if (window.innerWidth > 700) {\n        if (data.length > 0) {\n          setRoomId(data[0].sessionId);\n          if (messageRef.current) messageRef.current.scrollIntoView({\n            behavior: \"smooth\"\n          });\n        }\n      }\n    });\n    socket.on(\"client-msg\", function (data) {\n      setAllChatData(data.allchat);\n      setConstAllChatData(data.allchat);\n      if (messageRef.current) messageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    });\n\n    if (window.innerWidth <= 700) {\n      setRoomIndex(null);\n    }\n  }, []);\n\n  const handleOnChange = event => {\n    setChatInput(event.target.value);\n  };\n\n  const sendChatInput = event => {\n    event.preventDefault();\n    setChatInput(\"\");\n\n    if (chatInput === \"\") {\n      return;\n    }\n\n    const data = {\n      fromAdmin: true,\n      text: chatInput,\n      time: new Date(),\n      roomId: roomId\n    };\n    socket.emit('messageSend-admin', data);\n    axios.get(`https://localhost:4000/api/chat`).then(res => {\n      setAllChatData(res.data);\n      setConstAllChatData(res.data);\n    });\n    setTimeout(() => {\n      if (messageRef.current) messageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }, 100);\n  };\n\n  const messageRef = useRef([]);\n\n  const filterOnSearch = value => {\n    const search = [];\n\n    for (let i in constAllChatData) {\n      if (constAllChatData[i].chatName.toLowerCase().includes(value)) {\n        search.push(constAllChatData[i]);\n      }\n    }\n\n    setAllChatData(search);\n  };\n\n  const sortDateChat = [...allChatData]; // if (allChatData.length > 0) {\n  //     sortDateChat.sort((a,b) => {\n  //         var dateA = new Date(a.chatContent[a.chatContent.length - 1].time)\n  //         var dateB = new Date(b.chatContent[b.chatContent.length - 1].time)\n  //         return dateB - dateA\n  //     })\n  // }\n\n  const [openTimeTooltip, setOpenTimeTooltip] = useState(\"\");\n  console.log(roomIndex);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-admin flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search\",\n    value: searchInput,\n    onChange: event => {\n      setSearchInput(event.target.value);\n      filterOnSearch(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, sortDateChat.length > 0 && sortDateChat.map((item, index) => {\n    const date = new Date(item.chatContent[item.chatContent.length - 1].time);\n    const toDay = new Date();\n    const day = date.getDay();\n    const dayInMonth = date.getDate();\n    const month = date.getMonth() + 1;\n    const hour = date.getHours();\n    const minute = date.getMinutes();\n    var strTime = \"\";\n\n    if (dayInMonth === toDay.getDate()) {\n      if (hour < 10) {\n        strTime += `- 0${hour}`;\n      } else {\n        strTime += `- ${hour}`;\n      }\n\n      if (minute < 10) {\n        strTime += `:0${minute}`;\n      } else {\n        strTime += `:${minute}`;\n      }\n    }\n\n    if (dayInMonth < toDay.getDate()) {\n      strTime = `- T${day}`;\n    }\n\n    if (toDay.getDate() - dayInMonth > 6) {\n      strTime = \"\";\n\n      if (dayInMonth < 10) {\n        strTime += `- 0${dayInMonth}`;\n      } else {\n        strTime += `- ${dayInMonth}`;\n      }\n\n      if (month < 10) {\n        strTime += `/0${month}`;\n      } else {\n        strTime += `/${month}`;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: roomIndex === index ? \"boxchat-item flex boxchat-item-active\" : \"boxchat-item flex\",\n      onClick: () => {\n        setRoomId(item.sessionId);\n        setRoomIndex(index);\n        setTimeout(() => {\n          if (messageRef.current) messageRef.current.scrollIntoView({\n            behavior: \"smooth\"\n          });\n        }, 10);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxchat-avt flex-center\",\n      style: {\n        pointerEvents: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 37\n      }\n    }, item.userInfo && /*#__PURE__*/React.createElement(\"img\", {\n      src: item.userInfo.userAvt,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 45\n      }\n    }), !item.userInfo && /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://scontent-sin6-1.xx.fbcdn.net/v/t1.0-9/73321413_146697059956770_7174055866474168320_n.jpg?_nc_cat=107&ccb=2&_nc_sid=09cbfe&_nc_ohc=ni-Cr2_KyP0AX-BfQkv&_nc_ht=scontent-sin6-1.xx&oh=9cbda6699093e8dbb061a92c5bb58c7e&oe=5FCB1CFC\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-col\",\n      style: {\n        pointerEvents: 'none',\n        width: '100%',\n        justifyContent: 'space-between'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"boxchat-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 41\n      }\n    }, item.chatName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxchat-first flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 41\n      }\n    }, item.chatContent[item.chatContent.length - 1].fromAdmin === true && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 49\n      }\n    }, \"B\\u1EA1n: \", item.chatContent[item.chatContent.length - 1].text), !item.chatContent[item.chatContent.length - 1].fromAdmin && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 49\n      }\n    }, item.chatContent[item.chatContent.length - 1].text), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 45\n      }\n    }, strTime))));\n  }))), typeof roomIndex === 'number' && window.innerWidth <= 700 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-mobile flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-mobile-header flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-mobile-header-leave\",\n    onClick: () => {\n      setRoomIndex(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronLeft,\n    style: {\n      pointerEvents: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  })), sortDateChat.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box-avt flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 33\n    }\n  }, sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"img\", {\n    src: sortDateChat[Number(roomIndex)].userInfo.userAvt,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 41\n    }\n  }), !sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://scontent-sin6-1.xx.fbcdn.net/v/t1.0-9/73321413_146697059956770_7174055866474168320_n.jpg?_nc_cat=107&ccb=2&_nc_sid=09cbfe&_nc_ohc=ni-Cr2_KyP0AX-BfQkv&_nc_ht=scontent-sin6-1.xx&oh=9cbda6699093e8dbb061a92c5bb58c7e&oe=5FCB1CFC\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }, sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"boxchat-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 41\n    }\n  }, allChatData[Number(roomIndex)].chatName), !sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    style: {\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"boxchat-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 45\n    }\n  }, allChatData[Number(roomIndex)].chatName), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: '5px',\n      color: '#777',\n      fontSize: '16px',\n      fontFamily: 'sans-serif'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 45\n    }\n  }, \"(anonymous)\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-mobile-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-contents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, sortDateChat.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-col chat-box-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 33\n    }\n  }, sortDateChat[roomIndex].chatContent.map((item, index) => {\n    const date = new Date(item.time);\n    const toDay = new Date();\n    const day = date.getDay();\n    const dayInMonth = date.getDate();\n    const month = date.getMonth() + 1;\n    const hour = date.getHours();\n    const minute = date.getMinutes();\n    let chatTime = \"\";\n\n    if (dayInMonth === toDay.getDate()) {\n      if (hour < 10) {\n        chatTime += `0${hour}`;\n      } else {\n        chatTime += `${hour}`;\n      }\n\n      if (minute < 10) {\n        chatTime += `:0${minute}`;\n      } else {\n        chatTime += `:${minute}`;\n      }\n    }\n\n    if (dayInMonth < toDay.getDate()) {\n      chatTime = `T${day}`;\n    }\n\n    if (toDay.getDate() - dayInMonth > 6) {\n      chatTime = \"\";\n\n      if (dayInMonth < 10) {\n        chatTime += `0${dayInMonth}`;\n      } else {\n        chatTime += `${dayInMonth}`;\n      }\n\n      if (month < 10) {\n        chatTime += `/0${month}`;\n      } else {\n        chatTime += `/${month}`;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: messageRef,\n      key: index,\n      className: \"chat-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 49\n      }\n    }, item.fromAdmin !== true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-chat-clienttext\",\n      onMouseEnter: () => {\n        setOpenTimeTooltip(item.time);\n      },\n      onMouseLeave: () => {\n        setOpenTimeTooltip(\"\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 61\n      }\n    }, item.text), openTimeTooltip === item.time && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time-tooltip-client flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 69\n      }\n    }, chatTime))), item.fromAdmin === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-chat-admintext\",\n      onMouseEnter: () => {\n        setOpenTimeTooltip(item.time);\n      },\n      onMouseLeave: () => {\n        setOpenTimeTooltip(\"\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        pointerEvents: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 61\n      }\n    }, item.text), openTimeTooltip === item.time && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time-tooltip flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 69\n      }\n    }, chatTime))));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-type boxchat-mobile-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendChatInput,\n    className: \"boxchat-type-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleOnChange,\n    value: chatInput,\n    placeholder: \"Type your message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 29\n    }\n  }, \"Send\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }, sortDateChat.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box-avt flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 29\n    }\n  }, sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"img\", {\n    src: sortDateChat[Number(roomIndex)].userInfo.userAvt,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 37\n    }\n  }), !sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://scontent-sin6-1.xx.fbcdn.net/v/t1.0-9/73321413_146697059956770_7174055866474168320_n.jpg?_nc_cat=107&ccb=2&_nc_sid=09cbfe&_nc_ohc=ni-Cr2_KyP0AX-BfQkv&_nc_ht=scontent-sin6-1.xx&oh=9cbda6699093e8dbb061a92c5bb58c7e&oe=5FCB1CFC\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 29\n    }\n  }, sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"boxchat-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 37\n    }\n  }, allChatData[Number(roomIndex)].chatName), !sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    style: {\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"boxchat-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 41\n    }\n  }, allChatData[Number(roomIndex)].chatName), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: '5px',\n      color: '#777',\n      fontSize: '16px',\n      fontFamily: 'sans-serif'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 41\n    }\n  }, \"(anonymous)\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-contents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 21\n    }\n  }, sortDateChat.length > 0 && window.innerWidth > 700 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-col chat-box-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 29\n    }\n  }, sortDateChat[roomIndex].chatContent.map((item, index) => {\n    const date = new Date(item.time);\n    const toDay = new Date();\n    const day = date.getDay();\n    const dayInMonth = date.getDate();\n    const month = date.getMonth() + 1;\n    const hour = date.getHours();\n    const minute = date.getMinutes();\n    let chatTime = \"\";\n\n    if (dayInMonth === toDay.getDate()) {\n      if (hour < 10) {\n        chatTime += `0${hour}`;\n      } else {\n        chatTime += `${hour}`;\n      }\n\n      if (minute < 10) {\n        chatTime += `:0${minute}`;\n      } else {\n        chatTime += `:${minute}`;\n      }\n    }\n\n    if (dayInMonth < toDay.getDate()) {\n      chatTime = `T${day}`;\n    }\n\n    if (toDay.getDate() - dayInMonth > 6) {\n      chatTime = \"\";\n\n      if (dayInMonth < 10) {\n        chatTime += `0${dayInMonth}`;\n      } else {\n        chatTime += `${dayInMonth}`;\n      }\n\n      if (month < 10) {\n        chatTime += `/0${month}`;\n      } else {\n        chatTime += `/${month}`;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: messageRef,\n      key: index,\n      className: \"chat-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 45\n      }\n    }, item.fromAdmin !== true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-chat-clienttext\",\n      onMouseEnter: () => {\n        setOpenTimeTooltip(item.time);\n      },\n      onMouseLeave: () => {\n        setOpenTimeTooltip(\"\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 57\n      }\n    }, item.text), openTimeTooltip === item.time && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time-tooltip-client flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 65\n      }\n    }, chatTime))), item.fromAdmin === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-chat-admintext\",\n      onMouseEnter: () => {\n        setOpenTimeTooltip(item.time);\n      },\n      onMouseLeave: () => {\n        setOpenTimeTooltip(\"\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        pointerEvents: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 57\n      }\n    }, item.text), openTimeTooltip === item.time && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time-tooltip flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 65\n      }\n    }, chatTime))));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendChatInput,\n    className: \"boxchat-type-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleOnChange,\n    value: chatInput,\n    placeholder: \"Type your message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 25\n    }\n  }, \"Send\")))));\n}","map":{"version":3,"sources":["/Users/namduong/Projects/frontend-c#/src/components/admin/Dashboard/Inbox/DashboardInbox.js"],"names":["React","useRef","useEffect","useState","socketIOClient","axios","FontAwesomeIcon","faChevronLeft","ENDPOINT","DashboardInbox","props","allChatData","setAllChatData","constAllChatData","setConstAllChatData","roomId","setRoomId","roomIndex","setRoomIndex","chatInput","setChatInput","searchInput","setSearchInput","socket","emit","sessionId","isAdmin","on","data","window","innerWidth","length","messageRef","current","scrollIntoView","behavior","allchat","handleOnChange","event","target","value","sendChatInput","preventDefault","fromAdmin","text","time","Date","get","then","res","setTimeout","filterOnSearch","search","i","chatName","toLowerCase","includes","push","sortDateChat","openTimeTooltip","setOpenTimeTooltip","console","log","map","item","index","date","chatContent","toDay","day","getDay","dayInMonth","getDate","month","getMonth","hour","getHours","minute","getMinutes","strTime","pointerEvents","userInfo","userAvt","width","justifyContent","Number","alignItems","marginLeft","color","fontSize","fontFamily","chatTime"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { useEffect, useState } from 'react'\nimport socketIOClient from \"socket.io-client\"\nimport axios from 'axios'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome' \nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\n\nconst ENDPOINT = \"http://pe.heromc.net:4000\";\n\nexport default function DashboardInbox(props) {\n    \n    const [allChatData, setAllChatData] = useState([])\n    const [constAllChatData, setConstAllChatData] = useState([])\n    const [roomId, setRoomId] = useState(0);\n    const [roomIndex, setRoomIndex] = useState(0)\n    const [chatInput, setChatInput] = useState(\"\")\n    const [searchInput, setSearchInput] = useState(\"\")\n\n    const socket = socketIOClient(ENDPOINT);\n\n    useEffect(() => {\n        socket.emit('join', {\n            sessionId: 'admin',\n            isAdmin: true\n        }) \n        socket.on('send-all-chat', (data)=>{\n            setAllChatData(data)\n            setConstAllChatData(data)\n            if (window.innerWidth > 700) {\n                if (data.length > 0) {\n                    setRoomId(data[0].sessionId)\n                    if (messageRef.current) messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n                }\n            }\n        })\n        socket.on(\"client-msg\", function(data) {\n            setAllChatData(data.allchat)\n            setConstAllChatData(data.allchat)\n            if (messageRef.current) messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n        })\n        if (window.innerWidth <= 700) {\n            setRoomIndex(null)\n        }\n    },[])\n\n    const handleOnChange = (event) => {\n        setChatInput(event.target.value)\n    }\n\n    const sendChatInput = (event) => {\n        event.preventDefault();\n        setChatInput(\"\")\n        if (chatInput === \"\") {\n            return\n        }\n        const data = {\n            fromAdmin: true,\n            text: chatInput,\n            time: new Date(),\n            roomId: roomId\n        }\n        socket.emit('messageSend-admin', data)\n\n        axios.get(`https://localhost:4000/api/chat`)\n            .then(res => {\n                setAllChatData(res.data)\n                setConstAllChatData(res.data)\n            }\n        )\n        setTimeout(()=>{\n            if (messageRef.current) messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n        }, 100)\n    }\n\n    const messageRef = useRef([]);\n\n    const filterOnSearch = (value) => {\n        const search = []\n        for (let i in constAllChatData) {\n            if ((constAllChatData[i].chatName).toLowerCase().includes(value)) {\n                search.push(constAllChatData[i])\n            }\n        }\n        setAllChatData(search)\n    }\n\n    const sortDateChat = [...allChatData]\n    // if (allChatData.length > 0) {\n\n    //     sortDateChat.sort((a,b) => {\n    //         var dateA = new Date(a.chatContent[a.chatContent.length - 1].time)\n    //         var dateB = new Date(b.chatContent[b.chatContent.length - 1].time)\n    //         return dateB - dateA\n    //     })\n    // }\n\n    const [openTimeTooltip, setOpenTimeTooltip] = useState(\"\")\n\n    console.log(roomIndex)\n    return (\n        <div className=\"boxchat-admin flex\">\n            <div className=\"boxchat-left\">\n                <div className=\"boxchat-search\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"Search\"\n                        value={searchInput}\n                        onChange={(event)=>{\n                            setSearchInput(event.target.value)\n                            filterOnSearch(event.target.value)\n                        }}\n                    ></input>\n                </div>\n                <div className=\"boxchat-list\">\n                    { sortDateChat.length > 0 && \n                        sortDateChat.map((item,index)=>{\n                            const date = new Date(item.chatContent[item.chatContent.length - 1].time)\n                            const toDay = new Date()\n                            const day = date.getDay();\n                            const dayInMonth = date.getDate();\n                            const month = date.getMonth() + 1;\n                            const hour = date.getHours()\n                            const minute = date.getMinutes()\n                            var strTime = \"\"\n                            if (dayInMonth === toDay.getDate()) {\n                                if (hour < 10) {\n                                    strTime += `- 0${hour}`\n                                } else {\n                                    strTime += `- ${hour}`\n                                }\n                                if (minute < 10){\n                                    strTime += `:0${minute}`\n                                } else {\n                                    strTime += `:${minute}`\n                                }\n                            } \n                            if (dayInMonth < toDay.getDate()) {\n                                strTime = `- T${day}`\n                            } \n                            if ((toDay.getDate()- dayInMonth) > 6) {\n                                strTime = \"\"\n                                if (dayInMonth < 10) {\n                                    strTime += `- 0${dayInMonth}`\n                                } else {\n                                    strTime += `- ${dayInMonth}`\n                                }\n                                if (month < 10){\n                                    strTime += `/0${month}`\n                                } else {\n                                    strTime += `/${month}`\n                                }\n                            }\n                            return (\n                                <div \n                                    key={index}\n                                    className={roomIndex === index ? \"boxchat-item flex boxchat-item-active\" : \"boxchat-item flex\"}\n                                    onClick={()=>{\n                                        setRoomId(item.sessionId)\n                                        setRoomIndex(index)\n                                        setTimeout(()=>{\n                                            if (messageRef.current) messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n                                        }, 10)\n                                    }}\n                                >\n                                    <div className=\"boxchat-avt flex-center\" style={{pointerEvents: 'none'}}>\n                                        { item.userInfo && \n                                            <img \n                                                src={item.userInfo.userAvt}\n                                                alt=\"\"\n                                            ></img>\n                                        }\n                                        { !item.userInfo && \n                                            <img \n                                                src={\"https://scontent-sin6-1.xx.fbcdn.net/v/t1.0-9/73321413_146697059956770_7174055866474168320_n.jpg?_nc_cat=107&ccb=2&_nc_sid=09cbfe&_nc_ohc=ni-Cr2_KyP0AX-BfQkv&_nc_ht=scontent-sin6-1.xx&oh=9cbda6699093e8dbb061a92c5bb58c7e&oe=5FCB1CFC\"}\n                                                alt=\"\"\n                                            ></img>\n                                        }\n                                    </div>\n                                    <div className=\"flex-col\" style={{pointerEvents: 'none', width: '100%', justifyContent: 'space-between'}}>\n                                        <p className=\"boxchat-name\">{item.chatName}</p>\n                                        <div className=\"boxchat-first flex\">\n                                            {\n                                                item.chatContent[item.chatContent.length - 1].fromAdmin === true &&\n                                                <p>Bạn: {item.chatContent[item.chatContent.length - 1].text}</p>\n                                            }\n                                            {\n                                                !item.chatContent[item.chatContent.length - 1].fromAdmin &&\n                                                <p>{item.chatContent[item.chatContent.length - 1].text}</p>\n                                            }\n                                            <p>{strTime}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n            {\n                (typeof(roomIndex) === 'number' && window.innerWidth <= 700)&&\n                <div className=\"boxchat-mobile flex\">\n                    <div className=\"boxchat-mobile-header flex\">\n                        <div \n                            className=\"boxchat-mobile-header-leave\"\n                            onClick={()=>{\n                                setRoomIndex(null)\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faChevronLeft} style={{pointerEvents: 'none'}}/>\n                        </div>\n                        { sortDateChat.length > 0 &&\n                            <div className=\"boxchat-box-info\">\n                                <div className=\"boxchat-box-avt flex-center\">\n                                    { sortDateChat[Number(roomIndex)].userInfo && \n                                        <img \n                                            src={sortDateChat[Number(roomIndex)].userInfo.userAvt}\n                                            alt=\"\"\n                                        ></img>\n                                    }\n                                    { !sortDateChat[Number(roomIndex)].userInfo && \n                                        <img \n                                            src={\"https://scontent-sin6-1.xx.fbcdn.net/v/t1.0-9/73321413_146697059956770_7174055866474168320_n.jpg?_nc_cat=107&ccb=2&_nc_sid=09cbfe&_nc_ohc=ni-Cr2_KyP0AX-BfQkv&_nc_ht=scontent-sin6-1.xx&oh=9cbda6699093e8dbb061a92c5bb58c7e&oe=5FCB1CFC\"}\n                                            alt=\"\"\n                                        ></img>\n                                    }\n                                </div>\n                                <div className=\"flex-center\">\n                                    { sortDateChat[Number(roomIndex)].userInfo && \n                                        <p className=\"boxchat-name\">{allChatData[Number(roomIndex)].chatName}</p>\n                                    }\n                                    { !sortDateChat[Number(roomIndex)].userInfo &&\n                                        <div className=\"flex\" style={{alignItems: 'flex-end'}}>\n                                            <p className=\"boxchat-name\">{allChatData[Number(roomIndex)].chatName}</p>\n                                            <p style={{marginLeft: '5px', color: '#777', fontSize: '16px', fontFamily: 'sans-serif'}}>(anonymous)</p>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                        }\n                    </div>\n                    <div className=\"boxchat-mobile-main\">\n                        <div \n                            className=\"boxchat-contents\"\n                        >\n                            { sortDateChat.length > 0 &&\n                                <div \n                                    className=\"flex-col chat-box-list\">\n                                    {\n                                        sortDateChat[roomIndex].chatContent.map((item, index) => {\n                                            const date = new Date(item.time)\n                                            const toDay = new Date()\n                                            const day = date.getDay();\n                                            const dayInMonth = date.getDate();\n                                            const month = date.getMonth() + 1;\n                                            const hour = date.getHours()\n                                            const minute = date.getMinutes()\n                                            let chatTime = \"\"\n                                            if (dayInMonth === toDay.getDate()) {\n                                                if (hour < 10) {\n                                                    chatTime += `0${hour}`\n                                                } else {\n                                                    chatTime += `${hour}`\n                                                }\n                                                if (minute < 10){\n                                                    chatTime += `:0${minute}`\n                                                } else {\n                                                    chatTime += `:${minute}`\n                                                }\n                                            } \n                                            if (dayInMonth < toDay.getDate()) {\n                                                chatTime = `T${day}`\n                                            } \n                                            if ((toDay.getDate()- dayInMonth) > 6) {\n                                                chatTime = \"\"\n                                                if (dayInMonth < 10) {\n                                                    chatTime += `0${dayInMonth}`\n                                                } else {\n                                                    chatTime += `${dayInMonth}`\n                                                }\n                                                if (month < 10){\n                                                    chatTime += `/0${month}`\n                                                } else {\n                                                    chatTime += `/${month}`\n                                                }\n                                            }\n                                            return (\n                                                <div \n                                                    ref={messageRef}\n                                                    key={index}\n                                                    className=\"chat-list\">\n                                                    {\n                                                        item.fromAdmin !== true && \n                                                        <div className=\"box-chat-clienttext\"\n                                                            onMouseEnter={()=>{\n                                                                setOpenTimeTooltip(item.time)\n                                                            }}\n                                                            onMouseLeave={()=>{\n                                                                setOpenTimeTooltip(\"\")\n                                                            }}\n                                                        >\n                                                            <p>{item.text}</p>\n                                                            { openTimeTooltip === item.time &&\n                                                                <div className=\"time-tooltip-client flex-center\">\n                                                                    <p>{chatTime}</p>\n                                                                </div>\n                                                            }\n                                                        </div>\n                                                    }\n                                                    {\n                                                        item.fromAdmin === true && \n                                                        <div className=\"box-chat-admintext\"\n                                                            onMouseEnter={()=>{\n                                                                setOpenTimeTooltip(item.time)\n                                                            }}\n                                                            onMouseLeave={()=>{\n                                                                setOpenTimeTooltip(\"\")\n                                                            }}\n                                                        >\n                                                            <p style={{pointerEvents: 'none'}}>{item.text}</p>\n                                                            { openTimeTooltip === item.time &&\n                                                                <div className=\"time-tooltip flex-center\">\n                                                                    <p>{chatTime}</p>\n                                                                </div>\n                                                            }\n                                                        </div>\n                                                    }\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                </div>  \n                            }\n                        </div>                    \n                    </div>\n                    <div className=\"boxchat-type boxchat-mobile-type\">\n                        <form onSubmit={sendChatInput} className=\"boxchat-type-form\">\n                            <input \n                                type=\"text\" \n                                onChange={handleOnChange}\n                                value={chatInput}\n                                placeholder=\"Type your message...\"\n                            ></input>\n                            <button>Send</button>\n                        </form>\n                    </div>\n                </div>\n            }\n            <div className=\"boxchat-main\">\n                <div className=\"boxchat-box\">\n                    { (sortDateChat.length>0) &&\n                        <div className=\"boxchat-box-info\">\n                            <div className=\"boxchat-box-avt flex-center\">\n                                { sortDateChat[Number(roomIndex)].userInfo && \n                                    <img \n                                        src={sortDateChat[Number(roomIndex)].userInfo.userAvt}\n                                        alt=\"\"\n                                    ></img>\n                                }\n                                { !sortDateChat[Number(roomIndex)].userInfo && \n                                    <img \n                                        src={\"https://scontent-sin6-1.xx.fbcdn.net/v/t1.0-9/73321413_146697059956770_7174055866474168320_n.jpg?_nc_cat=107&ccb=2&_nc_sid=09cbfe&_nc_ohc=ni-Cr2_KyP0AX-BfQkv&_nc_ht=scontent-sin6-1.xx&oh=9cbda6699093e8dbb061a92c5bb58c7e&oe=5FCB1CFC\"}\n                                        alt=\"\"\n                                    ></img>\n                                }\n                            </div>\n                            <div className=\"flex-center\">\n                                { sortDateChat[Number(roomIndex)].userInfo && \n                                    <p className=\"boxchat-name\">{allChatData[Number(roomIndex)].chatName}</p>\n                                }\n                                { !sortDateChat[Number(roomIndex)].userInfo &&\n                                    <div className=\"flex\" style={{alignItems: 'flex-end'}}>\n                                        <p className=\"boxchat-name\">{allChatData[Number(roomIndex)].chatName}</p>\n                                        <p style={{marginLeft: '5px', color: '#777', fontSize: '16px', fontFamily: 'sans-serif'}}>(anonymous)</p>\n                                    </div>\n                                }\n                            </div>\n                        </div>\n                    }\n                    <div \n                        className=\"boxchat-contents\"\n                    >\n                        { (sortDateChat.length>0 && window.innerWidth > 700)&&\n                            <div \n                                className=\"flex-col chat-box-list\">\n                                {\n                                    sortDateChat[roomIndex].chatContent.map((item, index) => {\n                                        const date = new Date(item.time)\n                                        const toDay = new Date()\n                                        const day = date.getDay();\n                                        const dayInMonth = date.getDate();\n                                        const month = date.getMonth() + 1;\n                                        const hour = date.getHours()\n                                        const minute = date.getMinutes()\n                                        let chatTime = \"\"\n                                        if (dayInMonth === toDay.getDate()) {\n                                            if (hour < 10) {\n                                                chatTime += `0${hour}`\n                                            } else {\n                                                chatTime += `${hour}`\n                                            }\n                                            if (minute < 10){\n                                                chatTime += `:0${minute}`\n                                            } else {\n                                                chatTime += `:${minute}`\n                                            }\n                                        } \n                                        if (dayInMonth < toDay.getDate()) {\n                                            chatTime = `T${day}`\n                                        } \n                                        if ((toDay.getDate()- dayInMonth) > 6) {\n                                            chatTime = \"\"\n                                            if (dayInMonth < 10) {\n                                                chatTime += `0${dayInMonth}`\n                                            } else {\n                                                chatTime += `${dayInMonth}`\n                                            }\n                                            if (month < 10){\n                                                chatTime += `/0${month}`\n                                            } else {\n                                                chatTime += `/${month}`\n                                            }\n                                        }\n                                        return (\n                                            <div \n                                                ref={messageRef}\n                                                key={index}\n                                                className=\"chat-list\">\n                                                {\n                                                    item.fromAdmin !== true && \n                                                    <div className=\"box-chat-clienttext\"\n                                                        onMouseEnter={()=>{\n                                                            setOpenTimeTooltip(item.time)\n                                                        }}\n                                                        onMouseLeave={()=>{\n                                                            setOpenTimeTooltip(\"\")\n                                                        }}\n                                                    >\n                                                        <p>{item.text}</p>\n                                                        { openTimeTooltip === item.time &&\n                                                            <div className=\"time-tooltip-client flex-center\">\n                                                                <p>{chatTime}</p>\n                                                            </div>\n                                                        }\n                                                    </div>\n                                                }\n                                                {\n                                                    item.fromAdmin === true && \n                                                    <div className=\"box-chat-admintext\"\n                                                        onMouseEnter={()=>{\n                                                            setOpenTimeTooltip(item.time)\n                                                        }}\n                                                        onMouseLeave={()=>{\n                                                            setOpenTimeTooltip(\"\")\n                                                        }}\n                                                    >\n                                                        <p style={{pointerEvents: 'none'}}>{item.text}</p>\n                                                        { openTimeTooltip === item.time &&\n                                                            <div className=\"time-tooltip flex-center\">\n                                                                <p>{chatTime}</p>\n                                                            </div>\n                                                        }\n                                                    </div>\n                                                }\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>  \n                        }\n                    </div>\n                </div>\n                <div className=\"boxchat-type\">\n                    <form onSubmit={sendChatInput} className=\"boxchat-type-form\">\n                        <input \n                            type=\"text\" \n                            onChange={handleOnChange}\n                            value={chatInput}\n                            placeholder=\"Type your message...\"\n                        ></input>\n                        <button>Send</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}