{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Inbox/DashboardInbox.js\";\nimport React, { useRef } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { useEffect, useState } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport axios from 'axios';\nconst ENDPOINT = \"http://localhost:4000\";\nexport default function DashboardInbox(props) {\n  const [allChatData, setAllChatData] = useState([]);\n  const [roomId, setRoomId] = useState(0);\n  const [roomIndex, setRoomIndex] = useState(0);\n  const [chatInput, setChatInput] = useState(\"\");\n  const socket = socketIOClient(ENDPOINT);\n  useEffect(() => {\n    socket.emit('join', {\n      sessionId: 'admin',\n      isAdmin: true\n    });\n    socket.on('send-all-chat', data => {\n      setAllChatData(data);\n      if (data.length > 0) setRoomId(data[0].sessionId); // messageRef.current.scrollIntoView({behavior: \"smooth\"})\n    });\n    socket.on(\"client-msg\", function (data) {\n      setAllChatData(data.allchat); // setTimeout(()=>{\n      //     messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n      // }, 100)\n    });\n  }, []);\n\n  const handleOnChange = event => {\n    setChatInput(event.target.value);\n  };\n\n  const sendChatInput = event => {\n    event.preventDefault();\n    const data = {\n      fromAdmin: true,\n      text: chatInput,\n      time: new Date(),\n      roomId: roomId\n    };\n    socket.emit('messageSend-admin', data);\n    axios.get(`http://localhost:4000/chat`).then(res => {\n      setAllChatData(res.data);\n    });\n    setChatInput(\"\"); // inputRef.current.value = \"\";\n    // setTimeout(()=>{\n    //     messageRef.current.scrollIntoView({behavior: \"smooth\"})\n    // }, 100)\n  };\n\n  const messageRef = useRef([]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-admin flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  })), allChatData.length > 0 && allChatData.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"boxchat-item flex\",\n      onClick: event => {\n        setRoomId(item.sessionId);\n        setRoomIndex(index);\n        console.log(event.target);\n        console.log(messageRef.current.scrollHeight); // messageRef.current.scrollTo(0,404)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxchat-avt flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://cdn4.vectorstock.com/i/1000x1000/94/38/avatar-flat-icon-on-black-background-black-style-vector-25959438.jpg\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"boxchat-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, item.chatName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"boxchat-first\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, item.chatContent[item.chatContent.length - 1].text)));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, allChatData.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box-avt flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://cdn4.vectorstock.com/i/1000x1000/94/38/avatar-flat-icon-on-black-background-black-style-vector-25959438.jpg\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"boxchat-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, allChatData[Number(roomIndex)].chatName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-contents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, allChatData.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-col chat-box-list\",\n    ref: messageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, allChatData[roomIndex].chatContent.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"chat-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 45\n      }\n    }, item.fromAdmin !== true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-chat-clienttext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 57\n      }\n    }, item.text)), item.fromAdmin === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-chat-admintext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 57\n      }\n    }, item.text)));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendChatInput,\n    className: \"boxchat-type-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleOnChange,\n    name: \"chatInput\" // ref={inputRef}\n    ,\n    value: chatInput,\n    placeholder: \"Type your message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, \"Send\")))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Inbox/DashboardInbox.js"],"names":["React","useRef","useEffect","useState","socketIOClient","axios","ENDPOINT","DashboardInbox","props","allChatData","setAllChatData","roomId","setRoomId","roomIndex","setRoomIndex","chatInput","setChatInput","socket","emit","sessionId","isAdmin","on","data","length","allchat","handleOnChange","event","target","value","sendChatInput","preventDefault","fromAdmin","text","time","Date","get","then","res","messageRef","map","item","index","console","log","current","scrollHeight","chatName","chatContent","Number"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { useEffect, useState } from 'react'\nimport socketIOClient from \"socket.io-client\"\nimport axios from 'axios'\n\nconst ENDPOINT = \"http://localhost:4000\";\n\nexport default function DashboardInbox(props) {\n    \n    const [allChatData, setAllChatData] = useState([])\n    const [roomId, setRoomId] = useState(0);\n    const [roomIndex, setRoomIndex] = useState(0)\n    const [chatInput, setChatInput] = useState(\"\")\n\n    const socket = socketIOClient(ENDPOINT);\n\n    useEffect(() => {\n        socket.emit('join', {\n            sessionId: 'admin',\n            isAdmin: true\n        })\n        socket.on('send-all-chat', (data)=>{\n            setAllChatData(data)\n            if (data.length > 0) setRoomId(data[0].sessionId)\n            // messageRef.current.scrollIntoView({behavior: \"smooth\"})\n        })\n        socket.on(\"client-msg\", function(data) {\n            setAllChatData(data.allchat)\n            // setTimeout(()=>{\n            //     messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n            // }, 100)\n        })\n    },[])\n\n    const handleOnChange = (event) => {\n        setChatInput(event.target.value)\n    }\n\n    const sendChatInput = (event) => {\n        event.preventDefault();\n        const data = {\n            fromAdmin: true,\n            text: chatInput,\n            time: new Date(),\n            roomId: roomId\n        }\n        socket.emit('messageSend-admin', data)\n\n        axios.get(`http://localhost:4000/chat`)\n            .then(res => {\n                setAllChatData(res.data)\n            }\n        )\n        setChatInput(\"\")\n        // inputRef.current.value = \"\";\n        // setTimeout(()=>{\n        //     messageRef.current.scrollIntoView({behavior: \"smooth\"})\n        // }, 100)\n    }\n\n    const messageRef = useRef([]);\n\n    return (\n        <div className=\"boxchat-admin flex\">\n            <div className=\"boxchat-list\">\n                <div className=\"boxchat-search\">\n                    <input type=\"text\" placeholder=\"Search\"></input>\n                </div>\n                { allChatData.length > 0 && \n                    allChatData.map((item,index)=>{\n                        return (\n                            <div \n                                key={index}\n                                className=\"boxchat-item flex\"\n                                onClick={(event)=>{\n                                    setRoomId(item.sessionId)\n                                    setRoomIndex(index)\n                                    console.log(event.target)\n                                    console.log(messageRef.current.scrollHeight)\n                                    // messageRef.current.scrollTo(0,404)\n                                }}\n                            >\n                                <div className=\"boxchat-avt flex-center\">\n                                    <img \n                                        src=\"https://cdn4.vectorstock.com/i/1000x1000/94/38/avatar-flat-icon-on-black-background-black-style-vector-25959438.jpg\" \n                                        alt=\"\"\n                                    ></img>\n                                </div>\n                                <div className=\"flex-col\">\n                                    <p className=\"boxchat-name\">{item.chatName}</p>\n                                    <p className=\"boxchat-first\">{item.chatContent[item.chatContent.length - 1].text}</p>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"boxchat-main\">\n                <div className=\"boxchat-box\">\n                    { allChatData.length>0 &&\n                        <div className=\"boxchat-box-info\">\n                            <div className=\"boxchat-box-avt flex-center\">\n                                <img \n                                    src=\"https://cdn4.vectorstock.com/i/1000x1000/94/38/avatar-flat-icon-on-black-background-black-style-vector-25959438.jpg\" \n                                    alt=\"\"\n                                ></img>\n                            </div>\n                            <div className=\"flex-center\">\n                                <p className=\"boxchat-name\">{allChatData[Number(roomIndex)].chatName}</p>\n                            </div>\n                        </div>\n                    }\n                    <div \n                        className=\"boxchat-contents\"\n                    >\n                        { allChatData.length>0 &&\n                            <div \n                                className=\"flex-col chat-box-list\"\n                                ref={messageRef}>\n                                {\n                                    allChatData[roomIndex].chatContent.map((item, index) => {\n                                        return (\n                                            <div \n                                                key={index}\n                                                className=\"chat-list\">\n                                                {\n                                                    item.fromAdmin !== true && \n                                                    <div className=\"box-chat-clienttext\">\n                                                        <p>{item.text}</p>\n                                                    </div>\n                                                }\n                                                {\n                                                    item.fromAdmin === true && \n                                                    <div className=\"box-chat-admintext\">\n                                                        <p>{item.text}</p>\n                                                    </div>\n                                                }\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>  \n                        }\n                    </div>\n                </div>\n                <div className=\"boxchat-type\">\n                    <form onSubmit={sendChatInput} className=\"boxchat-type-form\">\n                        <input \n                            type=\"text\" \n                            onChange={handleOnChange} \n                            name=\"chatInput\" \n                            // ref={inputRef}\n                            value={chatInput}\n                            placeholder=\"Type your message...\"\n                        ></input>\n                        <button>Send</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}