{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardChartPie.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { Pie } from '@reactchartjs/react-chart.js';\nexport default function DashboardChartPie(props) {\n  const email = props.email;\n  const [data, setData] = useState({});\n  useEffect(() => {\n    if (products.length > 0 && order.length > 0) {\n      const allCate = Object.values(products.reduce((a, {\n        productCate\n      }) => {\n        a[productCate] = a[productCate] || {\n          productCate,\n          count: 0\n        };\n        return a;\n      }, Object.create(null)));\n\n      for (let i in allCate) {\n        for (let j in products) {\n          if (allCate[i].productCate === products[j].productCate) {\n            allCate[i].count += products[j].productSold * products[j].productPrice;\n          }\n        }\n      }\n\n      allCate.sort((a, b) => b.count - a.count);\n      const topCate = allCate.splice(0, 5);\n      console.log(topCate);\n      const topCateList = [];\n\n      for (let i in topCate) {\n        topCateList.push(topCate[i].productCate);\n      }\n\n      setData({\n        labels: ['Read', 'Unread'],\n        datasets: [{\n          label: '# of Votes',\n          data: [12, 88],\n          backgroundColor: ['#fb404b', '#23ccef'],\n          borderColor: ['#fb404b', '#23ccef'],\n          borderWidth: 1\n        }]\n      });\n    }\n  }, [email]);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      position: 'bottom',\n      labels: {\n        fontSize: 14,\n        padding: 30\n      }\n    },\n    layout: {\n      padding: {\n        top: '20'\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chartpie flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faGlobe,\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Email Statistics\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-content flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-map pie\",\n    style: {\n      margin: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardChartPie.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faGlobe","Pie","DashboardChartPie","props","email","data","setData","products","length","order","allCate","Object","values","reduce","a","productCate","count","create","i","j","productSold","productPrice","sort","b","topCate","splice","console","log","topCateList","push","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","legend","position","fontSize","padding","layout","top","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons'  \nimport { Pie } from '@reactchartjs/react-chart.js' \n\nexport default function DashboardChartPie(props) {\n\n    const email = props.email  \n    const [data, setData] = useState({})\n\n    useEffect(()=>{\n        if (products.length > 0 && order.length > 0) {\n            const allCate = Object.values(products.reduce((a, {productCate}) => {\n                a[productCate] = a[productCate] || {productCate, count: 0};\n                return a;\n            }, Object.create(null)));\n    \n            for (let i in allCate) {\n                for (let j in products) {\n                    if (allCate[i].productCate === products[j].productCate) { \n                        allCate[i].count += (products[j].productSold * products[j].productPrice)\n                    }\n                }\n            }\n            allCate.sort((a, b) => b.count - a.count)\n            const topCate = allCate.splice(0, 5); \n            console.log(topCate)\n            const topCateList = []\n            for (let i in topCate) {\n                topCateList.push(topCate[i].productCate)\n            }\n            setData({\n                labels: ['Read', 'Unread'],\n                datasets: [\n                    {\n                        label: '# of Votes',\n                        data: [12, 88],\n                        backgroundColor: [\n                            '#fb404b',\n                            '#23ccef',\n                        ],\n                        borderColor: [\n                            '#fb404b',\n                            '#23ccef',\n                        ],\n                        borderWidth: 1,\n                    },\n                ],\n            })\n        }\n    },[email])  \n\n    const options = {  \n        responsive: true,\n        maintainAspectRatio : false,\n        legend: {\n            position: 'bottom',\n            labels: {\n                fontSize: 14,\n                padding: 30\n            }\n        },\n        layout: {\n            padding: { \n                top: '20', \n            }\n        }\n    }\n\n    return (\n        <div className=\"chartpie flex-col\">\n            <div className=\"headerbox flex-center\">\n                <FontAwesomeIcon icon={faGlobe} className=\"icon\"/>\n            </div>\n            <div className=\"top-location-container\">\n                <div className=\"headerbox-header\">\n                    <p>Email Statistics</p>\n                </div>\n                <div className=\"top-location-content flex\">\n                    <div className=\"top-location-map pie\" style={{margin: '0'}}> \n                        <Pie data={data} options ={options}/> \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}