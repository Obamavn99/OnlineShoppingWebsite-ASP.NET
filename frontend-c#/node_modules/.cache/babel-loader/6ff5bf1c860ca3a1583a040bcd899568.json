{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/src/components/Header/MenuItemDropdown.js\";\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Link, withRouter } from \"react-router-dom\";\nimport Dropdown from './Dropdown';\n\nfunction MenuItemDropdown(props) {\n  const [dropdownHover, setDropdownHover] = useState(false);\n  const location = props.location.pathname;\n  useEffect(() => {\n    function onScroll() {\n      if (location === \"/news\") {\n        if (window.pageYOffset < 50) {\n          // top\n          setWhiteBox(false);\n          setWhiteText(true);\n          setDisableBox(true);\n        } else if (this.prev < window.pageYOffset) {\n          //down\n          setWhiteBox(true);\n          setDisableBox(false);\n          setWhiteText(false);\n          setScrolled(true);\n        } else if (this.prev > window.pageYOffset) {\n          //up\n          setScrolled(false);\n        }\n      } else {\n        if (window.pageYOffset < 50) {\n          // top\n          setWhiteBox(false);\n          setWhiteText(false);\n        } else if (this.prev < window.pageYOffset) {\n          //down\n          setWhiteBox(true);\n          setScrolled(true);\n        } else if (this.prev > window.pageYOffset) {\n          //up\n          setScrolled(false);\n        }\n      }\n\n      this.prev = window.pageYOffset;\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [location]);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"menu-item\",\n    onMouseEnter: () => {\n      setDropdownHover(true);\n    },\n    onMouseLeave: () => {\n      setDropdownHover(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: props.url,\n    className: classNames({\n      active: location === props.url,\n      whitelink_header: props.whiteText === true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, props.label), dropdownHover === true && props.dropdownContent.length > 0 && /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"dropdown-display\",\n    dropdownContent: props.dropdownContent,\n    label: props.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default withRouter(MenuItemDropdown);","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/src/components/Header/MenuItemDropdown.js"],"names":["React","useEffect","useState","classNames","Link","withRouter","Dropdown","MenuItemDropdown","props","dropdownHover","setDropdownHover","location","pathname","onScroll","window","pageYOffset","setWhiteBox","setWhiteText","setDisableBox","prev","setScrolled","addEventListener","removeEventListener","url","active","whitelink_header","whiteText","label","dropdownContent","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport classNames from 'classnames'\nimport {\n    Link, withRouter\n  } from \"react-router-dom\"; \nimport Dropdown from './Dropdown';\n\nfunction MenuItemDropdown(props) {\n    \n    const [dropdownHover, setDropdownHover] = useState(false)\n    const location = props.location.pathname;\n\n    useEffect(()=>{\n        function onScroll() {\n            if (location === \"/news\") {\n                if(window.pageYOffset < 50) { // top\n                    setWhiteBox(false)\n                    setWhiteText(true)\n                    setDisableBox(true)\n                } else if (this.prev < window.pageYOffset) { //down\n                    setWhiteBox(true)\n                    setDisableBox(false)\n                    setWhiteText(false)\n                    setScrolled(true)\n                } else if (this.prev > window.pageYOffset) { //up\n                    setScrolled(false)\n                }\n            } else {\n                if(window.pageYOffset < 50) { // top\n                    setWhiteBox(false)\n                    setWhiteText(false)\n                } else if (this.prev < window.pageYOffset) { //down\n                    setWhiteBox(true)\n                    setScrolled(true)\n                } else if (this.prev > window.pageYOffset) { //up\n                    setScrolled(false)\n                }\n            }\n            this.prev = window.pageYOffset;\n        }\n\n        window.addEventListener(\"scroll\", onScroll);\n        return() => {\n            window.removeEventListener(\"scroll\", onScroll);\n        }\n    }, [location]);\n\n    return (\n        <li \n            className=\"menu-item\"\n            onMouseEnter={()=>{\n                setDropdownHover(true)\n            }}\n            onMouseLeave={()=>{\n                setDropdownHover(false)\n            }}\n            >\n            <Link to={props.url}\n                className={classNames({\n                    active: location === props.url,\n                    whitelink_header: props.whiteText === true,\n                })}\n            >{props.label}</Link>\n            {(dropdownHover === true && props.dropdownContent.length > 0) && \n                <Dropdown \n                    className=\"dropdown-display\"\n                    dropdownContent={props.dropdownContent}\n                    label={props.label}\n                /> \n            }\n        </li>\n    )\n}\nexport default withRouter(MenuItemDropdown);"]},"metadata":{},"sourceType":"module"}