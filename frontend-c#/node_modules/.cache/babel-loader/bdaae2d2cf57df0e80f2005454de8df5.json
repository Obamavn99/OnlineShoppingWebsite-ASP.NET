{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/DashboardInbox.js\";\nimport Axios from 'axios';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nexport default function DashboardInbox(props) {\n  const [chatData, setChatData] = useState([]);\n  useEffect(() => {\n    socket.on('connect', function (data) {\n      socket.emit('join', {\n        sessionId: sessionStorage.getItem('chat-id')\n      });\n      socket.on('sendFirstInfo', data => {\n        setChatData(data);\n        if (data.length > 0) setChatList(data[0].chatContent);\n      });\n      socket.on('thread', data => {\n        setChatData([data]);\n        setChatList(data.chatContent);\n      });\n      socket.on('messageSend-thread', data => {\n        setChatData(chatData => [...chatData, {\n          text: data.text,\n          time: data.time\n        }]);\n        setChatList(chatData => [...chatData, data]);\n      });\n    });\n  }, []);\n  return chatData.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, item.chatName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, item.chatEmail), item.chatContent.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }\n      }, item.text), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }\n      }, item.date));\n    }));\n  });\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/DashboardInbox.js"],"names":["Axios","React","useEffect","useState","DashboardInbox","props","chatData","setChatData","socket","on","data","emit","sessionId","sessionStorage","getItem","length","setChatList","chatContent","text","time","map","item","index","chatName","chatEmail","date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,UAAUC,IAAV,EAAgB;AACjCF,MAAAA,MAAM,CAACG,IAAP,CAAY,MAAZ,EAAoB;AAChBC,QAAAA,SAAS,EAAEC,cAAc,CAACC,OAAf,CAAuB,SAAvB;AADK,OAApB;AAGAN,MAAAA,MAAM,CAACC,EAAP,CAAU,eAAV,EAA4BC,IAAD,IAAS;AAChCH,QAAAA,WAAW,CAACG,IAAD,CAAX;AACA,YAAIA,IAAI,CAACK,MAAL,GAAc,CAAlB,EAAqBC,WAAW,CAACN,IAAI,CAAC,CAAD,CAAJ,CAAQO,WAAT,CAAX;AACxB,OAHD;AAIAT,MAAAA,MAAM,CAACC,EAAP,CAAU,QAAV,EAAqBC,IAAD,IAAS;AACzBH,QAAAA,WAAW,CAAC,CAACG,IAAD,CAAD,CAAX;AACAM,QAAAA,WAAW,CAACN,IAAI,CAACO,WAAN,CAAX;AACH,OAHD;AAIAT,MAAAA,MAAM,CAACC,EAAP,CAAU,oBAAV,EAAiCC,IAAD,IAAS;AACrCH,QAAAA,WAAW,CAACD,QAAQ,IAAG,CAAC,GAAGA,QAAJ,EAAc;AAACY,UAAAA,IAAI,EAAER,IAAI,CAACQ,IAAZ;AAAkBC,UAAAA,IAAI,EAAET,IAAI,CAACS;AAA7B,SAAd,CAAZ,CAAX;AACAH,QAAAA,WAAW,CAACV,QAAQ,IAAG,CAAC,GAAGA,QAAJ,EAAcI,IAAd,CAAZ,CAAX;AACH,OAHD;AAIH,KAhBD;AAiBH,GAlBQ,EAkBP,EAlBO,CAAT;AAoBA,SACIJ,QAAQ,CAACc,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAgB;AACzB,wBACI;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,QAAT,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACG,SAAT,CAFJ,EAGKH,IAAI,CAACJ,WAAL,CAAiBG,GAAjB,CAAqB,CAACC,IAAD,EAAMC,KAAN,KAAc;AAChC,0BACI;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,IAAI,CAACH,IAAT,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIG,IAAI,CAACI,IAAT,CAFJ,CADJ;AAMH,KAPA,CAHL,CADJ;AAcH,GAfD,CADJ;AAkBH","sourcesContent":["import Axios from 'axios'\nimport React from 'react'\nimport { useEffect, useState } from 'react'\n\nexport default function DashboardInbox(props) {\n    const [chatData, setChatData] = useState([])\n\n    useEffect(() => {\n        socket.on('connect', function (data) {\n            socket.emit('join', {\n                sessionId: sessionStorage.getItem('chat-id')\n            })\n            socket.on('sendFirstInfo', (data)=> {\n                setChatData(data);\n                if (data.length > 0) setChatList(data[0].chatContent)\n            })\n            socket.on('thread', (data)=> {\n                setChatData([data]);\n                setChatList(data.chatContent)\n            })\n            socket.on('messageSend-thread', (data)=> {\n                setChatData(chatData=> [...chatData, {text: data.text, time: data.time}]);\n                setChatList(chatData=> [...chatData, data])\n            })\n        })\n    },[])\n\n    return (\n        chatData.map((item, index)=> {\n            return (\n                <div key={index}>\n                    <p>{item.chatName}</p>\n                    <p>{item.chatEmail}</p>\n                    {item.chatContent.map((item,index)=>{\n                        return (\n                            <div key={index}>\n                                <p>{item.text}</p>\n                                <p>{item.date}</p>\n                            </div>\n                        )\n                    })}\n                </div>\n            )\n        })\n    )\n}"]},"metadata":{},"sourceType":"module"}