{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/OpenChatBtn.js\";\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport '../Styles/Chat.css';\nimport '../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComment, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport socketIOClient from \"socket.io-client\";\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../contexts/User';\nconst ENDPOINT = \"http://localhost:4000\";\n\nfunction OpenChatBtn(props) {\n  const messageRef = useRef();\n  const inputRef = useRef();\n  const [openChat, setOpenChat] = useState(false);\n  const [onHover, setOnHover] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\"); // const [openChatContent, setOpenChatContent] = useState(false)\n\n  const socket = socketIOClient(ENDPOINT);\n  const [chatList, setChatList] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userInfoExist, setUserInfoExist] = useState(false);\n  const {\n    userInfo\n  } = useContext(UserContext);\n  useEffect(() => {\n    if (userInfo) {\n      setUserName(userInfo.userName);\n      setUserEmail(userInfo.userEmail);\n      setUserInfoExist(true);\n      sessionStorage.removeItem('chat-id');\n      sessionStorage.setItem('chat-id', userInfo._id);\n    }\n\n    if (!sessionStorage.getItem('chat-id')) {\n      sessionStorage.setItem('chat-id', Math.floor(Math.random() * 190000000) + 100000000);\n    }\n\n    axios.get(`http://localhost:4000/chat/${sessionStorage.getItem('chat-id')}`).then(res => {\n      if (res.data.length > 0) setChatList(res.data[0].chatContent);\n    });\n    socket.emit('join', {\n      sessionId: sessionStorage.getItem('chat-id'),\n      isAdmin: false\n    });\n    socket.on('sendFirstInfo', data => {\n      if (data.length > 0) setChatList(data[0].chatContent);\n    });\n    socket.on('thread', data => {\n      setChatList(data.chatContent);\n    });\n    socket.on(\"admin-msg\", function (data) {\n      setChatList(chatList => [...chatList, data]);\n      setTimeout(() => {\n        messageRef.current.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }, 100);\n    });\n  }, [userInfo]);\n\n  const handleChange = event => {\n    setInputValue({ ...inputValue,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const location = props.history.location.pathname;\n\n  const sendFirstChatOnSubmit = event => {\n    event.preventDefault();\n\n    if (userInfo) {\n      socket.emit('firstMessage', {\n        userInfo: userInfo || null,\n        sessionId: sessionStorage.getItem('chat-id'),\n        chatName: inputValue.chatName,\n        chatEmail: inputValue.chatEmail,\n        chatContent: [{\n          text: inputValue.chatContent,\n          time: new Date()\n        }]\n      });\n      setChatList(chatList => [...chatList, {\n        text: inputValue.chatContent,\n        time: new Date()\n      }]);\n    } // socket.emit('firstMessage', {\n    //     userInfo: userInfo || null,\n    //     sessionId: sessionStorage.getItem('chat-id'),\n    //     chatName: inputValue.chatName,\n    //     chatEmail: inputValue.chatEmail,\n    //     chatContent: [\n    //         {\n    //             text: inputValue.chatContent,\n    //             time: new Date()\n    //         }\n    //     ]\n    // })\n    // setChatList(chatList=> [...chatList, {\n    //     text: inputValue.chatContent,\n    //     time: new Date()\n    // }])\n\n  };\n\n  const sendChatOnSubmit = event => {//     event.preventDefault();\n    //     socket.emit('messageSend', {\n    //         sessionId: sessionStorage.getItem('chat-id'),\n    //         text: inputValue.messageSend,\n    //         time: new Date(),\n    //     })\n    //     setChatList(chatList=> [...chatList, {text: inputValue.messageSend, time: new Date()}])\n    //     setTimeout(()=>{\n    //         messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n    //     }, 100)\n    //     inputRef.current.value = \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: location === \"/admin\" || location === \"/admin/dashboard\" ? \"chat-btn displayNone\" : \"chat-btn\",\n    onMouseEnter: () => {\n      setOnHover(true);\n    },\n    onMouseLeave: () => {\n      if (openChat) {\n        setOnHover(true);\n      } else setOnHover(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: onHover ? \"chat-btn-container chat-btn-hover\" : \"chat-btn-container\",\n    onClick: () => {\n      if (messageRef.current) messageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n\n      if (openChat) {\n        setOpenChat(false);\n        setOnHover(false);\n      } else {\n        setOpenChat(true);\n        setOnHover(true);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Live Chat\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: openChat ? \"chat-box hide_chat_box\" : \"chat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-box-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"Live Chat\"), chatList.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-box-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, userInfoExist === true && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendFirstChatOnSubmit,\n    className: openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, \"Introduce yourself *\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      setUserName(event.target.value);\n    },\n    value: userName,\n    placeholder: \"Name\",\n    className: \"intro\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      setUserEmail(event.target.value);\n    },\n    value: userEmail,\n    placeholder: \"Email\",\n    className: \"intro\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 33\n    }\n  }, \"Message *\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"chatContent\",\n    type: \"textarea\",\n    onChange: handleChange,\n    className: \"message\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn chat-box-body-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }, \"Chat\")), userInfoExist === false && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendFirstChatOnSubmit,\n    className: openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }, \"Introduce yourself *\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      setUserName(event.target.value);\n    },\n    value: userName,\n    placeholder: \"Name\",\n    className: \"intro\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      setUserEmail(event.target.value);\n    },\n    value: userEmail,\n    placeholder: \"Email\",\n    className: \"intro\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 33\n    }\n  }, \"Message *\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"chatContent\",\n    type: \"textarea\",\n    onChange: handleChange,\n    className: \"message\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn chat-box-body-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 33\n    }\n  }, \"Chat\"))), chatList.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-box-body no-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendChatOnSubmit,\n    className: openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-col chat-box-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }, chatList.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      ref: messageRef,\n      className: \"chat-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 45\n      }\n    }, item.fromAdmin !== true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clienttext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 57\n      }\n    }, item.text)), item.fromAdmin === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admintext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 57\n      }\n    }, item.text)));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex chat-box-send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"messageSend\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Make a message\",\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"flex-center sendchat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPaperPlane,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 37\n    }\n  })))))));\n}\n\nexport default withRouter(OpenChatBtn);","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/OpenChatBtn.js"],"names":["React","useContext","useEffect","useRef","useState","FontAwesomeIcon","faComment","faPaperPlane","socketIOClient","withRouter","axios","UserContext","ENDPOINT","OpenChatBtn","props","messageRef","inputRef","openChat","setOpenChat","onHover","setOnHover","inputValue","setInputValue","socket","chatList","setChatList","userName","setUserName","userEmail","setUserEmail","userInfoExist","setUserInfoExist","userInfo","sessionStorage","removeItem","setItem","_id","getItem","Math","floor","random","get","then","res","data","length","chatContent","emit","sessionId","isAdmin","on","setTimeout","current","scrollIntoView","behavior","handleChange","event","target","name","value","location","history","pathname","sendFirstChatOnSubmit","preventDefault","chatName","chatEmail","text","time","Date","sendChatOnSubmit","map","item","index","fromAdmin"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react'\nimport '../Styles/Chat.css'\nimport '../App.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment, faPaperPlane } from '@fortawesome/free-solid-svg-icons'\nimport socketIOClient from \"socket.io-client\"\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { UserContext } from '../contexts/User';\n\nconst ENDPOINT = \"http://localhost:4000\";\n\nfunction OpenChatBtn(props) {\n    const messageRef = useRef();\n    const inputRef = useRef();\n    const [openChat, setOpenChat] = useState(false)\n    const [onHover, setOnHover] = useState(false)\n    const [inputValue, setInputValue] = useState(\"\")\n    // const [openChatContent, setOpenChatContent] = useState(false)\n\n    const socket = socketIOClient(ENDPOINT)\n    const [chatList, setChatList] = useState([])\n\n    const [userName, setUserName] = useState(\"\")\n    const [userEmail, setUserEmail] = useState(\"\")\n    const [userInfoExist, setUserInfoExist] = useState(false)\n\n    const { \n        userInfo\n    } = useContext(UserContext);\n\n    useEffect(() => {\n        if (userInfo) {\n            setUserName(userInfo.userName)\n            setUserEmail(userInfo.userEmail)\n            setUserInfoExist(true)\n            sessionStorage.removeItem('chat-id')\n            sessionStorage.setItem('chat-id', userInfo._id);\n        }\n        if (!sessionStorage.getItem('chat-id')) {\n            sessionStorage.setItem('chat-id', Math.floor(Math.random() * 190000000) + 100000000);\n        }\n        axios.get(`http://localhost:4000/chat/${sessionStorage.getItem('chat-id')}`)\n            .then(res => {\n                if (res.data.length > 0)\n                    setChatList(res.data[0].chatContent)\n            }\n        )\n        socket.emit('join', {\n            sessionId: sessionStorage.getItem('chat-id'),\n            isAdmin: false\n        })\n        socket.on('sendFirstInfo', (data)=> {\n            if (data.length > 0) setChatList(data[0].chatContent)\n        })\n        socket.on('thread', (data)=> {\n            setChatList(data.chatContent)\n        })\n        socket.on(\"admin-msg\", function(data) {\n            setChatList(chatList=> [...chatList, data]);\n            setTimeout(()=>{\n                messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n            }, 100)\n        })\n    }, [userInfo])\n\n    const handleChange = (event) => {\n        setInputValue({...inputValue , [event.target.name]: event.target.value})\n    }\n    const location = props.history.location.pathname;\n\n    \n    const sendFirstChatOnSubmit = (event) => {\n        event.preventDefault()\n        if (userInfo) { \n            socket.emit('firstMessage', {\n                userInfo: userInfo || null,\n                sessionId: sessionStorage.getItem('chat-id'),\n                chatName: inputValue.chatName,\n                chatEmail: inputValue.chatEmail,\n                chatContent: [\n                    {\n                        text: inputValue.chatContent,\n                        time: new Date()\n                    }\n                ]\n            })\n            setChatList(chatList=> [...chatList, {\n                text: inputValue.chatContent,\n                time: new Date()\n            }])\n        }\n        // socket.emit('firstMessage', {\n        //     userInfo: userInfo || null,\n        //     sessionId: sessionStorage.getItem('chat-id'),\n        //     chatName: inputValue.chatName,\n        //     chatEmail: inputValue.chatEmail,\n        //     chatContent: [\n        //         {\n        //             text: inputValue.chatContent,\n        //             time: new Date()\n        //         }\n        //     ]\n        // })\n        // setChatList(chatList=> [...chatList, {\n        //     text: inputValue.chatContent,\n        //     time: new Date()\n        // }])\n    }\n\n    const sendChatOnSubmit = (event) => {\n    //     event.preventDefault();\n    //     socket.emit('messageSend', {\n    //         sessionId: sessionStorage.getItem('chat-id'),\n    //         text: inputValue.messageSend,\n    //         time: new Date(),\n    //     })\n    //     setChatList(chatList=> [...chatList, {text: inputValue.messageSend, time: new Date()}])\n    //     setTimeout(()=>{\n    //         messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n    //     }, 100)\n    //     inputRef.current.value = \"\";\n    }\n\n    return (\n        <div \n            className={location === \"/admin\" || location === \"/admin/dashboard\" ? \"chat-btn displayNone\" : \"chat-btn\"}\n            onMouseEnter={()=> { setOnHover(true) }}\n            onMouseLeave={()=> { if (openChat) { setOnHover(true) } else setOnHover(false) }}\n        >\n            <div \n                className={onHover ? \"chat-btn-container chat-btn-hover\" : \"chat-btn-container\"}\n                onClick={()=>{\n                    if (messageRef.current) messageRef.current.scrollIntoView({ behavior: \"smooth\" });\n                    if (openChat) { \n                        setOpenChat(false); \n                        setOnHover(false) \n                    } else { \n                        setOpenChat(true); \n                        setOnHover(true) \n                    }\n                }}\n                >\n                <FontAwesomeIcon icon={faComment}/>\n                <p>Live Chat</p>\n            </div>\n            <div className={openChat ? \"chat-box hide_chat_box\" : \"chat-box\"}>\n                <div className=\"chat-box-header\">\n                    Live Chat\n                </div>\n                { (chatList.length === 0) &&\n                    <div className=\"chat-box-body\">\n                        { userInfoExist === true &&\n                            <form onSubmit={sendFirstChatOnSubmit} className={openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\"}>\n                                <label>Introduce yourself *</label>\n                                <input \n                                    type=\"text\" \n                                    onChange={(event)=>{\n                                        setUserName(event.target.value)\n                                    }} \n                                    value={userName}\n                                    placeholder=\"Name\" \n                                    className=\"intro\" disabled></input>\n                                <input\n                                    type=\"text\" \n                                    onChange={(event)=>{\n                                        setUserEmail(event.target.value)\n                                    }}\n                                    value={userEmail}\n                                    placeholder=\"Email\" \n                                    className=\"intro\" disabled></input>\n                                <label>Message *</label>\n                                <textarea name=\"chatContent\" type=\"textarea\" onChange={handleChange} className=\"message\" required></textarea>\n                                <button className=\"btn chat-box-body-btn\">Chat</button>\n                            </form>\n                        }\n                        { userInfoExist === false &&\n                            <form onSubmit={sendFirstChatOnSubmit} className={openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\"}>\n                                <label>Introduce yourself *</label>\n                                <input \n                                    type=\"text\" \n                                    onChange={(event)=>{\n                                        setUserName(event.target.value)\n                                    }} \n                                    value={userName}\n                                    placeholder=\"Name\" \n                                    className=\"intro\" required></input>\n                                <input\n                                    type=\"text\" \n                                    onChange={(event)=>{\n                                        setUserEmail(event.target.value)\n                                    }}\n                                    value={userEmail}\n                                    placeholder=\"Email\" \n                                    className=\"intro\" required></input>\n                                <label>Message *</label>\n                                <textarea name=\"chatContent\" type=\"textarea\" onChange={handleChange} className=\"message\" required></textarea>\n                                <button className=\"btn chat-box-body-btn\">Chat</button>\n                            </form>\n                        }\n                    </div>\n                }\n                { (chatList.length > 0) && \n                    <div className=\"chat-box-body no-p\">\n                        <form onSubmit={sendChatOnSubmit} className={openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\"}>\n                            <div className=\"flex-col chat-box-list\">\n                                {\n                                    chatList.map((item, index) => {\n                                        return (\n                                            <div key={index} ref={messageRef} className=\"chat-list\">\n                                                {\n                                                    item.fromAdmin !== true && \n                                                    <div className=\"clienttext\">\n                                                        <p>{item.text}</p>\n                                                    </div>\n                                                }\n                                                {\n                                                    item.fromAdmin === true && \n                                                    <div className=\"admintext\">\n                                                        <p>{item.text}</p>\n                                                    </div>\n                                                }\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>  \n                            <div className=\"flex chat-box-send\">\n                                <input name=\"messageSend\" type=\"text\" onChange={handleChange} placeholder=\"Make a message\" ref={inputRef}></input>\n                                <button className=\"flex-center sendchat\">\n                                    <FontAwesomeIcon icon={faPaperPlane}/>\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(OpenChatBtn);"]},"metadata":{},"sourceType":"module"}