{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardTodoList.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faEdit, faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nexport default function DashboardTodoList(props) {\n  const [todoList, setTodoList] = useState([]);\n  const [openNewTodo, setOpenNewTodo] = useState(false);\n  const [openEditTodo, setOpenEditTodo] = useState(\"\");\n  const [newTodoText, setNewTodoText] = useState(\"\");\n  const [editTodoText, setEditTodoText] = useState(\"\");\n  useEffect(() => {\n    axios.get(`http://localhost:4000/todos`).then(res => {\n      setTodoList(res.data);\n    });\n  }, [openNewTodo]);\n\n  const clickToCheck = event => {\n    const target = JSON.parse(event.target.id);\n    const id = target.id;\n    var isDone = \"\";\n\n    if (target.isDone === true) {\n      isDone = false;\n    } else {\n      isDone = true;\n    }\n\n    const virtualTodo = [...todoList];\n\n    for (let i in virtualTodo) {\n      if (id === virtualTodo[i]._id) {\n        virtualTodo[i].isDone = isDone;\n      }\n    }\n\n    setTodoList(virtualTodo);\n    axios.post('http://localhost:4000/todos/update', {\n      id: id,\n      isDone: isDone\n    });\n  };\n\n  const addNewTodo = event => {\n    event.preventDefault();\n    const virtualTodo = [...todoList];\n    const data = {\n      todoContent: newTodoText,\n      isDone: false,\n      todoDate: new Date()\n    };\n    virtualTodo.push(data);\n    setTodoList(virtualTodo);\n    axios.post('http://localhost:4000/todos', data);\n    setOpenNewTodo(false);\n  };\n\n  const deleteTodo = event => {\n    const id = event.target.id;\n    axios.post('http://localhost:4000/todos', {\n      delete: true,\n      id: id\n    });\n    const virtualTodo = [];\n\n    for (let i in todoList) {\n      if (todoList[i]._id !== id) {\n        virtualTodo.push(todoList[i]);\n      }\n    }\n\n    setTodoList(virtualTodo);\n  };\n\n  const eidtTodoOnSubmit = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topfive flex-col\",\n    style: {\n      width: '40%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `headerbox flex-center ${props.color}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: props.icon,\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, props.title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topfive-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list\",\n    style: {\n      height: '390px',\n      overflowY: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    style: {\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"todo-title\",\n    style: {\n      margin: '0',\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"upcoming\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginRight: '5px',\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      if (openNewTodo) {\n        setOpenNewTodo(false);\n      } else {\n        setOpenNewTodo(true);\n      }\n\n      setNewTodoText(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    style: {\n      color: '#aaa',\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNewTodo,\n    className: openNewTodo ? \"newtodo-input flex\" : \"newtodo-input closeNewTodo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newTodoText,\n    type: \"text\",\n    onChange: event => {\n      setNewTodoText(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"newtodo-btn btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, \"Add\")), todoList && todoList.map((item, index) => {\n    if (item.isDone === false) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"topfive-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"topfive-div flex\",\n        style: {\n          border: 'none',\n          padding: '0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 45\n        }\n      }, item.isDone === false && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"todo-check\",\n        id: JSON.stringify({\n          id: item._id,\n          isDone: item.isDone\n        }),\n        onClick: clickToCheck,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 53\n        }\n      }), item.isDone === true && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"todo-check-done\",\n        id: JSON.stringify({\n          id: item._id,\n          isDone: item.isDone\n        }),\n        onClick: clickToCheck,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faCheck,\n        style: {\n          pointerEvents: 'none',\n          color: '#23bfea'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 57\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"todo-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 49\n        }\n      }, item.todoContent), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"todo-action flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: item._id,\n        onClick: () => {\n          if (openEditTodo === \"\") {\n            setOpenEditTodo(item._id);\n          } else {\n            setOpenEditTodo(\"\");\n          }\n\n          setNewTodoText(\"\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faEdit,\n        className: \"icon blue\",\n        style: {\n          pointerEvents: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 57\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: item._id,\n        onClick: deleteTodo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTimes,\n        className: \"icon red\",\n        style: {\n          marginTop: '5px',\n          fontSize: '12px',\n          color: '#ffb3b7',\n          marginLeft: '7px',\n          pointerEvents: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 57\n        }\n      })))), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: eidtTodoOnSubmit,\n        style: {\n          marginTop: '10px'\n        },\n        className: openEditTodo === item._id ? \"newtodo-input flex\" : \"newtodo-input closeNewTodo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          margin: '0'\n        },\n        value: editTodoText,\n        type: \"text\",\n        onChange: event => {\n          setEditTodoText(event.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"newtodo-btn btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 49\n        }\n      }, \"Edit\")));\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"todo-title\",\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, \"finished\"), todoList && todoList.map((item, index) => {\n    if (item.isDone === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"topfive-div flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 41\n        }\n      }, item.isDone === false && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"todo-check\",\n        id: JSON.stringify({\n          id: item._id,\n          isDone: item.isDone\n        }),\n        onClick: clickToCheck,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 49\n        }\n      }), item.isDone === true && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"todo-check-done\",\n        id: JSON.stringify({\n          id: item._id,\n          isDone: item.isDone\n        }),\n        onClick: clickToCheck,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faCheck,\n        style: {\n          pointerEvents: 'none',\n          color: '#23bfea'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"todo-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 45\n        }\n      }, item.todoContent), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"todo-action flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faEdit,\n        className: \"icon blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTimes,\n        className: \"icon red\",\n        style: {\n          marginTop: '5px',\n          fontSize: '12px',\n          color: '#ffb3b7',\n          marginLeft: '7px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 53\n        }\n      }))));\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/frontend/src/components/admin/Dashboard/Main/DashboardTodoList.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faCheck","faEdit","faPlus","faTimes","axios","DashboardTodoList","props","todoList","setTodoList","openNewTodo","setOpenNewTodo","openEditTodo","setOpenEditTodo","newTodoText","setNewTodoText","editTodoText","setEditTodoText","get","then","res","data","clickToCheck","event","target","JSON","parse","id","isDone","virtualTodo","i","_id","post","addNewTodo","preventDefault","todoContent","todoDate","Date","push","deleteTodo","delete","eidtTodoOnSubmit","width","color","icon","title","height","overflowY","alignItems","justifyContent","margin","marginLeft","marginRight","cursor","fontSize","value","map","item","index","border","padding","stringify","pointerEvents","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faEdit, faPlus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios'\n\nexport default function DashboardTodoList(props) {\n    const [todoList, setTodoList] = useState([])\n    const [openNewTodo, setOpenNewTodo] = useState(false)\n    const [openEditTodo, setOpenEditTodo] = useState(\"\")\n    const [newTodoText, setNewTodoText] = useState(\"\")\n    const [editTodoText, setEditTodoText] = useState(\"\")\n\n    useEffect(()=>{\n        axios.get(`http://localhost:4000/todos`)\n            .then(res => {\n                setTodoList(res.data)\n            }\n        )\n    },[openNewTodo])\n\n    const clickToCheck = (event)=>{\n        const target = JSON.parse(event.target.id)\n        const id = target.id\n        var isDone = \"\"\n        if (target.isDone === true) {\n            isDone = false\n        } else {\n            isDone = true\n        }\n        const virtualTodo = [...todoList]\n        for (let i in virtualTodo) {\n            if (id === virtualTodo[i]._id) {\n                virtualTodo[i].isDone = isDone\n            }\n        }\n        setTodoList(virtualTodo)\n        axios.post('http://localhost:4000/todos/update', {\n            id: id,\n            isDone: isDone\n        })\n    }\n\n    const addNewTodo = (event)=>{\n        event.preventDefault();\n        const virtualTodo = [...todoList]\n        const data = {\n            todoContent: newTodoText,\n            isDone: false,\n            todoDate: new Date()\n        }\n        virtualTodo.push(data)\n        setTodoList(virtualTodo)\n        axios.post('http://localhost:4000/todos', data)\n        setOpenNewTodo(false)\n    }\n\n    const deleteTodo = (event) => {\n        const id = event.target.id\n        axios.post('http://localhost:4000/todos', {\n            delete: true,\n            id: id\n        })\n        const virtualTodo = []\n        for (let i in todoList) {\n            if (todoList[i]._id !== id) {\n                virtualTodo.push(todoList[i])\n            }\n        }\n        setTodoList(virtualTodo)\n    }\n\n    const eidtTodoOnSubmit = () => {\n\n    }\n\n    return (\n        <div className=\"topfive flex-col\" style={{width: '40%'}}>\n            <div className={`headerbox flex-center ${props.color}`}>\n                <FontAwesomeIcon icon={props.icon} className=\"icon\"/>\n            </div>\n            <div className=\"top-location-container\">\n                <div className=\"headerbox-header\">\n                    <p>{props.title}</p>\n                </div>\n                <div className=\"topfive-content\">\n                    <div className=\"todo-list\" style={{height: '390px', overflowY: 'scroll'}}>\n                        <div className=\"flex\" style={{alignItems: 'center', justifyContent: 'space-between'}}>\n                            <p className=\"todo-title\" style={{margin: '0', marginLeft: '10px'}}>upcoming</p>\n                            <div    \n                                style={{marginRight: '5px', cursor: 'pointer'}}\n                                onClick={()=>{\n                                    if (openNewTodo) {\n                                        setOpenNewTodo(false)\n                                    } else {\n                                        setOpenNewTodo(true)\n                                    }\n                                    setNewTodoText(\"\")\n                                }}\n                            >\n                                <FontAwesomeIcon icon={faPlus} style={{color: '#aaa', fontSize: '14px'}}/>\n                            </div>\n                        </div>\n                        <form\n                            onSubmit={addNewTodo}\n                            className={openNewTodo ? \"newtodo-input flex\" : \"newtodo-input closeNewTodo\"}\n                        >\n                            <input \n                                value={newTodoText}\n                                type=\"text\" \n                                onChange={(event)=>{\n                                setNewTodoText(event.target.value)\n                            }}></input>\n                            <button className=\"newtodo-btn btn\">Add</button>\n                        </form>\n                        {todoList &&\n                            todoList.map((item, index)=>{\n                                if (item.isDone === false) {\n                                    return(\n                                        <div\n                                            key={index}\n                                            className=\"topfive-div\"\n                                        >\n                                            <div className=\"topfive-div flex\" style={{border: 'none', padding: '0'}}> \n                                                {\n                                                    item.isDone === false && \n                                                    <div \n                                                        className=\"todo-check\"\n                                                        id={JSON.stringify({\n                                                            id: item._id,\n                                                            isDone: item.isDone\n                                                        })}\n                                                        onClick={clickToCheck}\n                                                        >\n                                                    </div>\n                                                }\n                                                {\n                                                    item.isDone === true && \n                                                    <div \n                                                        className=\"todo-check-done\"\n                                                        id={JSON.stringify({\n                                                            id: item._id,\n                                                            isDone: item.isDone\n                                                        })}\n                                                        onClick={clickToCheck}\n                                                        > \n                                                        <FontAwesomeIcon icon={faCheck} style={{pointerEvents: 'none', color: '#23bfea'}}/>\n                                                    </div>\n                                                }\n                                                <p className=\"todo-text\">{item.todoContent}</p>\n                                                <div className=\"todo-action flex\">\n                                                    <div\n                                                        id={item._id}\n                                                        onClick={()=>{\n                                                            if (openEditTodo === \"\") {\n                                                                setOpenEditTodo(item._id)\n                                                            } else {\n                                                                setOpenEditTodo(\"\")\n                                                            }\n                                                            setNewTodoText(\"\")\n                                                        }}>\n                                                        <FontAwesomeIcon icon={faEdit} className=\"icon blue\" style={{pointerEvents: 'none'}}/>\n                                                    </div>\n                                                    <div \n                                                        id={item._id}\n                                                        onClick={deleteTodo}>\n                                                        <FontAwesomeIcon icon={faTimes} className=\"icon red\" style={{marginTop: '5px', fontSize: '12px', color: '#ffb3b7', marginLeft: '7px', pointerEvents: 'none'}}/>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <form\n                                                onSubmit={eidtTodoOnSubmit}\n                                                style={{marginTop: '10px'}}\n                                                className={openEditTodo === item._id ? \"newtodo-input flex\" : \"newtodo-input closeNewTodo\"}\n                                            >\n                                                <input \n                                                    style={{margin: '0'}}\n                                                    value={editTodoText}\n                                                    type=\"text\" \n                                                    onChange={(event)=>{\n                                                        setEditTodoText(event.target.value)\n                                                }}></input>\n                                                <button className=\"newtodo-btn btn\">Edit</button>\n                                            </form>\n                                        </div>\n                                    )\n                                }\n                            })\n                        }\n                        <p className=\"todo-title\" style={{marginTop: '20px'}}>finished</p>{todoList &&\n                            todoList.map((item, index)=>{\n                                if (item.isDone === true) {\n                                    return(\n                                        <div\n                                            key={index}\n                                            className=\"topfive-div flex\"\n                                        >\n                                            {\n                                                item.isDone === false && \n                                                <div \n                                                    className=\"todo-check\"\n                                                    id={JSON.stringify({\n                                                        id: item._id,\n                                                        isDone: item.isDone\n                                                    })}\n                                                    onClick={clickToCheck}\n                                                    >\n                                                </div>\n                                            }\n                                            {\n                                                item.isDone === true && \n                                                <div \n                                                    className=\"todo-check-done\"\n                                                    id={JSON.stringify({\n                                                        id: item._id,\n                                                        isDone: item.isDone\n                                                    })}\n                                                    onClick={clickToCheck}\n                                                    > \n                                                    <FontAwesomeIcon icon={faCheck} style={{pointerEvents: 'none', color: '#23bfea'}}/>\n                                                </div>\n                                            }\n                                            <p className=\"todo-text\">{item.todoContent}</p>\n                                            <div className=\"todo-action flex\">\n                                                <div>\n                                                    <FontAwesomeIcon icon={faEdit} className=\"icon blue\"/>\n                                                </div>\n                                                <div>\n                                                    <FontAwesomeIcon icon={faTimes} className=\"icon red\" style={{marginTop: '5px', fontSize: '12px', color: '#ffb3b7', marginLeft: '7px'}}/>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                }\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}