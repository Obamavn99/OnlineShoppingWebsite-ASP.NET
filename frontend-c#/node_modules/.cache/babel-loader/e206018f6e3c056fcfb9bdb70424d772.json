{"ast":null,"code":"var _jsxFileName = \"/Users/namduong/Documents/dev/shop-project/src/components/RangeSlider.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Slider, Rail, Handles, Tracks } from \"react-compound-slider\";\nimport { MuiRail, MuiHandle, MuiTrack } from \"./components\";\nexport default class RangeSlider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdate = update => {\n      this.setState({\n        update\n      });\n    };\n\n    const initialValues = [0, 300];\n    this.state = {\n      domain: [0, 300],\n      values: [...initialValues],\n      update: [...initialValues]\n    };\n  }\n\n  render() {\n    const {\n      domain,\n      values,\n      update\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, \"Update:\"), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, update.join(\"🍔\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"10%\",\n        height: 120,\n        width: \"80%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      mode: 2,\n      step: 1,\n      domain: domain,\n      rootStyle: {\n        position: \"relative\",\n        width: \"100%\"\n      },\n      onUpdate: this.onUpdate,\n      onChange: this.onChange,\n      values: values,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Rail, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, ({\n      getRailProps\n    }) => /*#__PURE__*/React.createElement(MuiRail, {\n      getRailProps: getRailProps,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 56\n      }\n    })), /*#__PURE__*/React.createElement(Handles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, ({\n      handles,\n      getHandleProps\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-handles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, handles.map(handle => /*#__PURE__*/React.createElement(MuiHandle, {\n      key: handle.id,\n      handle: handle,\n      domain: domain,\n      getHandleProps: getHandleProps,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Tracks, {\n      left: false,\n      right: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, ({\n      tracks,\n      getTrackProps\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-tracks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, tracks.map(({\n      id,\n      source,\n      target\n    }) => /*#__PURE__*/React.createElement(MuiTrack, {\n      key: id,\n      source: source,\n      target: target,\n      getTrackProps: getTrackProps,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/namduong/Documents/dev/shop-project/src/components/RangeSlider.js"],"names":["React","Component","ReactDOM","Grid","Typography","Slider","Rail","Handles","Tracks","MuiRail","MuiHandle","MuiTrack","RangeSlider","constructor","props","onUpdate","update","setState","initialValues","state","domain","values","render","join","margin","height","width","position","onChange","getRailProps","handles","getHandleProps","map","handle","id","tracks","getTrackProps","source","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Slider, Rail, Handles, Tracks } from \"react-compound-slider\";\nimport { MuiRail, MuiHandle, MuiTrack } from \"./components\";\n\nexport default class RangeSlider extends Component {\n    constructor(props) {\n        super(props);\n        const initialValues = [0, 300];\n        this.state = {\n            domain: [0, 300],\n            values: [...initialValues],\n            update: [...initialValues]\n        };\n    }\n\n    onUpdate = (update) => {\n        this.setState({ \n            update \n        });\n    };\n\n    render() {\n        const { domain, values, update } = this.state;\n        return (\n            <Grid container>\n                <Grid item xs={12}>\n                    <Typography>Update:</Typography>\n                    <Typography>{update.join(\"🍔\")}</Typography>\n                    <div style={{ margin: \"10%\", height: 120, width: \"80%\" }}>\n                        <Slider\n                            mode={2}\n                            step={1}\n                            domain={domain}\n                            rootStyle={{\n                                position: \"relative\",\n                                width: \"100%\"\n                            }}\n                            onUpdate={this.onUpdate}\n                            onChange={this.onChange}\n                            values={values}\n                        >\n                            <Rail>\n                                {({ getRailProps }) => <MuiRail getRailProps={getRailProps} />}\n                            </Rail>\n                            <Handles>\n                                {({ handles, getHandleProps }) => (\n                                <div className=\"slider-handles\">\n                                    {handles.map((handle) => (\n                                    <MuiHandle\n                                        key={handle.id}\n                                        handle={handle}\n                                        domain={domain}\n                                        getHandleProps={getHandleProps}\n                                    />\n                                    ))}\n                                </div>\n                                )}\n                            </Handles>\n                            <Tracks left={false} right={false}>\n                                {({ tracks, getTrackProps }) => (\n                                <div className=\"slider-tracks\">\n                                    {tracks.map(({ id, source, target }) => (\n                                    <MuiTrack\n                                        key={id}\n                                        source={source}\n                                        target={target}\n                                        getTrackProps={getTrackProps}\n                                    />\n                                    ))}\n                                </div>\n                                )}\n                            </Tracks>\n                        </Slider>\n                    </div>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}